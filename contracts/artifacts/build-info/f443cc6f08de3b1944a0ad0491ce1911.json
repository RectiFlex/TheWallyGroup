{
	"id": "f443cc6f08de3b1944a0ad0491ce1911",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/WallyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @dev Interface for Uniswap V2 Factory\n */\ninterface IUniswapV2Factory {\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n}\n\n/**\n * @dev Interface for Uniswap V2 Router\n */\ninterface IUniswapV2Router02 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    )\n        external\n        payable\n        returns (\n            uint amountToken,\n            uint amountETH,\n            uint liquidity\n        );\n}\n\n/**\n * @title WallyToken\n * @notice \n *  - Zero-tax ERC20 token\n *  - **AccessControl** with a designated DAO as `ADMIN_ROLE` (not the deployer EOA)\n *  - **Advanced Anti-Sniping**: (launchBlock sniper checks, optional cooldown)\n *  - Basic anti-bot features: (trading toggle, blacklist, max tx limit)\n *  - Liquidity management (Uniswap V2)\n *  - Rescue functions for stuck tokens/ETH\n *\n * @dev IMPORTANT: The DAO address must be a **secure** address (multi-sig or official DAO).\n */\ncontract WallyToken is ERC20, AccessControl, ReentrancyGuard {\n    // ---------- Roles ----------\n    bytes32 public constant ADMIN_ROLE  = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\n\n    // ---------- Supply Constants ----------\n    uint256 public constant INITIAL_SUPPLY = 20_000_000_000 * 10**18; // 20B tokens, 18 decimals\n\n    // ---------- DAO Address ----------\n    // Replace with your actual DAO (e.g., multi-sig or official Aragon DAO Agent).\n    address public constant DAO_ADDRESS = 0x633ea8fe424CD65AD4D4826e6581273afd06B8Ef;\n\n    // ---------- Uniswap V2 Addresses ----------\n    IUniswapV2Router02 public uniswapV2Router;\n    address public uniswapV2Pair;\n\n    // ---------- Basic Anti-Bot State ----------\n    bool public tradingEnabled = false;         // If false, only ADMIN_ROLE can transfer.\n    mapping(address => bool) public blacklist;  // Blacklisted addresses cannot transfer.\n    uint256 public maxTxAmount;                 // 0 => no limit.\n\n    // ---------- Advanced Anti-Sniping State ----------\n    bool public sniperProtectionEnabled = false; // If true, checks snipe blocks.\n    uint256 public snipeBlocks = 2;             // Number of blocks after launch to block bot buys.\n    uint256 public launchBlock;                 // Recorded when trading is first enabled.\n\n    // ---------- Optional Cooldown State ----------\n    bool public cooldownEnabled = false;         // If true, enforces time delay per address.\n    uint256 public cooldownTime = 30;            // E.g. 30s cooldown\n    mapping(address => uint256) public lastTxTimestamp; // Tracks last tx time\n\n    // ---------- Events ----------\n    event TradingEnabled(bool enabled);\n    event Blacklisted(address indexed account, bool isBlacklisted);\n    event MaxTxAmountUpdated(uint256 newMaxTx);\n    event SniperProtectionUpdated(bool enabled, uint256 snipeBlocks);\n    event CooldownUpdated(bool enabled, uint256 cooldownTime);\n\n    /**\n     * @dev Constructor\n     *  1) Mints the entire supply to the deployer (msg.sender).\n     *  2) Sets up roles so that only the DAO address has ADMIN_ROLE.\n     *  3) Creates a Uniswap V2 pair for (TWG / WETH).\n     *  4) Leaves the deployer with NO admin privileges by default, fulfilling the requirement \n     *     that the DAO is the sole admin from the start.\n     * \n     * @param _uniswapV2Router Address of the Uniswap V2 router (e.g., 0x7a250d563...)\n     */\n    constructor(address _uniswapV2Router) ERC20(\"Wally Token\", \"TWG\") {\n        require(_uniswapV2Router != address(0), \"Router cannot be zero address\");\n\n        // -------------------------\n        // 1) Mint initial supply\n        // -------------------------\n        _mint(msg.sender, INITIAL_SUPPLY);\n\n        // -------------------------\n        // 2) Setup roles\n        // -------------------------\n        // The DAO is the permanent admin\n        _grantRole(ADMIN_ROLE, DAO_ADDRESS);\n\n        // Optionally, the DAO can grant MINTER_ROLE / BURNER_ROLE to specific addresses\n        _setRoleAdmin(MINTER_ROLE, ADMIN_ROLE);\n        _setRoleAdmin(BURNER_ROLE, ADMIN_ROLE);\n\n        // Note: We do NOT assign ADMIN_ROLE to msg.sender (the deployer),\n        // ensuring that only the DAO address has admin privileges from inception.\n\n        // -------------------------\n        // 3) Setup Uniswap\n        // -------------------------\n        uniswapV2Router = IUniswapV2Router02(_uniswapV2Router);\n        address factory = uniswapV2Router.factory();\n        address weth = uniswapV2Router.WETH();\n\n        uniswapV2Pair = IUniswapV2Factory(factory).createPair(address(this), weth);\n\n        // -------------------------\n        // 4) Default settings\n        // -------------------------\n        maxTxAmount = 0; // No max limit by default\n    }\n\n    // -------------------------------------------------\n    //   Mint & Burn (Controlled by MINTER/BURNER)\n    // -------------------------------------------------\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    function burn(uint256 amount) external onlyRole(BURNER_ROLE) {\n        _burn(_msgSender(), amount);\n    }\n\n    // -------------------------------------------------\n    //   Trading Toggle & Anti-Sniping Setup (ADMIN)\n    // -------------------------------------------------\n\n    /**\n     * @dev Enables or disables trading. If enabling, records the `launchBlock` \n     *      for anti-sniping logic if `sniperProtectionEnabled` is true.\n     */\n    function setTradingEnabled(bool _enabled) external onlyRole(ADMIN_ROLE) {\n        tradingEnabled = _enabled;\n\n        // If turning on trading and sniperProtection is active, record the launch block.\n        if (_enabled && sniperProtectionEnabled) {\n            launchBlock = block.number;\n        }\n\n        emit TradingEnabled(_enabled);\n    }\n\n    /**\n     * @dev Turn sniper protection on or off, and set how many blocks to protect.\n     */\n    function setSniperProtection(bool _enabled, uint256 _snipeBlocks)\n        external\n        onlyRole(ADMIN_ROLE)\n    {\n        sniperProtectionEnabled = _enabled;\n        snipeBlocks = _snipeBlocks;\n        emit SniperProtectionUpdated(_enabled, _snipeBlocks);\n    }\n\n    /**\n     * @dev Toggle cooldown enforcement and set the cooldown duration in seconds.\n     */\n    function setCooldownConfig(bool _enabled, uint256 _cooldownTime)\n        external\n        onlyRole(ADMIN_ROLE)\n    {\n        cooldownEnabled = _enabled;\n        cooldownTime = _cooldownTime;\n        emit CooldownUpdated(_enabled, _cooldownTime);\n    }\n\n    // -------------------------------------------------\n    //   Blacklist & Max Tx (ADMIN)\n    // -------------------------------------------------\n\n    function setBlacklist(address account, bool isBlacklisted)\n        external\n        onlyRole(ADMIN_ROLE)\n    {\n        blacklist[account] = isBlacklisted;\n        emit Blacklisted(account, isBlacklisted);\n    }\n\n    function setMaxTxAmount(uint256 _maxTxAmount) external onlyRole(ADMIN_ROLE) {\n        maxTxAmount = _maxTxAmount;\n        emit MaxTxAmountUpdated(_maxTxAmount);\n    }\n\n    // -------------------------------------------------\n    //   Uniswap V2: Add Liquidity (ADMIN)\n    // -------------------------------------------------\n\n    /**\n     * @dev Add liquidity (TWG / ETH) on Uniswap. Must transfer `tokenAmountIn` to\n     *      this contract first, or do it in a two-transaction flow from a front-end.\n     */\n    function addLiquidityETH(\n        address to,\n        uint256 tokenAmountIn,\n        uint256 tokenAmountMin,\n        uint256 ethAmountMin,\n        uint256 deadline\n    )\n        external\n        payable\n        nonReentrant\n        onlyRole(ADMIN_ROLE)\n        returns (uint256 amountToken, uint256 amountETH, uint256 liquidity)\n    {\n        // Approve the router to spend tokens held by this contract\n        _approve(address(this), address(uniswapV2Router), tokenAmountIn);\n\n        (amountToken, amountETH, liquidity) = uniswapV2Router.addLiquidityETH{\n            value: msg.value\n        }(\n            address(this),\n            tokenAmountIn,\n            tokenAmountMin,\n            ethAmountMin,\n            to,\n            deadline\n        );\n    }\n\n    // -------------------------------------------------\n    //          Transfer Hook (Anti-Bot Logic)\n    // -------------------------------------------------\n\n    /**\n     * @dev Hook to enforce:\n     *  1) Trading toggle restrictions\n     *  2) Blacklist checks\n     *  3) Max transaction limit\n     *  4) Sniper protection (blocks initial sniping within `snipeBlocks` of enabling)\n     *  5) Optional per-address cooldown\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        // 1) Prevent blacklisted addresses from sending/receiving\n        require(!blacklist[from], \"WallyToken: Sender blacklisted\");\n        require(!blacklist[to],   \"WallyToken: Recipient blacklisted\");\n\n        // 2) If trading is disabled, only ADMIN_ROLE can transfer\n        if (!tradingEnabled) {\n            if (!hasRole(ADMIN_ROLE, from) && !hasRole(ADMIN_ROLE, to)) {\n                revert(\"WallyToken: Trading disabled\");\n            }\n        }\n\n        // 3) Max transaction limit\n        if (maxTxAmount > 0 && amount > maxTxAmount) {\n            revert(\"WallyToken: Exceeds maxTxAmount\");\n        }\n\n        // 4) Anti-Sniping: if sniperProtectionEnabled & trading is just enabled,\n        //    block buys during the first `snipeBlocks` blocks\n        if (\n            sniperProtectionEnabled &&\n            tradingEnabled &&\n            launchBlock > 0 &&\n            block.number <= (launchBlock + snipeBlocks)\n        ) {\n            // If this is a \"buy\" from the Uniswap Pair, block or revert\n            // (One can also forcibly blacklist `to` if desired.)\n            if (from == uniswapV2Pair) {\n                revert(\"WallyToken: Sniper buy blocked\");\n            }\n        }\n\n        // 5) Cooldown: if enabled, require each address to wait `cooldownTime` \n        //    seconds between transfers (unless it's admin or a pair).\n        if (cooldownEnabled) {\n            // Exempt: admin or if from/to is the pair\n            bool isExempt = hasRole(ADMIN_ROLE, from)\n                || hasRole(ADMIN_ROLE, to)\n                || from == uniswapV2Pair\n                || to == uniswapV2Pair;\n            \n            if (!isExempt) {\n                require(\n                    block.timestamp >= lastTxTimestamp[from] + cooldownTime,\n                    \"WallyToken: Must wait for cooldown\"\n                );\n                lastTxTimestamp[from] = block.timestamp;\n            }\n        }\n\n    }\n\n    // -------------------------------------------------\n    //   Recover Stuck Tokens / ETH (ADMIN)\n    // -------------------------------------------------\n\n    function rescueTokens(address tokenAddress, uint256 amount, address to)\n        external\n        onlyRole(ADMIN_ROLE)\n    {\n        require(to != address(0), \"Invalid 'to'\");\n        ERC20(tokenAddress).transfer(to, amount);\n    }\n\n    function rescueETH(address payable to, uint256 amount)\n        external\n        onlyRole(ADMIN_ROLE)\n    {\n        require(to != address(0), \"Invalid 'to'\");\n        (bool success, ) = to.call{value: amount}(\"\");\n        require(success, \"ETH transfer failed\");\n    }\n\n    // Accept ETH\n    receive() external payable {}\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 603,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 609,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 611,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 613,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 615,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WallyToken.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for Uniswap V2 Factory",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Uniswap V2 Factory\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WallyToken.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/WallyToken.sol\":{\"keccak256\":\"0x47c5513d5c4b5001ad2c387e7743538c55bab70c3a65c8812d421bba82c8c758\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28dc785d1c4216d89229b4ff6a26a3336787e81b5eb17929282be351be66bcb9\",\"dweb:/ipfs/QmS9VAXvhrHLFQvyLgMFCYzQXjHzozK6bhFxvg9VB2AKpu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for Uniswap V2 Router",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Uniswap V2 Router\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WallyToken.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/WallyToken.sol\":{\"keccak256\":\"0x47c5513d5c4b5001ad2c387e7743538c55bab70c3a65c8812d421bba82c8c758\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28dc785d1c4216d89229b4ff6a26a3336787e81b5eb17929282be351be66bcb9\",\"dweb:/ipfs/QmS9VAXvhrHLFQvyLgMFCYzQXjHzozK6bhFxvg9VB2AKpu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"WallyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_uniswapV2Router",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isBlacklisted",
									"type": "bool"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cooldownTime",
									"type": "uint256"
								}
							],
							"name": "CooldownUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxTx",
									"type": "uint256"
								}
							],
							"name": "MaxTxAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "snipeBlocks",
									"type": "uint256"
								}
							],
							"name": "SniperProtectionUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "TradingEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DAO_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmountMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ethAmountMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldownEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldownTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastTxTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "launchBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTxAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isBlacklisted",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_cooldownTime",
									"type": "uint256"
								}
							],
							"name": "setCooldownConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxTxAmount",
									"type": "uint256"
								}
							],
							"name": "setMaxTxAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_snipeBlocks",
									"type": "uint256"
								}
							],
							"name": "setSniperProtection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "setTradingEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snipeBlocks",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sniperProtectionEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "IMPORTANT: The DAO address must be a **secure** address (multi-sig or official DAO).",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"addLiquidityETH(address,uint256,uint256,uint256,uint256)": {
								"details": "Add liquidity (TWG / ETH) on Uniswap. Must transfer `tokenAmountIn` to      this contract first, or do it in a two-transaction flow from a front-end."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Constructor  1) Mints the entire supply to the deployer (msg.sender).  2) Sets up roles so that only the DAO address has ADMIN_ROLE.  3) Creates a Uniswap V2 pair for (TWG / WETH).  4) Leaves the deployer with NO admin privileges by default, fulfilling the requirement      that the DAO is the sole admin from the start. ",
								"params": {
									"_uniswapV2Router": "Address of the Uniswap V2 router (e.g., 0x7a250d563...)"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setCooldownConfig(bool,uint256)": {
								"details": "Toggle cooldown enforcement and set the cooldown duration in seconds."
							},
							"setSniperProtection(bool,uint256)": {
								"details": "Turn sniper protection on or off, and set how many blocks to protect."
							},
							"setTradingEnabled(bool)": {
								"details": "Enables or disables trading. If enabling, records the `launchBlock`       for anti-sniping logic if `sniperProtectionEnabled` is true."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"title": "WallyToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WallyToken.sol\":1423:11955  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/WallyToken.sol\":2296:2301  false */\n  0x00\n    /* \"contracts/WallyToken.sol\":2267:2301  bool public tradingEnabled = false */\n  0x08\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WallyToken.sol\":2610:2615  false */\n  0x00\n    /* \"contracts/WallyToken.sol\":2572:2615  bool public sniperProtectionEnabled = false */\n  0x0b\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WallyToken.sol\":2683:2684  2 */\n  0x02\n    /* \"contracts/WallyToken.sol\":2654:2684  uint256 public snipeBlocks = 2 */\n  0x0c\n  sstore\n    /* \"contracts/WallyToken.sol\":2929:2934  false */\n  0x00\n    /* \"contracts/WallyToken.sol\":2899:2934  bool public cooldownEnabled = false */\n  0x0e\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WallyToken.sol\":3023:3025  30 */\n  0x1e\n    /* \"contracts/WallyToken.sol\":2993:3025  uint256 public cooldownTime = 30 */\n  0x0f\n  sstore\n    /* \"contracts/WallyToken.sol\":3948:5298  constructor(address _uniswapV2Router) ERC20(\"Wally Token\", \"TWG\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x57616c6c7920546f6b656e000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5457470000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/WallyToken.sol\":4060:4061  0 */\n  0x00\n    /* \"contracts/WallyToken.sol\":4032:4062  _uniswapV2Router != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/WallyToken.sol\":4032:4048  _uniswapV2Router */\n  dup2\n    /* \"contracts/WallyToken.sol\":4032:4062  _uniswapV2Router != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/WallyToken.sol\":4024:4096  require(_uniswapV2Router != address(0), \"Router cannot be zero address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"contracts/WallyToken.sol\":4215:4248  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_16\n    /* \"contracts/WallyToken.sol\":4221:4231  msg.sender */\n  caller\n    /* \"contracts/WallyToken.sol\":1816:1839  20_000_000_000 * 10**18 */\n  0x409f9cbc7c4a04c220000000\n    /* \"contracts/WallyToken.sol\":4215:4220  _mint */\n  shl(0x20, tag_17)\n    /* \"contracts/WallyToken.sol\":4215:4248  _mint(msg.sender, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"contracts/WallyToken.sol\":4401:4436  _grantRole(ADMIN_ROLE, DAO_ADDRESS) */\n  tag_18\n    /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/WallyToken.sol\":2036:2078  0x633ea8fe424CD65AD4D4826e6581273afd06B8Ef */\n  0x633ea8fe424cd65ad4d4826e6581273afd06b8ef\n    /* \"contracts/WallyToken.sol\":4401:4411  _grantRole */\n  shl(0x20, tag_19)\n    /* \"contracts/WallyToken.sol\":4401:4436  _grantRole(ADMIN_ROLE, DAO_ADDRESS) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/WallyToken.sol\":4536:4574  _setRoleAdmin(MINTER_ROLE, ADMIN_ROLE) */\n  tag_20\n    /* \"contracts/WallyToken.sol\":1630:1654  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/WallyToken.sol\":4536:4549  _setRoleAdmin */\n  shl(0x20, tag_21)\n    /* \"contracts/WallyToken.sol\":4536:4574  _setRoleAdmin(MINTER_ROLE, ADMIN_ROLE) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/WallyToken.sol\":4584:4622  _setRoleAdmin(BURNER_ROLE, ADMIN_ROLE) */\n  tag_22\n    /* \"contracts/WallyToken.sol\":1698:1722  keccak256(\"BURNER_ROLE\") */\n  0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n    /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/WallyToken.sol\":4584:4597  _setRoleAdmin */\n  shl(0x20, tag_21)\n    /* \"contracts/WallyToken.sol\":4584:4622  _setRoleAdmin(BURNER_ROLE, ADMIN_ROLE) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/WallyToken.sol\":4931:4947  _uniswapV2Router */\n  dup1\n    /* \"contracts/WallyToken.sol\":4894:4909  uniswapV2Router */\n  0x07\n  0x00\n    /* \"contracts/WallyToken.sol\":4894:4948  uniswapV2Router = IUniswapV2Router02(_uniswapV2Router) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WallyToken.sol\":4958:4973  address factory */\n  0x00\n    /* \"contracts/WallyToken.sol\":4976:4991  uniswapV2Router */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/WallyToken.sol\":4976:4999  uniswapV2Router.factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc45a0155\n    /* \"contracts/WallyToken.sol\":4976:5001  uniswapV2Router.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_24\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_24:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_25\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_25:\n    /* \"contracts/WallyToken.sol\":4958:5001  address factory = uniswapV2Router.factory() */\n  swap1\n  pop\n    /* \"contracts/WallyToken.sol\":5011:5023  address weth */\n  0x00\n    /* \"contracts/WallyToken.sol\":5026:5041  uniswapV2Router */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/WallyToken.sol\":5026:5046  uniswapV2Router.WETH */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xad5c4648\n    /* \"contracts/WallyToken.sol\":5026:5048  uniswapV2Router.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_28\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_28:\n    /* \"contracts/WallyToken.sol\":5011:5048  address weth = uniswapV2Router.WETH() */\n  swap1\n  pop\n    /* \"contracts/WallyToken.sol\":5093:5100  factory */\n  dup2\n    /* \"contracts/WallyToken.sol\":5075:5112  IUniswapV2Factory(factory).createPair */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc9c65396\n    /* \"contracts/WallyToken.sol\":5121:5125  this */\n  address\n    /* \"contracts/WallyToken.sol\":5128:5132  weth */\n  dup4\n    /* \"contracts/WallyToken.sol\":5075:5133  IUniswapV2Factory(factory).createPair(address(this), weth) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap3\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_32\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_32:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_33\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_33:\n    /* \"contracts/WallyToken.sol\":5059:5072  uniswapV2Pair */\n  0x08\n  0x00\n    /* \"contracts/WallyToken.sol\":5059:5133  uniswapV2Pair = IUniswapV2Factory(factory).createPair(address(this), weth) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WallyToken.sol\":5263:5264  0 */\n  0x00\n    /* \"contracts/WallyToken.sol\":5249:5260  maxTxAmount */\n  0x0a\n    /* \"contracts/WallyToken.sol\":5249:5264  maxTxAmount = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/WallyToken.sol\":4014:5298  {... */\n  pop\n  pop\n    /* \"contracts/WallyToken.sol\":3948:5298  constructor(address _uniswapV2Router) ERC20(\"Wally Token\", \"TWG\") {... */\n  pop\n    /* \"contracts/WallyToken.sol\":1423:11955  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  jump(tag_34)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_17:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_39\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_40)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_42\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_43)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_45\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_46)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_41)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_41:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5698:5945  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\ntag_21:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5781:5806  bytes32 previousAdminRole */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5827  getRoleAdmin(role) */\n  tag_49\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5822:5826  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5821  getRoleAdmin */\n  shl(0x20, tag_50)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5827  getRoleAdmin(role) */\n  0x20\n  shr\n  jump\t// in\ntag_49:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5781:5827  bytes32 previousAdminRole = getRoleAdmin(role) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5862:5871  adminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5843  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5849  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5844:5848  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5849  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5859  _roles[role].adminRole */\n  0x01\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5871  _roles[role].adminRole = adminRole */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5928:5937  adminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5909:5926  previousAdminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5903:5907  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5771:5945  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5698:5945  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_53\n  swap2\n  swap1\n  tag_54\n  jump\t// in\ntag_53:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_55)\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_56\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_57\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_58\n  jump\t// in\ntag_57:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_55:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_59\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_60)\ntag_59:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_60:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_61\n  swap2\n  swap1\n  tag_62\n  jump\t// in\ntag_61:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\ntag_50:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0x01\n  add\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_67:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_69:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_70:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_105\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_69\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_71:\n    /* \"#utility.yul\":641:665   */\n  tag_107\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_70\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_108:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_72:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_110\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_71\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_113\n  tag_67\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":932:1051   */\ntag_112:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_114\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_72\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_73:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_74:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_75:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_76:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_119\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_119:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_120\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_121\n  tag_75\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":1909:1993   */\ntag_120:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_77:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_78:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_79:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_80:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_126\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_79\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":2624:2663   */\n  tag_127\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_79\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_81:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_82:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_83:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_131\n    /* \"#utility.yul\":3013:3047   */\n  tag_132\n    /* \"#utility.yul\":3022:3046   */\n  tag_133\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_81\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3013:3047   */\n  tag_82\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":2995:3048   */\n  tag_81\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_84:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_85:\n    /* \"#utility.yul\":3251:3290   */\n  tag_136\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_83\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3312:3403   */\n  tag_137\n    /* \"#utility.yul\":3361:3402   */\n  tag_138\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_84\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_80\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_86:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3482:3483   */\n  0x00\n    /* \"#utility.yul\":3475:3483   */\n  swap1\n  pop\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_87:\n    /* \"#utility.yul\":3572:3604   */\n  tag_141\n  tag_86\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3613:3678   */\n  tag_142\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_85\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_88:\n    /* \"#utility.yul\":3750:3870   */\ntag_144:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_147\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_87\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_144)\ntag_146:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_89:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_150\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_77\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4101:4130   */\n  tag_151\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_78\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_152:\n    /* \"#utility.yul\":4328:4408   */\n  tag_153\n    /* \"#utility.yul\":4384:4406   */\n  tag_154\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_78\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_88\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_149:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_90:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_91:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_157\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_90\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_92:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_159\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_91\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_161\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_73\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_163\n  tag_74\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":5233:5289   */\ntag_162:\n    /* \"#utility.yul\":5313:5351   */\n  tag_164\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_76\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5398:5465   */\n  tag_165\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_89\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_167\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_168:\n    /* \"#utility.yul\":6339:6406   */\n  tag_169\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_92\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_166)\n    /* \"#utility.yul\":5560:6178   */\ntag_167:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_170\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_77\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_171:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_171)\ntag_173:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_175\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_91\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_174:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_166:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6598   */\ntag_93:\n    /* \"#utility.yul\":6513:6524   */\n  0x00\n    /* \"#utility.yul\":6547:6553   */\n  dup3\n    /* \"#utility.yul\":6542:6545   */\n  dup3\n    /* \"#utility.yul\":6535:6554   */\n  mstore\n    /* \"#utility.yul\":6587:6591   */\n  0x20\n    /* \"#utility.yul\":6582:6585   */\n  dup3\n    /* \"#utility.yul\":6578:6592   */\n  add\n    /* \"#utility.yul\":6563:6592   */\n  swap1\n  pop\n    /* \"#utility.yul\":6429:6598   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6604:6783   */\ntag_94:\n    /* \"#utility.yul\":6744:6775   */\n  0x526f757465722063616e6e6f74206265207a65726f2061646472657373000000\n    /* \"#utility.yul\":6740:6741   */\n  0x00\n    /* \"#utility.yul\":6732:6738   */\n  dup3\n    /* \"#utility.yul\":6728:6742   */\n  add\n    /* \"#utility.yul\":6721:6776   */\n  mstore\n    /* \"#utility.yul\":6604:6783   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6789:7155   */\ntag_95:\n    /* \"#utility.yul\":6931:6934   */\n  0x00\n    /* \"#utility.yul\":6952:7019   */\n  tag_179\n    /* \"#utility.yul\":7016:7018   */\n  0x1d\n    /* \"#utility.yul\":7011:7014   */\n  dup4\n    /* \"#utility.yul\":6952:7019   */\n  tag_93\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":6945:7019   */\n  swap2\n  pop\n    /* \"#utility.yul\":7028:7121   */\n  tag_180\n    /* \"#utility.yul\":7117:7120   */\n  dup3\n    /* \"#utility.yul\":7028:7121   */\n  tag_94\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":7146:7148   */\n  0x20\n    /* \"#utility.yul\":7141:7144   */\n  dup3\n    /* \"#utility.yul\":7137:7149   */\n  add\n    /* \"#utility.yul\":7130:7149   */\n  swap1\n  pop\n    /* \"#utility.yul\":6789:7155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7161:7580   */\ntag_15:\n    /* \"#utility.yul\":7327:7331   */\n  0x00\n    /* \"#utility.yul\":7365:7367   */\n  0x20\n    /* \"#utility.yul\":7354:7363   */\n  dup3\n    /* \"#utility.yul\":7350:7368   */\n  add\n    /* \"#utility.yul\":7342:7368   */\n  swap1\n  pop\n    /* \"#utility.yul\":7414:7423   */\n  dup2\n    /* \"#utility.yul\":7408:7412   */\n  dup2\n    /* \"#utility.yul\":7404:7424   */\n  sub\n    /* \"#utility.yul\":7400:7401   */\n  0x00\n    /* \"#utility.yul\":7389:7398   */\n  dup4\n    /* \"#utility.yul\":7385:7402   */\n  add\n    /* \"#utility.yul\":7378:7425   */\n  mstore\n    /* \"#utility.yul\":7442:7573   */\n  tag_182\n    /* \"#utility.yul\":7568:7572   */\n  dup2\n    /* \"#utility.yul\":7442:7573   */\n  tag_95\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7434:7573   */\n  swap1\n  pop\n    /* \"#utility.yul\":7161:7580   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7586:7704   */\ntag_96:\n    /* \"#utility.yul\":7673:7697   */\n  tag_184\n    /* \"#utility.yul\":7691:7696   */\n  dup2\n    /* \"#utility.yul\":7673:7697   */\n  tag_70\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7668:7671   */\n  dup3\n    /* \"#utility.yul\":7661:7698   */\n  mstore\n    /* \"#utility.yul\":7586:7704   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7710:8042   */\ntag_30:\n    /* \"#utility.yul\":7831:7835   */\n  0x00\n    /* \"#utility.yul\":7869:7871   */\n  0x40\n    /* \"#utility.yul\":7858:7867   */\n  dup3\n    /* \"#utility.yul\":7854:7872   */\n  add\n    /* \"#utility.yul\":7846:7872   */\n  swap1\n  pop\n    /* \"#utility.yul\":7882:7953   */\n  tag_186\n    /* \"#utility.yul\":7950:7951   */\n  0x00\n    /* \"#utility.yul\":7939:7948   */\n  dup4\n    /* \"#utility.yul\":7935:7952   */\n  add\n    /* \"#utility.yul\":7926:7932   */\n  dup6\n    /* \"#utility.yul\":7882:7953   */\n  tag_96\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7963:8035   */\n  tag_187\n    /* \"#utility.yul\":8031:8033   */\n  0x20\n    /* \"#utility.yul\":8020:8029   */\n  dup4\n    /* \"#utility.yul\":8016:8034   */\n  add\n    /* \"#utility.yul\":8007:8013   */\n  dup5\n    /* \"#utility.yul\":7963:8035   */\n  tag_96\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7710:8042   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8048:8270   */\ntag_38:\n    /* \"#utility.yul\":8141:8145   */\n  0x00\n    /* \"#utility.yul\":8179:8181   */\n  0x20\n    /* \"#utility.yul\":8168:8177   */\n  dup3\n    /* \"#utility.yul\":8164:8182   */\n  add\n    /* \"#utility.yul\":8156:8182   */\n  swap1\n  pop\n    /* \"#utility.yul\":8192:8263   */\n  tag_189\n    /* \"#utility.yul\":8260:8261   */\n  0x00\n    /* \"#utility.yul\":8249:8258   */\n  dup4\n    /* \"#utility.yul\":8245:8262   */\n  add\n    /* \"#utility.yul\":8236:8242   */\n  dup5\n    /* \"#utility.yul\":8192:8263   */\n  tag_96\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8048:8270   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8276:8456   */\ntag_97:\n    /* \"#utility.yul\":8324:8401   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8321:8322   */\n  0x00\n    /* \"#utility.yul\":8314:8402   */\n  mstore\n    /* \"#utility.yul\":8421:8425   */\n  0x11\n    /* \"#utility.yul\":8418:8419   */\n  0x04\n    /* \"#utility.yul\":8411:8426   */\n  mstore\n    /* \"#utility.yul\":8445:8449   */\n  0x24\n    /* \"#utility.yul\":8442:8443   */\n  0x00\n    /* \"#utility.yul\":8435:8450   */\n  revert\n    /* \"#utility.yul\":8462:8653   */\ntag_54:\n    /* \"#utility.yul\":8502:8505   */\n  0x00\n    /* \"#utility.yul\":8521:8541   */\n  tag_192\n    /* \"#utility.yul\":8539:8540   */\n  dup3\n    /* \"#utility.yul\":8521:8541   */\n  tag_81\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8516:8541   */\n  swap2\n  pop\n    /* \"#utility.yul\":8555:8575   */\n  tag_193\n    /* \"#utility.yul\":8573:8574   */\n  dup4\n    /* \"#utility.yul\":8555:8575   */\n  tag_81\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8550:8575   */\n  swap3\n  pop\n    /* \"#utility.yul\":8598:8599   */\n  dup3\n    /* \"#utility.yul\":8595:8596   */\n  dup3\n    /* \"#utility.yul\":8591:8600   */\n  add\n    /* \"#utility.yul\":8584:8600   */\n  swap1\n  pop\n    /* \"#utility.yul\":8619:8622   */\n  dup1\n    /* \"#utility.yul\":8616:8617   */\n  dup3\n    /* \"#utility.yul\":8613:8623   */\n  gt\n    /* \"#utility.yul\":8610:8646   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":8626:8644   */\n  tag_195\n  tag_97\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":8610:8646   */\ntag_194:\n    /* \"#utility.yul\":8462:8653   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8659:8777   */\ntag_98:\n    /* \"#utility.yul\":8746:8770   */\n  tag_197\n    /* \"#utility.yul\":8764:8769   */\n  dup2\n    /* \"#utility.yul\":8746:8770   */\n  tag_81\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":8741:8744   */\n  dup3\n    /* \"#utility.yul\":8734:8771   */\n  mstore\n    /* \"#utility.yul\":8659:8777   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8783:9225   */\ntag_58:\n    /* \"#utility.yul\":8932:8936   */\n  0x00\n    /* \"#utility.yul\":8970:8972   */\n  0x60\n    /* \"#utility.yul\":8959:8968   */\n  dup3\n    /* \"#utility.yul\":8955:8973   */\n  add\n    /* \"#utility.yul\":8947:8973   */\n  swap1\n  pop\n    /* \"#utility.yul\":8983:9054   */\n  tag_199\n    /* \"#utility.yul\":9051:9052   */\n  0x00\n    /* \"#utility.yul\":9040:9049   */\n  dup4\n    /* \"#utility.yul\":9036:9053   */\n  add\n    /* \"#utility.yul\":9027:9033   */\n  dup7\n    /* \"#utility.yul\":8983:9054   */\n  tag_96\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9064:9136   */\n  tag_200\n    /* \"#utility.yul\":9132:9134   */\n  0x20\n    /* \"#utility.yul\":9121:9130   */\n  dup4\n    /* \"#utility.yul\":9117:9135   */\n  add\n    /* \"#utility.yul\":9108:9114   */\n  dup6\n    /* \"#utility.yul\":9064:9136   */\n  tag_98\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9146:9218   */\n  tag_201\n    /* \"#utility.yul\":9214:9216   */\n  0x40\n    /* \"#utility.yul\":9203:9212   */\n  dup4\n    /* \"#utility.yul\":9199:9217   */\n  add\n    /* \"#utility.yul\":9190:9196   */\n  dup5\n    /* \"#utility.yul\":9146:9218   */\n  tag_98\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":8783:9225   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9231:9453   */\ntag_62:\n    /* \"#utility.yul\":9324:9328   */\n  0x00\n    /* \"#utility.yul\":9362:9364   */\n  0x20\n    /* \"#utility.yul\":9351:9360   */\n  dup3\n    /* \"#utility.yul\":9347:9365   */\n  add\n    /* \"#utility.yul\":9339:9365   */\n  swap1\n  pop\n    /* \"#utility.yul\":9375:9446   */\n  tag_203\n    /* \"#utility.yul\":9443:9444   */\n  0x00\n    /* \"#utility.yul\":9432:9441   */\n  dup4\n    /* \"#utility.yul\":9428:9445   */\n  add\n    /* \"#utility.yul\":9419:9425   */\n  dup5\n    /* \"#utility.yul\":9375:9446   */\n  tag_98\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9231:9453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/WallyToken.sol\":1423:11955  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\ntag_34:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WallyToken.sol\":1423:11955  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xb319c6b7\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xec28438a\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf68ded66\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xf6f1e306\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf9f92be4\n      eq\n      tag_44\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0xb319c6b7\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xb37fd190\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xc2e5ec04\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd00efb2f\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_38\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x95d89b41\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x963472f9\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xa985ceef\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0x70a08231\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x89900603\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8c0b5e22\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x2be29fa8\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x40c10f19\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x4551bbe9\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x48fca59d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x49bd5a5e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x4ada218b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x2be29fa8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x1694505e\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x1694505e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x282c51f3\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x099a04e5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      revert(0x00, 0x00)\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":11633:11900  function rescueETH(address payable to, uint256 amount)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      revert(0x00, 0x00)\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/WallyToken.sol\":7258:7468  function setBlacklist(address account, bool isBlacklisted)... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      revert(0x00, 0x00)\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/WallyToken.sol\":2135:2176  IUniswapV2Router02 public uniswapV2Router */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      revert(0x00, 0x00)\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      revert(0x00, 0x00)\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      revert(0x00, 0x00)\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":1660:1722  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      revert(0x00, 0x00)\n    tag_105:\n      pop\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":2654:2684  uint256 public snipeBlocks = 2 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      revert(0x00, 0x00)\n    tag_109:\n      pop\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      revert(0x00, 0x00)\n    tag_113:\n      pop\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n    tag_114:\n      stop\n        /* \"contracts/WallyToken.sol\":1775:1839  uint256 public constant INITIAL_SUPPLY = 20_000_000_000 * 10**18 */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      revert(0x00, 0x00)\n    tag_118:\n      pop\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      revert(0x00, 0x00)\n    tag_122:\n      pop\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      revert(0x00, 0x00)\n    tag_127:\n      pop\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      stop\n        /* \"contracts/WallyToken.sol\":5469:5576  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      revert(0x00, 0x00)\n    tag_131:\n      pop\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      stop\n        /* \"contracts/WallyToken.sol\":5582:5687  function burn(uint256 amount) external onlyRole(BURNER_ROLE) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      revert(0x00, 0x00)\n    tag_135:\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n    tag_136:\n      stop\n        /* \"contracts/WallyToken.sol\":3063:3113  mapping(address => uint256) public lastTxTimestamp */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      revert(0x00, 0x00)\n    tag_140:\n      pop\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      tag_144\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":6850:7101  function setCooldownConfig(bool _enabled, uint256 _cooldownTime)... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      revert(0x00, 0x00)\n    tag_146:\n      pop\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      tag_150\n      jump\t// in\n    tag_147:\n      stop\n        /* \"contracts/WallyToken.sol\":2182:2210  address public uniswapV2Pair */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      revert(0x00, 0x00)\n    tag_151:\n      pop\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":2267:2301  bool public tradingEnabled = false */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      revert(0x00, 0x00)\n    tag_156:\n      pop\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      revert(0x00, 0x00)\n    tag_160:\n      pop\n      tag_161\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":1525:1586  bytes32 public constant ADMIN_ROLE  = keccak256(\"ADMIN_ROLE\") */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      revert(0x00, 0x00)\n    tag_165:\n      pop\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":6481:6746  function setSniperProtection(bool _enabled, uint256 _snipeBlocks)... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      revert(0x00, 0x00)\n    tag_169:\n      pop\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_171:\n      tag_172\n      jump\t// in\n    tag_170:\n      stop\n        /* \"contracts/WallyToken.sol\":2448:2474  uint256 public maxTxAmount */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      revert(0x00, 0x00)\n    tag_173:\n      pop\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      revert(0x00, 0x00)\n    tag_177:\n      pop\n      tag_178\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_179:\n      tag_180\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      revert(0x00, 0x00)\n    tag_182:\n      pop\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      tag_185\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":2572:2615  bool public sniperProtectionEnabled = false */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      revert(0x00, 0x00)\n    tag_186:\n      pop\n      tag_187\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_190\n      jumpi\n      revert(0x00, 0x00)\n    tag_190:\n      pop\n      tag_191\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_194\n      jumpi\n      revert(0x00, 0x00)\n    tag_194:\n      pop\n      tag_195\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_196:\n      tag_197\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      tag_198\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":2899:2934  bool public cooldownEnabled = false */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_199\n      jumpi\n      revert(0x00, 0x00)\n    tag_199:\n      pop\n      tag_200\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":2993:3025  uint256 public cooldownTime = 30 */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_203\n      jumpi\n      revert(0x00, 0x00)\n    tag_203:\n      pop\n      tag_204\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":11397:11627  function rescueTokens(address tokenAddress, uint256 amount, address to)... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_207\n      jumpi\n      revert(0x00, 0x00)\n    tag_207:\n      pop\n      tag_208\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      tag_211\n      jump\t// in\n    tag_208:\n      stop\n        /* \"contracts/WallyToken.sol\":6031:6377  function setTradingEnabled(bool _enabled) external onlyRole(ADMIN_ROLE) {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_212\n      jumpi\n      revert(0x00, 0x00)\n    tag_212:\n      pop\n      tag_213\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      tag_216\n      jump\t// in\n    tag_213:\n      stop\n        /* \"contracts/WallyToken.sol\":2754:2780  uint256 public launchBlock */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_217\n      jumpi\n      revert(0x00, 0x00)\n    tag_217:\n      pop\n      tag_218\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      tag_220\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":1592:1654  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_221\n      jumpi\n      revert(0x00, 0x00)\n    tag_221:\n      pop\n      tag_222\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      tag_224\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_225\n      jumpi\n      revert(0x00, 0x00)\n    tag_225:\n      pop\n      tag_226\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_227\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_227:\n      tag_228\n      jump\t// in\n    tag_226:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_229\n      jumpi\n      revert(0x00, 0x00)\n    tag_229:\n      pop\n      tag_230\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      tag_233\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      tag_234\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":7474:7640  function setMaxTxAmount(uint256 _maxTxAmount) external onlyRole(ADMIN_ROLE) {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_235\n      jumpi\n      revert(0x00, 0x00)\n    tag_235:\n      pop\n      tag_236\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_237:\n      tag_238\n      jump\t// in\n    tag_236:\n      stop\n        /* \"contracts/WallyToken.sol\":1998:2078  address public constant DAO_ADDRESS = 0x633ea8fe424CD65AD4D4826e6581273afd06B8Ef */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_239\n      jumpi\n      revert(0x00, 0x00)\n    tag_239:\n      pop\n      tag_240\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      tag_242\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":7989:8747  function addLiquidityETH(... */\n    tag_43:\n      tag_243\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      tag_246\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      tag_247\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":2358:2399  mapping(address => bool) public blacklist */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_249\n      jumpi\n      revert(0x00, 0x00)\n    tag_249:\n      pop\n      tag_250\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_251:\n      tag_252\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      tag_253\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_255\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_257\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_259\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_261\n      swap1\n      tag_260\n      jump\t// in\n    tag_261:\n      dup1\n      iszero\n      tag_262\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_263\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_262)\n    tag_263:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_264:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_264\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_262:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":11633:11900  function rescueETH(address payable to, uint256 amount)... */\n    tag_76:\n        /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_271\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/WallyToken.sol\":11770:11771  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":11756:11772  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WallyToken.sol\":11756:11758  to */\n      dup4\n        /* \"contracts/WallyToken.sol\":11756:11772  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/WallyToken.sol\":11748:11789  require(to != address(0), \"Invalid 'to'\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"contracts/WallyToken.sol\":11800:11812  bool success */\n      0x00\n        /* \"contracts/WallyToken.sol\":11818:11820  to */\n      dup4\n        /* \"contracts/WallyToken.sol\":11818:11825  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WallyToken.sol\":11833:11839  amount */\n      dup4\n        /* \"contracts/WallyToken.sol\":11818:11844  to.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_277\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_281\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_280)\n    tag_281:\n      0x60\n      swap2\n      pop\n    tag_280:\n      pop\n        /* \"contracts/WallyToken.sol\":11799:11844  (bool success, ) = to.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/WallyToken.sol\":11862:11869  success */\n      dup1\n        /* \"contracts/WallyToken.sol\":11854:11893  require(success, \"ETH transfer failed\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_282:\n        /* \"contracts/WallyToken.sol\":11738:11900  {... */\n      pop\n        /* \"contracts/WallyToken.sol\":11633:11900  function rescueETH(address payable to, uint256 amount)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":7258:7468  function setBlacklist(address account, bool isBlacklisted)... */\n    tag_81:\n        /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_286\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/WallyToken.sol\":7398:7411  isBlacklisted */\n      dup2\n        /* \"contracts/WallyToken.sol\":7377:7386  blacklist */\n      0x09\n        /* \"contracts/WallyToken.sol\":7377:7395  blacklist[account] */\n      0x00\n        /* \"contracts/WallyToken.sol\":7387:7394  account */\n      dup6\n        /* \"contracts/WallyToken.sol\":7377:7395  blacklist[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/WallyToken.sol\":7377:7411  blacklist[account] = isBlacklisted */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/WallyToken.sol\":7438:7445  account */\n      dup3\n        /* \"contracts/WallyToken.sol\":7426:7461  Blacklisted(account, isBlacklisted) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8\n        /* \"contracts/WallyToken.sol\":7447:7460  isBlacklisted */\n      dup4\n        /* \"contracts/WallyToken.sol\":7426:7461  Blacklisted(account, isBlacklisted) */\n      mload(0x40)\n      tag_288\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/WallyToken.sol\":7258:7468  function setBlacklist(address account, bool isBlacklisted)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":2135:2176  IUniswapV2Router02 public uniswapV2Router */\n    tag_84:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":1660:1722  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_107:\n        /* \"contracts/WallyToken.sol\":1698:1722  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"contracts/WallyToken.sol\":1660:1722  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":2654:2684  uint256 public snipeBlocks = 2 */\n    tag_111:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_297\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_299\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_301\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_302\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_301:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":1775:1839  uint256 public constant INITIAL_SUPPLY = 20_000_000_000 * 10**18 */\n    tag_120:\n        /* \"contracts/WallyToken.sol\":1816:1839  20_000_000_000 * 10**18 */\n      0x409f9cbc7c4a04c220000000\n        /* \"contracts/WallyToken.sol\":1775:1839  uint256 public constant INITIAL_SUPPLY = 20_000_000_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_305\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_307\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_308\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_307:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":5469:5576  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n    tag_134:\n        /* \"contracts/WallyToken.sol\":1630:1654  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_310\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_310:\n        /* \"contracts/WallyToken.sol\":5552:5569  _mint(to, amount) */\n      tag_312\n        /* \"contracts/WallyToken.sol\":5558:5560  to */\n      dup4\n        /* \"contracts/WallyToken.sol\":5562:5568  amount */\n      dup4\n        /* \"contracts/WallyToken.sol\":5552:5557  _mint */\n      tag_313\n        /* \"contracts/WallyToken.sol\":5552:5569  _mint(to, amount) */\n      jump\t// in\n    tag_312:\n        /* \"contracts/WallyToken.sol\":5469:5576  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":5582:5687  function burn(uint256 amount) external onlyRole(BURNER_ROLE) {... */\n    tag_139:\n        /* \"contracts/WallyToken.sol\":1698:1722  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_315\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_315:\n        /* \"contracts/WallyToken.sol\":5653:5680  _burn(_msgSender(), amount) */\n      tag_317\n        /* \"contracts/WallyToken.sol\":5659:5671  _msgSender() */\n      tag_318\n        /* \"contracts/WallyToken.sol\":5659:5669  _msgSender */\n      tag_267\n        /* \"contracts/WallyToken.sol\":5659:5671  _msgSender() */\n      jump\t// in\n    tag_318:\n        /* \"contracts/WallyToken.sol\":5673:5679  amount */\n      dup4\n        /* \"contracts/WallyToken.sol\":5653:5658  _burn */\n      tag_319\n        /* \"contracts/WallyToken.sol\":5653:5680  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_317:\n        /* \"contracts/WallyToken.sol\":5582:5687  function burn(uint256 amount) external onlyRole(BURNER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":3063:3113  mapping(address => uint256) public lastTxTimestamp */\n    tag_144:\n      mstore(0x20, 0x10)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":6850:7101  function setCooldownConfig(bool _enabled, uint256 _cooldownTime)... */\n    tag_150:\n        /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_321\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_321:\n        /* \"contracts/WallyToken.sol\":6993:7001  _enabled */\n      dup3\n        /* \"contracts/WallyToken.sol\":6975:6990  cooldownEnabled */\n      0x0e\n      0x00\n        /* \"contracts/WallyToken.sol\":6975:7001  cooldownEnabled = _enabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/WallyToken.sol\":7026:7039  _cooldownTime */\n      dup2\n        /* \"contracts/WallyToken.sol\":7011:7023  cooldownTime */\n      0x0f\n        /* \"contracts/WallyToken.sol\":7011:7039  cooldownTime = _cooldownTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WallyToken.sol\":7054:7094  CooldownUpdated(_enabled, _cooldownTime) */\n      0x3dd49c7bc5b4083d3ed5845bd08d8d308e600ce46a1bf5fed3466dba31ce9f0c\n        /* \"contracts/WallyToken.sol\":7070:7078  _enabled */\n      dup4\n        /* \"contracts/WallyToken.sol\":7080:7093  _cooldownTime */\n      dup4\n        /* \"contracts/WallyToken.sol\":7054:7094  CooldownUpdated(_enabled, _cooldownTime) */\n      mload(0x40)\n      tag_323\n      swap3\n      swap2\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/WallyToken.sol\":6850:7101  function setCooldownConfig(bool _enabled, uint256 _cooldownTime)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":2182:2210  address public uniswapV2Pair */\n    tag_153:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":2267:2301  bool public tradingEnabled = false */\n    tag_158:\n      0x08\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":1525:1586  bytes32 public constant ADMIN_ROLE  = keccak256(\"ADMIN_ROLE\") */\n    tag_167:\n        /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/WallyToken.sol\":1525:1586  bytes32 public constant ADMIN_ROLE  = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":6481:6746  function setSniperProtection(bool _enabled, uint256 _snipeBlocks)... */\n    tag_172:\n        /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_327\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_327:\n        /* \"contracts/WallyToken.sol\":6633:6641  _enabled */\n      dup3\n        /* \"contracts/WallyToken.sol\":6607:6630  sniperProtectionEnabled */\n      0x0b\n      0x00\n        /* \"contracts/WallyToken.sol\":6607:6641  sniperProtectionEnabled = _enabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/WallyToken.sol\":6665:6677  _snipeBlocks */\n      dup2\n        /* \"contracts/WallyToken.sol\":6651:6662  snipeBlocks */\n      0x0c\n        /* \"contracts/WallyToken.sol\":6651:6677  snipeBlocks = _snipeBlocks */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WallyToken.sol\":6692:6739  SniperProtectionUpdated(_enabled, _snipeBlocks) */\n      0xb31b570d042c886827a2637126edd8ff4f4fe90beb7cb87ffe8c4d2d542c190d\n        /* \"contracts/WallyToken.sol\":6716:6724  _enabled */\n      dup4\n        /* \"contracts/WallyToken.sol\":6726:6738  _snipeBlocks */\n      dup4\n        /* \"contracts/WallyToken.sol\":6692:6739  SniperProtectionUpdated(_enabled, _snipeBlocks) */\n      mload(0x40)\n      tag_329\n      swap3\n      swap2\n      swap1\n      tag_324\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/WallyToken.sol\":6481:6746  function setSniperProtection(bool _enabled, uint256 _snipeBlocks)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":2448:2474  uint256 public maxTxAmount */\n    tag_175:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_332\n      swap1\n      tag_260\n      jump\t// in\n    tag_332:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_333\n      swap1\n      tag_260\n      jump\t// in\n    tag_333:\n      dup1\n      iszero\n      tag_334\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_335\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_334)\n    tag_335:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_336:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_336\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_334:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":2572:2615  bool public sniperProtectionEnabled = false */\n    tag_188:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_192:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_338\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_339\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":2899:2934  bool public cooldownEnabled = false */\n    tag_201:\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":2993:3025  uint256 public cooldownTime = 30 */\n    tag_205:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":11397:11627  function rescueTokens(address tokenAddress, uint256 amount, address to)... */\n    tag_211:\n        /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_341\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_341:\n        /* \"contracts/WallyToken.sol\":11551:11552  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":11537:11553  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WallyToken.sol\":11537:11539  to */\n      dup3\n        /* \"contracts/WallyToken.sol\":11537:11553  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/WallyToken.sol\":11529:11570  require(to != address(0), \"Invalid 'to'\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap1\n      tag_276\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_343:\n        /* \"contracts/WallyToken.sol\":11586:11598  tokenAddress */\n      dup4\n        /* \"contracts/WallyToken.sol\":11580:11608  ERC20(tokenAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/WallyToken.sol\":11609:11611  to */\n      dup4\n        /* \"contracts/WallyToken.sol\":11613:11619  amount */\n      dup6\n        /* \"contracts/WallyToken.sol\":11580:11620  ERC20(tokenAddress).transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap3\n      swap2\n      swap1\n      tag_346\n      jump\t// in\n    tag_345:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_348\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_348:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_349\n      swap2\n      swap1\n      tag_350\n      jump\t// in\n    tag_349:\n      pop\n        /* \"contracts/WallyToken.sol\":11397:11627  function rescueTokens(address tokenAddress, uint256 amount, address to)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":6031:6377  function setTradingEnabled(bool _enabled) external onlyRole(ADMIN_ROLE) {... */\n    tag_216:\n        /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_352\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_352:\n        /* \"contracts/WallyToken.sol\":6130:6138  _enabled */\n      dup2\n        /* \"contracts/WallyToken.sol\":6113:6127  tradingEnabled */\n      0x08\n      0x14\n        /* \"contracts/WallyToken.sol\":6113:6138  tradingEnabled = _enabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/WallyToken.sol\":6243:6251  _enabled */\n      dup2\n        /* \"contracts/WallyToken.sol\":6243:6278  _enabled && sniperProtectionEnabled */\n      dup1\n      iszero\n      tag_354\n      jumpi\n      pop\n        /* \"contracts/WallyToken.sol\":6255:6278  sniperProtectionEnabled */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/WallyToken.sol\":6243:6278  _enabled && sniperProtectionEnabled */\n    tag_354:\n        /* \"contracts/WallyToken.sol\":6239:6331  if (_enabled && sniperProtectionEnabled) {... */\n      iszero\n      tag_355\n      jumpi\n        /* \"contracts/WallyToken.sol\":6308:6320  block.number */\n      number\n        /* \"contracts/WallyToken.sol\":6294:6305  launchBlock */\n      0x0d\n        /* \"contracts/WallyToken.sol\":6294:6320  launchBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WallyToken.sol\":6239:6331  if (_enabled && sniperProtectionEnabled) {... */\n    tag_355:\n        /* \"contracts/WallyToken.sol\":6346:6370  TradingEnabled(_enabled) */\n      0xbeda7dca7bc1b3e80b871f4818129ec73b771581f803d553aeb3484098e5f65a\n        /* \"contracts/WallyToken.sol\":6361:6369  _enabled */\n      dup3\n        /* \"contracts/WallyToken.sol\":6346:6370  TradingEnabled(_enabled) */\n      mload(0x40)\n      tag_356\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/WallyToken.sol\":6031:6377  function setTradingEnabled(bool _enabled) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":2754:2780  uint256 public launchBlock */\n    tag_219:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":1592:1654  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_223:\n        /* \"contracts/WallyToken.sol\":1630:1654  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/WallyToken.sol\":1592:1654  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_357\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_359\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_361\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_308\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_361:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":7474:7640  function setMaxTxAmount(uint256 _maxTxAmount) external onlyRole(ADMIN_ROLE) {... */\n    tag_238:\n        /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_364\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_364:\n        /* \"contracts/WallyToken.sol\":7574:7586  _maxTxAmount */\n      dup2\n        /* \"contracts/WallyToken.sol\":7560:7571  maxTxAmount */\n      0x0a\n        /* \"contracts/WallyToken.sol\":7560:7586  maxTxAmount = _maxTxAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WallyToken.sol\":7601:7633  MaxTxAmountUpdated(_maxTxAmount) */\n      0x947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf\n        /* \"contracts/WallyToken.sol\":7620:7632  _maxTxAmount */\n      dup3\n        /* \"contracts/WallyToken.sol\":7601:7633  MaxTxAmountUpdated(_maxTxAmount) */\n      mload(0x40)\n      tag_366\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_366:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/WallyToken.sol\":7474:7640  function setMaxTxAmount(uint256 _maxTxAmount) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":1998:2078  address public constant DAO_ADDRESS = 0x633ea8fe424CD65AD4D4826e6581273afd06B8Ef */\n    tag_241:\n        /* \"contracts/WallyToken.sol\":2036:2078  0x633ea8fe424CD65AD4D4826e6581273afd06B8Ef */\n      0x633ea8fe424cd65ad4d4826e6581273afd06b8ef\n        /* \"contracts/WallyToken.sol\":1998:2078  address public constant DAO_ADDRESS = 0x633ea8fe424CD65AD4D4826e6581273afd06B8Ef */\n      dup2\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":7989:8747  function addLiquidityETH(... */\n    tag_246:\n        /* \"contracts/WallyToken.sol\":8259:8278  uint256 amountToken */\n      0x00\n        /* \"contracts/WallyToken.sol\":8280:8297  uint256 amountETH */\n      0x00\n        /* \"contracts/WallyToken.sol\":8299:8316  uint256 liquidity */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_368\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_369\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_368:\n        /* \"contracts/WallyToken.sol\":1563:1586  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_371\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_371:\n        /* \"contracts/WallyToken.sol\":8400:8464  _approve(address(this), address(uniswapV2Router), tokenAmountIn) */\n      tag_373\n        /* \"contracts/WallyToken.sol\":8417:8421  this */\n      address\n        /* \"contracts/WallyToken.sol\":8432:8447  uniswapV2Router */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WallyToken.sol\":8450:8463  tokenAmountIn */\n      dup11\n        /* \"contracts/WallyToken.sol\":8400:8408  _approve */\n      tag_269\n        /* \"contracts/WallyToken.sol\":8400:8464  _approve(address(this), address(uniswapV2Router), tokenAmountIn) */\n      jump\t// in\n    tag_373:\n        /* \"contracts/WallyToken.sol\":8513:8528  uniswapV2Router */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WallyToken.sol\":8513:8544  uniswapV2Router.addLiquidityETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf305d719\n        /* \"contracts/WallyToken.sol\":8565:8574  msg.value */\n      callvalue\n        /* \"contracts/WallyToken.sol\":8606:8610  this */\n      address\n        /* \"contracts/WallyToken.sol\":8625:8638  tokenAmountIn */\n      dup12\n        /* \"contracts/WallyToken.sol\":8652:8666  tokenAmountMin */\n      dup12\n        /* \"contracts/WallyToken.sol\":8680:8692  ethAmountMin */\n      dup12\n        /* \"contracts/WallyToken.sol\":8706:8708  to */\n      dup16\n        /* \"contracts/WallyToken.sol\":8722:8730  deadline */\n      dup13\n        /* \"contracts/WallyToken.sol\":8513:8740  uniswapV2Router.addLiquidityETH{... */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_374\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_374:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_377\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_377:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_378\n      swap2\n      swap1\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"contracts/WallyToken.sol\":8475:8740  (amountToken, amountETH, liquidity) = uniswapV2Router.addLiquidityETH{... */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      dup3\n      swap7\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_380\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_381\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_380:\n        /* \"contracts/WallyToken.sol\":7989:8747  function addLiquidityETH(... */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WallyToken.sol\":2358:2399  mapping(address => bool) public blacklist */\n    tag_252:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_385\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_386\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_388\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_389\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_390\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_392\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_393\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_395\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_396\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_394:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_397\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_386\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_397:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_393:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_400\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_400:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_399:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_401\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_402\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_402:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_403\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_404\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_406\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_180\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_406:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_407\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_408\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_405)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_407:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_405:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_411\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_180\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_412\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_413\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_413:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_410)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_412:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_410:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_416\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_417\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_417:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_416:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_418\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_404\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_418:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_420\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_421\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_420:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_422\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_404\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_422:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_424\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_425\n      swap1\n      tag_426\n      jump\t// in\n    tag_425:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_424:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_429\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_430\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_430:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_429:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_431\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_432\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_432:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_431:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_433\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_434\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_434:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_433:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_436\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_180\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_436:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_437\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_438\n      swap3\n      swap2\n      swap1\n      tag_439\n      jump\t// in\n    tag_438:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_437:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_404:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_441\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_442\n      swap2\n      swap1\n      tag_443\n      jump\t// in\n    tag_442:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_444)\n    tag_441:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_445\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_446\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_396\n      jump\t// in\n    tag_446:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_445:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_444:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_447\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_448)\n    tag_447:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_448:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_449\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_449:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_451:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_453:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_454:\n        /* \"#utility.yul\":561:584   */\n      tag_507\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_453\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_508:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_455:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_510\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_454\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_57:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_513\n      tag_451\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":833:952   */\n    tag_512:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_514\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_455\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_456:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_457:\n        /* \"#utility.yul\":1268:1289   */\n      tag_517\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_456\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_60:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_519\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_457\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_458:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_459:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_460:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_461:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_462:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_525\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_458\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":2222:2293   */\n      tag_526\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_459\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_527\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_460\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":2392:2421   */\n      tag_528\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_461\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_65:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_530\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_462\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_463:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_464:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_533\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_463\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_465:\n        /* \"#utility.yul\":3060:3084   */\n      tag_535\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_464\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_536\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_536:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_466:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_538\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_465\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_467:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_468:\n        /* \"#utility.yul\":3416:3440   */\n      tag_541\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_467\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_542\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_542:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_469:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_544\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_468\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_69:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_547\n      tag_451\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":3709:3828   */\n    tag_546:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_548\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_466\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_549\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_469\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4200   */\n    tag_470:\n        /* \"#utility.yul\":4141:4148   */\n      0x00\n        /* \"#utility.yul\":4170:4194   */\n      tag_551\n        /* \"#utility.yul\":4188:4193   */\n      dup3\n        /* \"#utility.yul\":4170:4194   */\n      tag_463\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":4159:4194   */\n      swap1\n      pop\n        /* \"#utility.yul\":4096:4200   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4206:4344   */\n    tag_471:\n        /* \"#utility.yul\":4287:4319   */\n      tag_553\n        /* \"#utility.yul\":4313:4318   */\n      dup2\n        /* \"#utility.yul\":4287:4319   */\n      tag_470\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":4280:4285   */\n      dup2\n        /* \"#utility.yul\":4277:4320   */\n      eq\n        /* \"#utility.yul\":4267:4338   */\n      tag_554\n      jumpi\n        /* \"#utility.yul\":4334:4335   */\n      0x00\n        /* \"#utility.yul\":4331:4332   */\n      0x00\n        /* \"#utility.yul\":4324:4336   */\n      revert\n        /* \"#utility.yul\":4267:4338   */\n    tag_554:\n        /* \"#utility.yul\":4206:4344   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4350:4505   */\n    tag_472:\n        /* \"#utility.yul\":4404:4409   */\n      0x00\n        /* \"#utility.yul\":4442:4448   */\n      dup2\n        /* \"#utility.yul\":4429:4449   */\n      calldataload\n        /* \"#utility.yul\":4420:4449   */\n      swap1\n      pop\n        /* \"#utility.yul\":4458:4499   */\n      tag_556\n        /* \"#utility.yul\":4493:4498   */\n      dup2\n        /* \"#utility.yul\":4458:4499   */\n      tag_471\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":4350:4505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:5001   */\n    tag_75:\n        /* \"#utility.yul\":4587:4593   */\n      0x00\n        /* \"#utility.yul\":4595:4601   */\n      0x00\n        /* \"#utility.yul\":4644:4646   */\n      0x40\n        /* \"#utility.yul\":4632:4641   */\n      dup4\n        /* \"#utility.yul\":4623:4630   */\n      dup6\n        /* \"#utility.yul\":4619:4642   */\n      sub\n        /* \"#utility.yul\":4615:4647   */\n      slt\n        /* \"#utility.yul\":4612:4731   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":4650:4729   */\n      tag_559\n      tag_451\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":4612:4731   */\n    tag_558:\n        /* \"#utility.yul\":4770:4771   */\n      0x00\n        /* \"#utility.yul\":4795:4856   */\n      tag_560\n        /* \"#utility.yul\":4848:4855   */\n      dup6\n        /* \"#utility.yul\":4839:4845   */\n      dup3\n        /* \"#utility.yul\":4828:4837   */\n      dup7\n        /* \"#utility.yul\":4824:4846   */\n      add\n        /* \"#utility.yul\":4795:4856   */\n      tag_472\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":4785:4856   */\n      swap3\n      pop\n        /* \"#utility.yul\":4741:4866   */\n      pop\n        /* \"#utility.yul\":4905:4907   */\n      0x20\n        /* \"#utility.yul\":4931:4984   */\n      tag_561\n        /* \"#utility.yul\":4976:4983   */\n      dup6\n        /* \"#utility.yul\":4967:4973   */\n      dup3\n        /* \"#utility.yul\":4956:4965   */\n      dup7\n        /* \"#utility.yul\":4952:4974   */\n      add\n        /* \"#utility.yul\":4931:4984   */\n      tag_469\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":4921:4984   */\n      swap2\n      pop\n        /* \"#utility.yul\":4876:4994   */\n      pop\n        /* \"#utility.yul\":4511:5001   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5007:5123   */\n    tag_473:\n        /* \"#utility.yul\":5077:5098   */\n      tag_563\n        /* \"#utility.yul\":5092:5097   */\n      dup2\n        /* \"#utility.yul\":5077:5098   */\n      tag_456\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":5070:5075   */\n      dup2\n        /* \"#utility.yul\":5067:5099   */\n      eq\n        /* \"#utility.yul\":5057:5117   */\n      tag_564\n      jumpi\n        /* \"#utility.yul\":5113:5114   */\n      0x00\n        /* \"#utility.yul\":5110:5111   */\n      0x00\n        /* \"#utility.yul\":5103:5115   */\n      revert\n        /* \"#utility.yul\":5057:5117   */\n    tag_564:\n        /* \"#utility.yul\":5007:5123   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5129:5262   */\n    tag_474:\n        /* \"#utility.yul\":5172:5177   */\n      0x00\n        /* \"#utility.yul\":5210:5216   */\n      dup2\n        /* \"#utility.yul\":5197:5217   */\n      calldataload\n        /* \"#utility.yul\":5188:5217   */\n      swap1\n      pop\n        /* \"#utility.yul\":5226:5256   */\n      tag_566\n        /* \"#utility.yul\":5250:5255   */\n      dup2\n        /* \"#utility.yul\":5226:5256   */\n      tag_473\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":5129:5262   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5268:5736   */\n    tag_80:\n        /* \"#utility.yul\":5333:5339   */\n      0x00\n        /* \"#utility.yul\":5341:5347   */\n      0x00\n        /* \"#utility.yul\":5390:5392   */\n      0x40\n        /* \"#utility.yul\":5378:5387   */\n      dup4\n        /* \"#utility.yul\":5369:5376   */\n      dup6\n        /* \"#utility.yul\":5365:5388   */\n      sub\n        /* \"#utility.yul\":5361:5393   */\n      slt\n        /* \"#utility.yul\":5358:5477   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":5396:5475   */\n      tag_569\n      tag_451\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":5358:5477   */\n    tag_568:\n        /* \"#utility.yul\":5516:5517   */\n      0x00\n        /* \"#utility.yul\":5541:5594   */\n      tag_570\n        /* \"#utility.yul\":5586:5593   */\n      dup6\n        /* \"#utility.yul\":5577:5583   */\n      dup3\n        /* \"#utility.yul\":5566:5575   */\n      dup7\n        /* \"#utility.yul\":5562:5584   */\n      add\n        /* \"#utility.yul\":5541:5594   */\n      tag_466\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":5531:5594   */\n      swap3\n      pop\n        /* \"#utility.yul\":5487:5604   */\n      pop\n        /* \"#utility.yul\":5643:5645   */\n      0x20\n        /* \"#utility.yul\":5669:5719   */\n      tag_571\n        /* \"#utility.yul\":5711:5718   */\n      dup6\n        /* \"#utility.yul\":5702:5708   */\n      dup3\n        /* \"#utility.yul\":5691:5700   */\n      dup7\n        /* \"#utility.yul\":5687:5709   */\n      add\n        /* \"#utility.yul\":5669:5719   */\n      tag_474\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":5659:5719   */\n      swap2\n      pop\n        /* \"#utility.yul\":5614:5729   */\n      pop\n        /* \"#utility.yul\":5268:5736   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5742:5802   */\n    tag_475:\n        /* \"#utility.yul\":5770:5773   */\n      0x00\n        /* \"#utility.yul\":5791:5796   */\n      dup2\n        /* \"#utility.yul\":5784:5796   */\n      swap1\n      pop\n        /* \"#utility.yul\":5742:5802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5808:5950   */\n    tag_476:\n        /* \"#utility.yul\":5858:5867   */\n      0x00\n        /* \"#utility.yul\":5891:5944   */\n      tag_574\n        /* \"#utility.yul\":5909:5943   */\n      tag_575\n        /* \"#utility.yul\":5918:5942   */\n      tag_576\n        /* \"#utility.yul\":5936:5941   */\n      dup5\n        /* \"#utility.yul\":5918:5942   */\n      tag_463\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":5909:5943   */\n      tag_475\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":5891:5944   */\n      tag_463\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":5878:5944   */\n      swap1\n      pop\n        /* \"#utility.yul\":5808:5950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5956:6082   */\n    tag_477:\n        /* \"#utility.yul\":6006:6015   */\n      0x00\n        /* \"#utility.yul\":6039:6076   */\n      tag_578\n        /* \"#utility.yul\":6070:6075   */\n      dup3\n        /* \"#utility.yul\":6039:6076   */\n      tag_476\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":6026:6076   */\n      swap1\n      pop\n        /* \"#utility.yul\":5956:6082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6088:6241   */\n    tag_478:\n        /* \"#utility.yul\":6165:6174   */\n      0x00\n        /* \"#utility.yul\":6198:6235   */\n      tag_580\n        /* \"#utility.yul\":6229:6234   */\n      dup3\n        /* \"#utility.yul\":6198:6235   */\n      tag_477\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":6185:6235   */\n      swap1\n      pop\n        /* \"#utility.yul\":6088:6241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6247:6432   */\n    tag_479:\n        /* \"#utility.yul\":6361:6425   */\n      tag_582\n        /* \"#utility.yul\":6419:6424   */\n      dup2\n        /* \"#utility.yul\":6361:6425   */\n      tag_478\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":6356:6359   */\n      dup3\n        /* \"#utility.yul\":6349:6426   */\n      mstore\n        /* \"#utility.yul\":6247:6432   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6438:6714   */\n    tag_86:\n        /* \"#utility.yul\":6558:6562   */\n      0x00\n        /* \"#utility.yul\":6596:6598   */\n      0x20\n        /* \"#utility.yul\":6585:6594   */\n      dup3\n        /* \"#utility.yul\":6581:6599   */\n      add\n        /* \"#utility.yul\":6573:6599   */\n      swap1\n      pop\n        /* \"#utility.yul\":6609:6707   */\n      tag_584\n        /* \"#utility.yul\":6704:6705   */\n      0x00\n        /* \"#utility.yul\":6693:6702   */\n      dup4\n        /* \"#utility.yul\":6689:6706   */\n      add\n        /* \"#utility.yul\":6680:6686   */\n      dup5\n        /* \"#utility.yul\":6609:6707   */\n      tag_479\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":6438:6714   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6720:6838   */\n    tag_480:\n        /* \"#utility.yul\":6807:6831   */\n      tag_586\n        /* \"#utility.yul\":6825:6830   */\n      dup2\n        /* \"#utility.yul\":6807:6831   */\n      tag_467\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":6802:6805   */\n      dup3\n        /* \"#utility.yul\":6795:6832   */\n      mstore\n        /* \"#utility.yul\":6720:6838   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6844:7066   */\n    tag_91:\n        /* \"#utility.yul\":6937:6941   */\n      0x00\n        /* \"#utility.yul\":6975:6977   */\n      0x20\n        /* \"#utility.yul\":6964:6973   */\n      dup3\n        /* \"#utility.yul\":6960:6978   */\n      add\n        /* \"#utility.yul\":6952:6978   */\n      swap1\n      pop\n        /* \"#utility.yul\":6988:7059   */\n      tag_588\n        /* \"#utility.yul\":7056:7057   */\n      0x00\n        /* \"#utility.yul\":7045:7054   */\n      dup4\n        /* \"#utility.yul\":7041:7058   */\n      add\n        /* \"#utility.yul\":7032:7038   */\n      dup5\n        /* \"#utility.yul\":6988:7059   */\n      tag_480\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":6844:7066   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7072:7691   */\n    tag_95:\n        /* \"#utility.yul\":7149:7155   */\n      0x00\n        /* \"#utility.yul\":7157:7163   */\n      0x00\n        /* \"#utility.yul\":7165:7171   */\n      0x00\n        /* \"#utility.yul\":7214:7216   */\n      0x60\n        /* \"#utility.yul\":7202:7211   */\n      dup5\n        /* \"#utility.yul\":7193:7200   */\n      dup7\n        /* \"#utility.yul\":7189:7212   */\n      sub\n        /* \"#utility.yul\":7185:7217   */\n      slt\n        /* \"#utility.yul\":7182:7301   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":7220:7299   */\n      tag_591\n      tag_451\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":7182:7301   */\n    tag_590:\n        /* \"#utility.yul\":7340:7341   */\n      0x00\n        /* \"#utility.yul\":7365:7418   */\n      tag_592\n        /* \"#utility.yul\":7410:7417   */\n      dup7\n        /* \"#utility.yul\":7401:7407   */\n      dup3\n        /* \"#utility.yul\":7390:7399   */\n      dup8\n        /* \"#utility.yul\":7386:7408   */\n      add\n        /* \"#utility.yul\":7365:7418   */\n      tag_466\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":7355:7418   */\n      swap4\n      pop\n        /* \"#utility.yul\":7311:7428   */\n      pop\n        /* \"#utility.yul\":7467:7469   */\n      0x20\n        /* \"#utility.yul\":7493:7546   */\n      tag_593\n        /* \"#utility.yul\":7538:7545   */\n      dup7\n        /* \"#utility.yul\":7529:7535   */\n      dup3\n        /* \"#utility.yul\":7518:7527   */\n      dup8\n        /* \"#utility.yul\":7514:7536   */\n      add\n        /* \"#utility.yul\":7493:7546   */\n      tag_466\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":7483:7546   */\n      swap3\n      pop\n        /* \"#utility.yul\":7438:7556   */\n      pop\n        /* \"#utility.yul\":7595:7597   */\n      0x40\n        /* \"#utility.yul\":7621:7674   */\n      tag_594\n        /* \"#utility.yul\":7666:7673   */\n      dup7\n        /* \"#utility.yul\":7657:7663   */\n      dup3\n        /* \"#utility.yul\":7646:7655   */\n      dup8\n        /* \"#utility.yul\":7642:7664   */\n      add\n        /* \"#utility.yul\":7621:7674   */\n      tag_469\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":7611:7674   */\n      swap2\n      pop\n        /* \"#utility.yul\":7566:7684   */\n      pop\n        /* \"#utility.yul\":7072:7691   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7697:7774   */\n    tag_481:\n        /* \"#utility.yul\":7734:7741   */\n      0x00\n        /* \"#utility.yul\":7763:7768   */\n      dup2\n        /* \"#utility.yul\":7752:7768   */\n      swap1\n      pop\n        /* \"#utility.yul\":7697:7774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7780:7902   */\n    tag_482:\n        /* \"#utility.yul\":7853:7877   */\n      tag_597\n        /* \"#utility.yul\":7871:7876   */\n      dup2\n        /* \"#utility.yul\":7853:7877   */\n      tag_481\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":7846:7851   */\n      dup2\n        /* \"#utility.yul\":7843:7878   */\n      eq\n        /* \"#utility.yul\":7833:7896   */\n      tag_598\n      jumpi\n        /* \"#utility.yul\":7892:7893   */\n      0x00\n        /* \"#utility.yul\":7889:7890   */\n      0x00\n        /* \"#utility.yul\":7882:7894   */\n      revert\n        /* \"#utility.yul\":7833:7896   */\n    tag_598:\n        /* \"#utility.yul\":7780:7902   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7908:8047   */\n    tag_483:\n        /* \"#utility.yul\":7954:7959   */\n      0x00\n        /* \"#utility.yul\":7992:7998   */\n      dup2\n        /* \"#utility.yul\":7979:7999   */\n      calldataload\n        /* \"#utility.yul\":7970:7999   */\n      swap1\n      pop\n        /* \"#utility.yul\":8008:8041   */\n      tag_600\n        /* \"#utility.yul\":8035:8040   */\n      dup2\n        /* \"#utility.yul\":8008:8041   */\n      tag_482\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":7908:8047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8053:8382   */\n    tag_101:\n        /* \"#utility.yul\":8112:8118   */\n      0x00\n        /* \"#utility.yul\":8161:8163   */\n      0x20\n        /* \"#utility.yul\":8149:8158   */\n      dup3\n        /* \"#utility.yul\":8140:8147   */\n      dup5\n        /* \"#utility.yul\":8136:8159   */\n      sub\n        /* \"#utility.yul\":8132:8164   */\n      slt\n        /* \"#utility.yul\":8129:8248   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":8167:8246   */\n      tag_603\n      tag_451\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":8129:8248   */\n    tag_602:\n        /* \"#utility.yul\":8287:8288   */\n      0x00\n        /* \"#utility.yul\":8312:8365   */\n      tag_604\n        /* \"#utility.yul\":8357:8364   */\n      dup5\n        /* \"#utility.yul\":8348:8354   */\n      dup3\n        /* \"#utility.yul\":8337:8346   */\n      dup6\n        /* \"#utility.yul\":8333:8355   */\n      add\n        /* \"#utility.yul\":8312:8365   */\n      tag_483\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":8302:8365   */\n      swap2\n      pop\n        /* \"#utility.yul\":8258:8375   */\n      pop\n        /* \"#utility.yul\":8053:8382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8388:8506   */\n    tag_484:\n        /* \"#utility.yul\":8475:8499   */\n      tag_606\n        /* \"#utility.yul\":8493:8498   */\n      dup2\n        /* \"#utility.yul\":8475:8499   */\n      tag_481\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":8470:8473   */\n      dup3\n        /* \"#utility.yul\":8463:8500   */\n      mstore\n        /* \"#utility.yul\":8388:8506   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8512:8734   */\n    tag_104:\n        /* \"#utility.yul\":8605:8609   */\n      0x00\n        /* \"#utility.yul\":8643:8645   */\n      0x20\n        /* \"#utility.yul\":8632:8641   */\n      dup3\n        /* \"#utility.yul\":8628:8646   */\n      add\n        /* \"#utility.yul\":8620:8646   */\n      swap1\n      pop\n        /* \"#utility.yul\":8656:8727   */\n      tag_608\n        /* \"#utility.yul\":8724:8725   */\n      0x00\n        /* \"#utility.yul\":8713:8722   */\n      dup4\n        /* \"#utility.yul\":8709:8726   */\n      add\n        /* \"#utility.yul\":8700:8706   */\n      dup5\n        /* \"#utility.yul\":8656:8727   */\n      tag_484\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":8512:8734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8740:9214   */\n    tag_116:\n        /* \"#utility.yul\":8808:8814   */\n      0x00\n        /* \"#utility.yul\":8816:8822   */\n      0x00\n        /* \"#utility.yul\":8865:8867   */\n      0x40\n        /* \"#utility.yul\":8853:8862   */\n      dup4\n        /* \"#utility.yul\":8844:8851   */\n      dup6\n        /* \"#utility.yul\":8840:8863   */\n      sub\n        /* \"#utility.yul\":8836:8868   */\n      slt\n        /* \"#utility.yul\":8833:8952   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":8871:8950   */\n      tag_611\n      tag_451\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":8833:8952   */\n    tag_610:\n        /* \"#utility.yul\":8991:8992   */\n      0x00\n        /* \"#utility.yul\":9016:9069   */\n      tag_612\n        /* \"#utility.yul\":9061:9068   */\n      dup6\n        /* \"#utility.yul\":9052:9058   */\n      dup3\n        /* \"#utility.yul\":9041:9050   */\n      dup7\n        /* \"#utility.yul\":9037:9059   */\n      add\n        /* \"#utility.yul\":9016:9069   */\n      tag_483\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":9006:9069   */\n      swap3\n      pop\n        /* \"#utility.yul\":8962:9079   */\n      pop\n        /* \"#utility.yul\":9118:9120   */\n      0x20\n        /* \"#utility.yul\":9144:9197   */\n      tag_613\n        /* \"#utility.yul\":9189:9196   */\n      dup6\n        /* \"#utility.yul\":9180:9186   */\n      dup3\n        /* \"#utility.yul\":9169:9178   */\n      dup7\n        /* \"#utility.yul\":9165:9187   */\n      add\n        /* \"#utility.yul\":9144:9197   */\n      tag_466\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":9134:9197   */\n      swap2\n      pop\n        /* \"#utility.yul\":9089:9207   */\n      pop\n        /* \"#utility.yul\":8740:9214   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9220:9306   */\n    tag_485:\n        /* \"#utility.yul\":9255:9262   */\n      0x00\n        /* \"#utility.yul\":9295:9299   */\n      0xff\n        /* \"#utility.yul\":9288:9293   */\n      dup3\n        /* \"#utility.yul\":9284:9300   */\n      and\n        /* \"#utility.yul\":9273:9300   */\n      swap1\n      pop\n        /* \"#utility.yul\":9220:9306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9312:9424   */\n    tag_486:\n        /* \"#utility.yul\":9395:9417   */\n      tag_616\n        /* \"#utility.yul\":9411:9416   */\n      dup2\n        /* \"#utility.yul\":9395:9417   */\n      tag_485\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":9390:9393   */\n      dup3\n        /* \"#utility.yul\":9383:9418   */\n      mstore\n        /* \"#utility.yul\":9312:9424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9430:9644   */\n    tag_126:\n        /* \"#utility.yul\":9519:9523   */\n      0x00\n        /* \"#utility.yul\":9557:9559   */\n      0x20\n        /* \"#utility.yul\":9546:9555   */\n      dup3\n        /* \"#utility.yul\":9542:9560   */\n      add\n        /* \"#utility.yul\":9534:9560   */\n      swap1\n      pop\n        /* \"#utility.yul\":9570:9637   */\n      tag_618\n        /* \"#utility.yul\":9634:9635   */\n      0x00\n        /* \"#utility.yul\":9623:9632   */\n      dup4\n        /* \"#utility.yul\":9619:9636   */\n      add\n        /* \"#utility.yul\":9610:9616   */\n      dup5\n        /* \"#utility.yul\":9570:9637   */\n      tag_486\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":9430:9644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9650:9979   */\n    tag_138:\n        /* \"#utility.yul\":9709:9715   */\n      0x00\n        /* \"#utility.yul\":9758:9760   */\n      0x20\n        /* \"#utility.yul\":9746:9755   */\n      dup3\n        /* \"#utility.yul\":9737:9744   */\n      dup5\n        /* \"#utility.yul\":9733:9756   */\n      sub\n        /* \"#utility.yul\":9729:9761   */\n      slt\n        /* \"#utility.yul\":9726:9845   */\n      iszero\n      tag_620\n      jumpi\n        /* \"#utility.yul\":9764:9843   */\n      tag_621\n      tag_451\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":9726:9845   */\n    tag_620:\n        /* \"#utility.yul\":9884:9885   */\n      0x00\n        /* \"#utility.yul\":9909:9962   */\n      tag_622\n        /* \"#utility.yul\":9954:9961   */\n      dup5\n        /* \"#utility.yul\":9945:9951   */\n      dup3\n        /* \"#utility.yul\":9934:9943   */\n      dup6\n        /* \"#utility.yul\":9930:9952   */\n      add\n        /* \"#utility.yul\":9909:9962   */\n      tag_469\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":9899:9962   */\n      swap2\n      pop\n        /* \"#utility.yul\":9855:9972   */\n      pop\n        /* \"#utility.yul\":9650:9979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9985:10314   */\n    tag_143:\n        /* \"#utility.yul\":10044:10050   */\n      0x00\n        /* \"#utility.yul\":10093:10095   */\n      0x20\n        /* \"#utility.yul\":10081:10090   */\n      dup3\n        /* \"#utility.yul\":10072:10079   */\n      dup5\n        /* \"#utility.yul\":10068:10091   */\n      sub\n        /* \"#utility.yul\":10064:10096   */\n      slt\n        /* \"#utility.yul\":10061:10180   */\n      iszero\n      tag_624\n      jumpi\n        /* \"#utility.yul\":10099:10178   */\n      tag_625\n      tag_451\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":10061:10180   */\n    tag_624:\n        /* \"#utility.yul\":10219:10220   */\n      0x00\n        /* \"#utility.yul\":10244:10297   */\n      tag_626\n        /* \"#utility.yul\":10289:10296   */\n      dup5\n        /* \"#utility.yul\":10280:10286   */\n      dup3\n        /* \"#utility.yul\":10269:10278   */\n      dup6\n        /* \"#utility.yul\":10265:10287   */\n      add\n        /* \"#utility.yul\":10244:10297   */\n      tag_466\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":10234:10297   */\n      swap2\n      pop\n        /* \"#utility.yul\":10190:10307   */\n      pop\n        /* \"#utility.yul\":9985:10314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10320:10788   */\n    tag_149:\n        /* \"#utility.yul\":10385:10391   */\n      0x00\n        /* \"#utility.yul\":10393:10399   */\n      0x00\n        /* \"#utility.yul\":10442:10444   */\n      0x40\n        /* \"#utility.yul\":10430:10439   */\n      dup4\n        /* \"#utility.yul\":10421:10428   */\n      dup6\n        /* \"#utility.yul\":10417:10440   */\n      sub\n        /* \"#utility.yul\":10413:10445   */\n      slt\n        /* \"#utility.yul\":10410:10529   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":10448:10527   */\n      tag_629\n      tag_451\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":10410:10529   */\n    tag_628:\n        /* \"#utility.yul\":10568:10569   */\n      0x00\n        /* \"#utility.yul\":10593:10643   */\n      tag_630\n        /* \"#utility.yul\":10635:10642   */\n      dup6\n        /* \"#utility.yul\":10626:10632   */\n      dup3\n        /* \"#utility.yul\":10615:10624   */\n      dup7\n        /* \"#utility.yul\":10611:10633   */\n      add\n        /* \"#utility.yul\":10593:10643   */\n      tag_474\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":10583:10643   */\n      swap3\n      pop\n        /* \"#utility.yul\":10539:10653   */\n      pop\n        /* \"#utility.yul\":10692:10694   */\n      0x20\n        /* \"#utility.yul\":10718:10771   */\n      tag_631\n        /* \"#utility.yul\":10763:10770   */\n      dup6\n        /* \"#utility.yul\":10754:10760   */\n      dup3\n        /* \"#utility.yul\":10743:10752   */\n      dup7\n        /* \"#utility.yul\":10739:10761   */\n      add\n        /* \"#utility.yul\":10718:10771   */\n      tag_469\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":10708:10771   */\n      swap2\n      pop\n        /* \"#utility.yul\":10663:10781   */\n      pop\n        /* \"#utility.yul\":10320:10788   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10794:10912   */\n    tag_487:\n        /* \"#utility.yul\":10881:10905   */\n      tag_633\n        /* \"#utility.yul\":10899:10904   */\n      dup2\n        /* \"#utility.yul\":10881:10905   */\n      tag_464\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":10876:10879   */\n      dup3\n        /* \"#utility.yul\":10869:10906   */\n      mstore\n        /* \"#utility.yul\":10794:10912   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10918:11140   */\n    tag_155:\n        /* \"#utility.yul\":11011:11015   */\n      0x00\n        /* \"#utility.yul\":11049:11051   */\n      0x20\n        /* \"#utility.yul\":11038:11047   */\n      dup3\n        /* \"#utility.yul\":11034:11052   */\n      add\n        /* \"#utility.yul\":11026:11052   */\n      swap1\n      pop\n        /* \"#utility.yul\":11062:11133   */\n      tag_635\n        /* \"#utility.yul\":11130:11131   */\n      0x00\n        /* \"#utility.yul\":11119:11128   */\n      dup4\n        /* \"#utility.yul\":11115:11132   */\n      add\n        /* \"#utility.yul\":11106:11112   */\n      dup5\n        /* \"#utility.yul\":11062:11133   */\n      tag_487\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":10918:11140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11146:11765   */\n    tag_210:\n        /* \"#utility.yul\":11223:11229   */\n      0x00\n        /* \"#utility.yul\":11231:11237   */\n      0x00\n        /* \"#utility.yul\":11239:11245   */\n      0x00\n        /* \"#utility.yul\":11288:11290   */\n      0x60\n        /* \"#utility.yul\":11276:11285   */\n      dup5\n        /* \"#utility.yul\":11267:11274   */\n      dup7\n        /* \"#utility.yul\":11263:11286   */\n      sub\n        /* \"#utility.yul\":11259:11291   */\n      slt\n        /* \"#utility.yul\":11256:11375   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":11294:11373   */\n      tag_638\n      tag_451\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":11256:11375   */\n    tag_637:\n        /* \"#utility.yul\":11414:11415   */\n      0x00\n        /* \"#utility.yul\":11439:11492   */\n      tag_639\n        /* \"#utility.yul\":11484:11491   */\n      dup7\n        /* \"#utility.yul\":11475:11481   */\n      dup3\n        /* \"#utility.yul\":11464:11473   */\n      dup8\n        /* \"#utility.yul\":11460:11482   */\n      add\n        /* \"#utility.yul\":11439:11492   */\n      tag_466\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":11429:11492   */\n      swap4\n      pop\n        /* \"#utility.yul\":11385:11502   */\n      pop\n        /* \"#utility.yul\":11541:11543   */\n      0x20\n        /* \"#utility.yul\":11567:11620   */\n      tag_640\n        /* \"#utility.yul\":11612:11619   */\n      dup7\n        /* \"#utility.yul\":11603:11609   */\n      dup3\n        /* \"#utility.yul\":11592:11601   */\n      dup8\n        /* \"#utility.yul\":11588:11610   */\n      add\n        /* \"#utility.yul\":11567:11620   */\n      tag_469\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":11557:11620   */\n      swap3\n      pop\n        /* \"#utility.yul\":11512:11630   */\n      pop\n        /* \"#utility.yul\":11669:11671   */\n      0x40\n        /* \"#utility.yul\":11695:11748   */\n      tag_641\n        /* \"#utility.yul\":11740:11747   */\n      dup7\n        /* \"#utility.yul\":11731:11737   */\n      dup3\n        /* \"#utility.yul\":11720:11729   */\n      dup8\n        /* \"#utility.yul\":11716:11738   */\n      add\n        /* \"#utility.yul\":11695:11748   */\n      tag_466\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":11685:11748   */\n      swap2\n      pop\n        /* \"#utility.yul\":11640:11758   */\n      pop\n        /* \"#utility.yul\":11146:11765   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":11771:12094   */\n    tag_215:\n        /* \"#utility.yul\":11827:11833   */\n      0x00\n        /* \"#utility.yul\":11876:11878   */\n      0x20\n        /* \"#utility.yul\":11864:11873   */\n      dup3\n        /* \"#utility.yul\":11855:11862   */\n      dup5\n        /* \"#utility.yul\":11851:11874   */\n      sub\n        /* \"#utility.yul\":11847:11879   */\n      slt\n        /* \"#utility.yul\":11844:11963   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":11882:11961   */\n      tag_644\n      tag_451\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":11844:11963   */\n    tag_643:\n        /* \"#utility.yul\":12002:12003   */\n      0x00\n        /* \"#utility.yul\":12027:12077   */\n      tag_645\n        /* \"#utility.yul\":12069:12076   */\n      dup5\n        /* \"#utility.yul\":12060:12066   */\n      dup3\n        /* \"#utility.yul\":12049:12058   */\n      dup6\n        /* \"#utility.yul\":12045:12067   */\n      add\n        /* \"#utility.yul\":12027:12077   */\n      tag_474\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":12017:12077   */\n      swap2\n      pop\n        /* \"#utility.yul\":11973:12087   */\n      pop\n        /* \"#utility.yul\":11771:12094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12100:12574   */\n    tag_232:\n        /* \"#utility.yul\":12168:12174   */\n      0x00\n        /* \"#utility.yul\":12176:12182   */\n      0x00\n        /* \"#utility.yul\":12225:12227   */\n      0x40\n        /* \"#utility.yul\":12213:12222   */\n      dup4\n        /* \"#utility.yul\":12204:12211   */\n      dup6\n        /* \"#utility.yul\":12200:12223   */\n      sub\n        /* \"#utility.yul\":12196:12228   */\n      slt\n        /* \"#utility.yul\":12193:12312   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":12231:12310   */\n      tag_648\n      tag_451\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":12193:12312   */\n    tag_647:\n        /* \"#utility.yul\":12351:12352   */\n      0x00\n        /* \"#utility.yul\":12376:12429   */\n      tag_649\n        /* \"#utility.yul\":12421:12428   */\n      dup6\n        /* \"#utility.yul\":12412:12418   */\n      dup3\n        /* \"#utility.yul\":12401:12410   */\n      dup7\n        /* \"#utility.yul\":12397:12419   */\n      add\n        /* \"#utility.yul\":12376:12429   */\n      tag_466\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":12366:12429   */\n      swap3\n      pop\n        /* \"#utility.yul\":12322:12439   */\n      pop\n        /* \"#utility.yul\":12478:12480   */\n      0x20\n        /* \"#utility.yul\":12504:12557   */\n      tag_650\n        /* \"#utility.yul\":12549:12556   */\n      dup6\n        /* \"#utility.yul\":12540:12546   */\n      dup3\n        /* \"#utility.yul\":12529:12538   */\n      dup7\n        /* \"#utility.yul\":12525:12547   */\n      add\n        /* \"#utility.yul\":12504:12557   */\n      tag_466\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":12494:12557   */\n      swap2\n      pop\n        /* \"#utility.yul\":12449:12567   */\n      pop\n        /* \"#utility.yul\":12100:12574   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12580:13491   */\n    tag_245:\n        /* \"#utility.yul\":12675:12681   */\n      0x00\n        /* \"#utility.yul\":12683:12689   */\n      0x00\n        /* \"#utility.yul\":12691:12697   */\n      0x00\n        /* \"#utility.yul\":12699:12705   */\n      0x00\n        /* \"#utility.yul\":12707:12713   */\n      0x00\n        /* \"#utility.yul\":12756:12759   */\n      0xa0\n        /* \"#utility.yul\":12744:12753   */\n      dup7\n        /* \"#utility.yul\":12735:12742   */\n      dup9\n        /* \"#utility.yul\":12731:12754   */\n      sub\n        /* \"#utility.yul\":12727:12760   */\n      slt\n        /* \"#utility.yul\":12724:12844   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":12763:12842   */\n      tag_653\n      tag_451\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":12724:12844   */\n    tag_652:\n        /* \"#utility.yul\":12883:12884   */\n      0x00\n        /* \"#utility.yul\":12908:12961   */\n      tag_654\n        /* \"#utility.yul\":12953:12960   */\n      dup9\n        /* \"#utility.yul\":12944:12950   */\n      dup3\n        /* \"#utility.yul\":12933:12942   */\n      dup10\n        /* \"#utility.yul\":12929:12951   */\n      add\n        /* \"#utility.yul\":12908:12961   */\n      tag_466\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":12898:12961   */\n      swap6\n      pop\n        /* \"#utility.yul\":12854:12971   */\n      pop\n        /* \"#utility.yul\":13010:13012   */\n      0x20\n        /* \"#utility.yul\":13036:13089   */\n      tag_655\n        /* \"#utility.yul\":13081:13088   */\n      dup9\n        /* \"#utility.yul\":13072:13078   */\n      dup3\n        /* \"#utility.yul\":13061:13070   */\n      dup10\n        /* \"#utility.yul\":13057:13079   */\n      add\n        /* \"#utility.yul\":13036:13089   */\n      tag_469\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":13026:13089   */\n      swap5\n      pop\n        /* \"#utility.yul\":12981:13099   */\n      pop\n        /* \"#utility.yul\":13138:13140   */\n      0x40\n        /* \"#utility.yul\":13164:13217   */\n      tag_656\n        /* \"#utility.yul\":13209:13216   */\n      dup9\n        /* \"#utility.yul\":13200:13206   */\n      dup3\n        /* \"#utility.yul\":13189:13198   */\n      dup10\n        /* \"#utility.yul\":13185:13207   */\n      add\n        /* \"#utility.yul\":13164:13217   */\n      tag_469\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":13154:13217   */\n      swap4\n      pop\n        /* \"#utility.yul\":13109:13227   */\n      pop\n        /* \"#utility.yul\":13266:13268   */\n      0x60\n        /* \"#utility.yul\":13292:13345   */\n      tag_657\n        /* \"#utility.yul\":13337:13344   */\n      dup9\n        /* \"#utility.yul\":13328:13334   */\n      dup3\n        /* \"#utility.yul\":13317:13326   */\n      dup10\n        /* \"#utility.yul\":13313:13335   */\n      add\n        /* \"#utility.yul\":13292:13345   */\n      tag_469\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":13282:13345   */\n      swap3\n      pop\n        /* \"#utility.yul\":13237:13355   */\n      pop\n        /* \"#utility.yul\":13394:13397   */\n      0x80\n        /* \"#utility.yul\":13421:13474   */\n      tag_658\n        /* \"#utility.yul\":13466:13473   */\n      dup9\n        /* \"#utility.yul\":13457:13463   */\n      dup3\n        /* \"#utility.yul\":13446:13455   */\n      dup10\n        /* \"#utility.yul\":13442:13464   */\n      add\n        /* \"#utility.yul\":13421:13474   */\n      tag_469\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":13411:13474   */\n      swap2\n      pop\n        /* \"#utility.yul\":13365:13484   */\n      pop\n        /* \"#utility.yul\":12580:13491   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13497:13939   */\n    tag_248:\n        /* \"#utility.yul\":13646:13650   */\n      0x00\n        /* \"#utility.yul\":13684:13686   */\n      0x60\n        /* \"#utility.yul\":13673:13682   */\n      dup3\n        /* \"#utility.yul\":13669:13687   */\n      add\n        /* \"#utility.yul\":13661:13687   */\n      swap1\n      pop\n        /* \"#utility.yul\":13697:13768   */\n      tag_660\n        /* \"#utility.yul\":13765:13766   */\n      0x00\n        /* \"#utility.yul\":13754:13763   */\n      dup4\n        /* \"#utility.yul\":13750:13767   */\n      add\n        /* \"#utility.yul\":13741:13747   */\n      dup7\n        /* \"#utility.yul\":13697:13768   */\n      tag_480\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":13778:13850   */\n      tag_661\n        /* \"#utility.yul\":13846:13848   */\n      0x20\n        /* \"#utility.yul\":13835:13844   */\n      dup4\n        /* \"#utility.yul\":13831:13849   */\n      add\n        /* \"#utility.yul\":13822:13828   */\n      dup6\n        /* \"#utility.yul\":13778:13850   */\n      tag_480\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":13860:13932   */\n      tag_662\n        /* \"#utility.yul\":13928:13930   */\n      0x40\n        /* \"#utility.yul\":13917:13926   */\n      dup4\n        /* \"#utility.yul\":13913:13931   */\n      add\n        /* \"#utility.yul\":13904:13910   */\n      dup5\n        /* \"#utility.yul\":13860:13932   */\n      tag_480\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":13497:13939   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13945:14125   */\n    tag_488:\n        /* \"#utility.yul\":13993:14070   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13990:13991   */\n      0x00\n        /* \"#utility.yul\":13983:14071   */\n      mstore\n        /* \"#utility.yul\":14090:14094   */\n      0x22\n        /* \"#utility.yul\":14087:14088   */\n      0x04\n        /* \"#utility.yul\":14080:14095   */\n      mstore\n        /* \"#utility.yul\":14114:14118   */\n      0x24\n        /* \"#utility.yul\":14111:14112   */\n      0x00\n        /* \"#utility.yul\":14104:14119   */\n      revert\n        /* \"#utility.yul\":14131:14451   */\n    tag_260:\n        /* \"#utility.yul\":14175:14181   */\n      0x00\n        /* \"#utility.yul\":14212:14213   */\n      0x02\n        /* \"#utility.yul\":14206:14210   */\n      dup3\n        /* \"#utility.yul\":14202:14214   */\n      div\n        /* \"#utility.yul\":14192:14214   */\n      swap1\n      pop\n        /* \"#utility.yul\":14259:14260   */\n      0x01\n        /* \"#utility.yul\":14253:14257   */\n      dup3\n        /* \"#utility.yul\":14249:14261   */\n      and\n        /* \"#utility.yul\":14280:14298   */\n      dup1\n        /* \"#utility.yul\":14270:14351   */\n      tag_665\n      jumpi\n        /* \"#utility.yul\":14336:14340   */\n      0x7f\n        /* \"#utility.yul\":14328:14334   */\n      dup3\n        /* \"#utility.yul\":14324:14341   */\n      and\n        /* \"#utility.yul\":14314:14341   */\n      swap2\n      pop\n        /* \"#utility.yul\":14270:14351   */\n    tag_665:\n        /* \"#utility.yul\":14398:14400   */\n      0x20\n        /* \"#utility.yul\":14390:14396   */\n      dup3\n        /* \"#utility.yul\":14387:14401   */\n      lt\n        /* \"#utility.yul\":14367:14385   */\n      dup2\n        /* \"#utility.yul\":14364:14402   */\n      sub\n        /* \"#utility.yul\":14361:14445   */\n      tag_666\n      jumpi\n        /* \"#utility.yul\":14417:14435   */\n      tag_667\n      tag_488\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":14361:14445   */\n    tag_666:\n        /* \"#utility.yul\":14182:14451   */\n      pop\n        /* \"#utility.yul\":14131:14451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14457:14619   */\n    tag_489:\n        /* \"#utility.yul\":14597:14611   */\n      0x496e76616c69642027746f270000000000000000000000000000000000000000\n        /* \"#utility.yul\":14593:14594   */\n      0x00\n        /* \"#utility.yul\":14585:14591   */\n      dup3\n        /* \"#utility.yul\":14581:14595   */\n      add\n        /* \"#utility.yul\":14574:14612   */\n      mstore\n        /* \"#utility.yul\":14457:14619   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14625:14991   */\n    tag_490:\n        /* \"#utility.yul\":14767:14770   */\n      0x00\n        /* \"#utility.yul\":14788:14855   */\n      tag_670\n        /* \"#utility.yul\":14852:14854   */\n      0x0c\n        /* \"#utility.yul\":14847:14850   */\n      dup4\n        /* \"#utility.yul\":14788:14855   */\n      tag_459\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":14781:14855   */\n      swap2\n      pop\n        /* \"#utility.yul\":14864:14957   */\n      tag_671\n        /* \"#utility.yul\":14953:14956   */\n      dup3\n        /* \"#utility.yul\":14864:14957   */\n      tag_489\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":14982:14984   */\n      0x20\n        /* \"#utility.yul\":14977:14980   */\n      dup3\n        /* \"#utility.yul\":14973:14985   */\n      add\n        /* \"#utility.yul\":14966:14985   */\n      swap1\n      pop\n        /* \"#utility.yul\":14625:14991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14997:15416   */\n    tag_276:\n        /* \"#utility.yul\":15163:15167   */\n      0x00\n        /* \"#utility.yul\":15201:15203   */\n      0x20\n        /* \"#utility.yul\":15190:15199   */\n      dup3\n        /* \"#utility.yul\":15186:15204   */\n      add\n        /* \"#utility.yul\":15178:15204   */\n      swap1\n      pop\n        /* \"#utility.yul\":15250:15259   */\n      dup2\n        /* \"#utility.yul\":15244:15248   */\n      dup2\n        /* \"#utility.yul\":15240:15260   */\n      sub\n        /* \"#utility.yul\":15236:15237   */\n      0x00\n        /* \"#utility.yul\":15225:15234   */\n      dup4\n        /* \"#utility.yul\":15221:15238   */\n      add\n        /* \"#utility.yul\":15214:15261   */\n      mstore\n        /* \"#utility.yul\":15278:15409   */\n      tag_673\n        /* \"#utility.yul\":15404:15408   */\n      dup2\n        /* \"#utility.yul\":15278:15409   */\n      tag_490\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":15270:15409   */\n      swap1\n      pop\n        /* \"#utility.yul\":14997:15416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15422:15569   */\n    tag_491:\n        /* \"#utility.yul\":15523:15534   */\n      0x00\n        /* \"#utility.yul\":15560:15563   */\n      dup2\n        /* \"#utility.yul\":15545:15563   */\n      swap1\n      pop\n        /* \"#utility.yul\":15422:15569   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15575:15689   */\n    tag_492:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15695:16093   */\n    tag_493:\n        /* \"#utility.yul\":15854:15857   */\n      0x00\n        /* \"#utility.yul\":15875:15958   */\n      tag_677\n        /* \"#utility.yul\":15956:15957   */\n      0x00\n        /* \"#utility.yul\":15951:15954   */\n      dup4\n        /* \"#utility.yul\":15875:15958   */\n      tag_491\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":15868:15958   */\n      swap2\n      pop\n        /* \"#utility.yul\":15967:16060   */\n      tag_678\n        /* \"#utility.yul\":16056:16059   */\n      dup3\n        /* \"#utility.yul\":15967:16060   */\n      tag_492\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":16085:16086   */\n      0x00\n        /* \"#utility.yul\":16080:16083   */\n      dup3\n        /* \"#utility.yul\":16076:16087   */\n      add\n        /* \"#utility.yul\":16069:16087   */\n      swap1\n      pop\n        /* \"#utility.yul\":15695:16093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16099:16478   */\n    tag_278:\n        /* \"#utility.yul\":16283:16286   */\n      0x00\n        /* \"#utility.yul\":16305:16452   */\n      tag_680\n        /* \"#utility.yul\":16448:16451   */\n      dup3\n        /* \"#utility.yul\":16305:16452   */\n      tag_493\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":16298:16452   */\n      swap2\n      pop\n        /* \"#utility.yul\":16469:16472   */\n      dup2\n        /* \"#utility.yul\":16462:16472   */\n      swap1\n      pop\n        /* \"#utility.yul\":16099:16478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16484:16653   */\n    tag_494:\n        /* \"#utility.yul\":16624:16645   */\n      0x455448207472616e73666572206661696c656400000000000000000000000000\n        /* \"#utility.yul\":16620:16621   */\n      0x00\n        /* \"#utility.yul\":16612:16618   */\n      dup3\n        /* \"#utility.yul\":16608:16622   */\n      add\n        /* \"#utility.yul\":16601:16646   */\n      mstore\n        /* \"#utility.yul\":16484:16653   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16659:17025   */\n    tag_495:\n        /* \"#utility.yul\":16801:16804   */\n      0x00\n        /* \"#utility.yul\":16822:16889   */\n      tag_683\n        /* \"#utility.yul\":16886:16888   */\n      0x13\n        /* \"#utility.yul\":16881:16884   */\n      dup4\n        /* \"#utility.yul\":16822:16889   */\n      tag_459\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":16815:16889   */\n      swap2\n      pop\n        /* \"#utility.yul\":16898:16991   */\n      tag_684\n        /* \"#utility.yul\":16987:16990   */\n      dup3\n        /* \"#utility.yul\":16898:16991   */\n      tag_494\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":17016:17018   */\n      0x20\n        /* \"#utility.yul\":17011:17014   */\n      dup3\n        /* \"#utility.yul\":17007:17019   */\n      add\n        /* \"#utility.yul\":17000:17019   */\n      swap1\n      pop\n        /* \"#utility.yul\":16659:17025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17031:17450   */\n    tag_284:\n        /* \"#utility.yul\":17197:17201   */\n      0x00\n        /* \"#utility.yul\":17235:17237   */\n      0x20\n        /* \"#utility.yul\":17224:17233   */\n      dup3\n        /* \"#utility.yul\":17220:17238   */\n      add\n        /* \"#utility.yul\":17212:17238   */\n      swap1\n      pop\n        /* \"#utility.yul\":17284:17293   */\n      dup2\n        /* \"#utility.yul\":17278:17282   */\n      dup2\n        /* \"#utility.yul\":17274:17294   */\n      sub\n        /* \"#utility.yul\":17270:17271   */\n      0x00\n        /* \"#utility.yul\":17259:17268   */\n      dup4\n        /* \"#utility.yul\":17255:17272   */\n      add\n        /* \"#utility.yul\":17248:17295   */\n      mstore\n        /* \"#utility.yul\":17312:17443   */\n      tag_686\n        /* \"#utility.yul\":17438:17442   */\n      dup2\n        /* \"#utility.yul\":17312:17443   */\n      tag_495\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":17304:17443   */\n      swap1\n      pop\n        /* \"#utility.yul\":17031:17450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17456:17776   */\n    tag_324:\n        /* \"#utility.yul\":17571:17575   */\n      0x00\n        /* \"#utility.yul\":17609:17611   */\n      0x40\n        /* \"#utility.yul\":17598:17607   */\n      dup3\n        /* \"#utility.yul\":17594:17612   */\n      add\n        /* \"#utility.yul\":17586:17612   */\n      swap1\n      pop\n        /* \"#utility.yul\":17622:17687   */\n      tag_688\n        /* \"#utility.yul\":17684:17685   */\n      0x00\n        /* \"#utility.yul\":17673:17682   */\n      dup4\n        /* \"#utility.yul\":17669:17686   */\n      add\n        /* \"#utility.yul\":17660:17666   */\n      dup6\n        /* \"#utility.yul\":17622:17687   */\n      tag_457\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":17697:17769   */\n      tag_689\n        /* \"#utility.yul\":17765:17767   */\n      0x20\n        /* \"#utility.yul\":17754:17763   */\n      dup4\n        /* \"#utility.yul\":17750:17768   */\n      add\n        /* \"#utility.yul\":17741:17747   */\n      dup5\n        /* \"#utility.yul\":17697:17769   */\n      tag_480\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":17456:17776   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17782:18114   */\n    tag_346:\n        /* \"#utility.yul\":17903:17907   */\n      0x00\n        /* \"#utility.yul\":17941:17943   */\n      0x40\n        /* \"#utility.yul\":17930:17939   */\n      dup3\n        /* \"#utility.yul\":17926:17944   */\n      add\n        /* \"#utility.yul\":17918:17944   */\n      swap1\n      pop\n        /* \"#utility.yul\":17954:18025   */\n      tag_691\n        /* \"#utility.yul\":18022:18023   */\n      0x00\n        /* \"#utility.yul\":18011:18020   */\n      dup4\n        /* \"#utility.yul\":18007:18024   */\n      add\n        /* \"#utility.yul\":17998:18004   */\n      dup6\n        /* \"#utility.yul\":17954:18025   */\n      tag_487\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":18035:18107   */\n      tag_692\n        /* \"#utility.yul\":18103:18105   */\n      0x20\n        /* \"#utility.yul\":18092:18101   */\n      dup4\n        /* \"#utility.yul\":18088:18106   */\n      add\n        /* \"#utility.yul\":18079:18085   */\n      dup5\n        /* \"#utility.yul\":18035:18107   */\n      tag_480\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":17782:18114   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18120:18257   */\n    tag_496:\n        /* \"#utility.yul\":18174:18179   */\n      0x00\n        /* \"#utility.yul\":18205:18211   */\n      dup2\n        /* \"#utility.yul\":18199:18212   */\n      mload\n        /* \"#utility.yul\":18190:18212   */\n      swap1\n      pop\n        /* \"#utility.yul\":18221:18251   */\n      tag_694\n        /* \"#utility.yul\":18245:18250   */\n      dup2\n        /* \"#utility.yul\":18221:18251   */\n      tag_473\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":18120:18257   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18263:18608   */\n    tag_350:\n        /* \"#utility.yul\":18330:18336   */\n      0x00\n        /* \"#utility.yul\":18379:18381   */\n      0x20\n        /* \"#utility.yul\":18367:18376   */\n      dup3\n        /* \"#utility.yul\":18358:18365   */\n      dup5\n        /* \"#utility.yul\":18354:18377   */\n      sub\n        /* \"#utility.yul\":18350:18382   */\n      slt\n        /* \"#utility.yul\":18347:18466   */\n      iszero\n      tag_696\n      jumpi\n        /* \"#utility.yul\":18385:18464   */\n      tag_697\n      tag_451\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":18347:18466   */\n    tag_696:\n        /* \"#utility.yul\":18505:18506   */\n      0x00\n        /* \"#utility.yul\":18530:18591   */\n      tag_698\n        /* \"#utility.yul\":18583:18590   */\n      dup5\n        /* \"#utility.yul\":18574:18580   */\n      dup3\n        /* \"#utility.yul\":18563:18572   */\n      dup6\n        /* \"#utility.yul\":18559:18581   */\n      add\n        /* \"#utility.yul\":18530:18591   */\n      tag_496\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":18520:18591   */\n      swap2\n      pop\n        /* \"#utility.yul\":18476:18601   */\n      pop\n        /* \"#utility.yul\":18263:18608   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18614:19389   */\n    tag_375:\n        /* \"#utility.yul\":18847:18851   */\n      0x00\n        /* \"#utility.yul\":18885:18888   */\n      0xc0\n        /* \"#utility.yul\":18874:18883   */\n      dup3\n        /* \"#utility.yul\":18870:18889   */\n      add\n        /* \"#utility.yul\":18862:18889   */\n      swap1\n      pop\n        /* \"#utility.yul\":18899:18970   */\n      tag_700\n        /* \"#utility.yul\":18967:18968   */\n      0x00\n        /* \"#utility.yul\":18956:18965   */\n      dup4\n        /* \"#utility.yul\":18952:18969   */\n      add\n        /* \"#utility.yul\":18943:18949   */\n      dup10\n        /* \"#utility.yul\":18899:18970   */\n      tag_487\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":18980:19052   */\n      tag_701\n        /* \"#utility.yul\":19048:19050   */\n      0x20\n        /* \"#utility.yul\":19037:19046   */\n      dup4\n        /* \"#utility.yul\":19033:19051   */\n      add\n        /* \"#utility.yul\":19024:19030   */\n      dup9\n        /* \"#utility.yul\":18980:19052   */\n      tag_480\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":19062:19134   */\n      tag_702\n        /* \"#utility.yul\":19130:19132   */\n      0x40\n        /* \"#utility.yul\":19119:19128   */\n      dup4\n        /* \"#utility.yul\":19115:19133   */\n      add\n        /* \"#utility.yul\":19106:19112   */\n      dup8\n        /* \"#utility.yul\":19062:19134   */\n      tag_480\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":19144:19216   */\n      tag_703\n        /* \"#utility.yul\":19212:19214   */\n      0x60\n        /* \"#utility.yul\":19201:19210   */\n      dup4\n        /* \"#utility.yul\":19197:19215   */\n      add\n        /* \"#utility.yul\":19188:19194   */\n      dup7\n        /* \"#utility.yul\":19144:19216   */\n      tag_480\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":19226:19299   */\n      tag_704\n        /* \"#utility.yul\":19294:19297   */\n      0x80\n        /* \"#utility.yul\":19283:19292   */\n      dup4\n        /* \"#utility.yul\":19279:19298   */\n      add\n        /* \"#utility.yul\":19270:19276   */\n      dup6\n        /* \"#utility.yul\":19226:19299   */\n      tag_487\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":19309:19382   */\n      tag_705\n        /* \"#utility.yul\":19377:19380   */\n      0xa0\n        /* \"#utility.yul\":19366:19375   */\n      dup4\n        /* \"#utility.yul\":19362:19381   */\n      add\n        /* \"#utility.yul\":19353:19359   */\n      dup5\n        /* \"#utility.yul\":19309:19382   */\n      tag_480\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":18614:19389   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19395:19538   */\n    tag_497:\n        /* \"#utility.yul\":19452:19457   */\n      0x00\n        /* \"#utility.yul\":19483:19489   */\n      dup2\n        /* \"#utility.yul\":19477:19490   */\n      mload\n        /* \"#utility.yul\":19468:19490   */\n      swap1\n      pop\n        /* \"#utility.yul\":19499:19532   */\n      tag_707\n        /* \"#utility.yul\":19526:19531   */\n      dup2\n        /* \"#utility.yul\":19499:19532   */\n      tag_468\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":19395:19538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19544:20207   */\n    tag_379:\n        /* \"#utility.yul\":19632:19638   */\n      0x00\n        /* \"#utility.yul\":19640:19646   */\n      0x00\n        /* \"#utility.yul\":19648:19654   */\n      0x00\n        /* \"#utility.yul\":19697:19699   */\n      0x60\n        /* \"#utility.yul\":19685:19694   */\n      dup5\n        /* \"#utility.yul\":19676:19683   */\n      dup7\n        /* \"#utility.yul\":19672:19695   */\n      sub\n        /* \"#utility.yul\":19668:19700   */\n      slt\n        /* \"#utility.yul\":19665:19784   */\n      iszero\n      tag_709\n      jumpi\n        /* \"#utility.yul\":19703:19782   */\n      tag_710\n      tag_451\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":19665:19784   */\n    tag_709:\n        /* \"#utility.yul\":19823:19824   */\n      0x00\n        /* \"#utility.yul\":19848:19912   */\n      tag_711\n        /* \"#utility.yul\":19904:19911   */\n      dup7\n        /* \"#utility.yul\":19895:19901   */\n      dup3\n        /* \"#utility.yul\":19884:19893   */\n      dup8\n        /* \"#utility.yul\":19880:19902   */\n      add\n        /* \"#utility.yul\":19848:19912   */\n      tag_497\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":19838:19912   */\n      swap4\n      pop\n        /* \"#utility.yul\":19794:19922   */\n      pop\n        /* \"#utility.yul\":19961:19963   */\n      0x20\n        /* \"#utility.yul\":19987:20051   */\n      tag_712\n        /* \"#utility.yul\":20043:20050   */\n      dup7\n        /* \"#utility.yul\":20034:20040   */\n      dup3\n        /* \"#utility.yul\":20023:20032   */\n      dup8\n        /* \"#utility.yul\":20019:20041   */\n      add\n        /* \"#utility.yul\":19987:20051   */\n      tag_497\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":19977:20051   */\n      swap3\n      pop\n        /* \"#utility.yul\":19932:20061   */\n      pop\n        /* \"#utility.yul\":20100:20102   */\n      0x40\n        /* \"#utility.yul\":20126:20190   */\n      tag_713\n        /* \"#utility.yul\":20182:20189   */\n      dup7\n        /* \"#utility.yul\":20173:20179   */\n      dup3\n        /* \"#utility.yul\":20162:20171   */\n      dup8\n        /* \"#utility.yul\":20158:20180   */\n      add\n        /* \"#utility.yul\":20126:20190   */\n      tag_497\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":20116:20190   */\n      swap2\n      pop\n        /* \"#utility.yul\":20071:20200   */\n      pop\n        /* \"#utility.yul\":19544:20207   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":20213:20655   */\n    tag_396:\n        /* \"#utility.yul\":20362:20366   */\n      0x00\n        /* \"#utility.yul\":20400:20402   */\n      0x60\n        /* \"#utility.yul\":20389:20398   */\n      dup3\n        /* \"#utility.yul\":20385:20403   */\n      add\n        /* \"#utility.yul\":20377:20403   */\n      swap1\n      pop\n        /* \"#utility.yul\":20413:20484   */\n      tag_715\n        /* \"#utility.yul\":20481:20482   */\n      0x00\n        /* \"#utility.yul\":20470:20479   */\n      dup4\n        /* \"#utility.yul\":20466:20483   */\n      add\n        /* \"#utility.yul\":20457:20463   */\n      dup7\n        /* \"#utility.yul\":20413:20484   */\n      tag_487\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":20494:20566   */\n      tag_716\n        /* \"#utility.yul\":20562:20564   */\n      0x20\n        /* \"#utility.yul\":20551:20560   */\n      dup4\n        /* \"#utility.yul\":20547:20565   */\n      add\n        /* \"#utility.yul\":20538:20544   */\n      dup6\n        /* \"#utility.yul\":20494:20566   */\n      tag_480\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":20576:20648   */\n      tag_717\n        /* \"#utility.yul\":20644:20646   */\n      0x40\n        /* \"#utility.yul\":20633:20642   */\n      dup4\n        /* \"#utility.yul\":20629:20647   */\n      add\n        /* \"#utility.yul\":20620:20626   */\n      dup5\n        /* \"#utility.yul\":20576:20648   */\n      tag_480\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":20213:20655   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20661:20842   */\n    tag_498:\n        /* \"#utility.yul\":20801:20834   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":20797:20798   */\n      0x00\n        /* \"#utility.yul\":20789:20795   */\n      dup3\n        /* \"#utility.yul\":20785:20799   */\n      add\n        /* \"#utility.yul\":20778:20835   */\n      mstore\n        /* \"#utility.yul\":20661:20842   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20848:21214   */\n    tag_499:\n        /* \"#utility.yul\":20990:20993   */\n      0x00\n        /* \"#utility.yul\":21011:21078   */\n      tag_720\n        /* \"#utility.yul\":21075:21077   */\n      0x1f\n        /* \"#utility.yul\":21070:21073   */\n      dup4\n        /* \"#utility.yul\":21011:21078   */\n      tag_459\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":21004:21078   */\n      swap2\n      pop\n        /* \"#utility.yul\":21087:21180   */\n      tag_721\n        /* \"#utility.yul\":21176:21179   */\n      dup3\n        /* \"#utility.yul\":21087:21180   */\n      tag_498\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":21205:21207   */\n      0x20\n        /* \"#utility.yul\":21200:21203   */\n      dup3\n        /* \"#utility.yul\":21196:21208   */\n      add\n        /* \"#utility.yul\":21189:21208   */\n      swap1\n      pop\n        /* \"#utility.yul\":20848:21214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21220:21639   */\n    tag_426:\n        /* \"#utility.yul\":21386:21390   */\n      0x00\n        /* \"#utility.yul\":21424:21426   */\n      0x20\n        /* \"#utility.yul\":21413:21422   */\n      dup3\n        /* \"#utility.yul\":21409:21427   */\n      add\n        /* \"#utility.yul\":21401:21427   */\n      swap1\n      pop\n        /* \"#utility.yul\":21473:21482   */\n      dup2\n        /* \"#utility.yul\":21467:21471   */\n      dup2\n        /* \"#utility.yul\":21463:21483   */\n      sub\n        /* \"#utility.yul\":21459:21460   */\n      0x00\n        /* \"#utility.yul\":21448:21457   */\n      dup4\n        /* \"#utility.yul\":21444:21461   */\n      add\n        /* \"#utility.yul\":21437:21484   */\n      mstore\n        /* \"#utility.yul\":21501:21632   */\n      tag_723\n        /* \"#utility.yul\":21627:21631   */\n      dup2\n        /* \"#utility.yul\":21501:21632   */\n      tag_499\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":21493:21632   */\n      swap1\n      pop\n        /* \"#utility.yul\":21220:21639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21645:21977   */\n    tag_439:\n        /* \"#utility.yul\":21766:21770   */\n      0x00\n        /* \"#utility.yul\":21804:21806   */\n      0x40\n        /* \"#utility.yul\":21793:21802   */\n      dup3\n        /* \"#utility.yul\":21789:21807   */\n      add\n        /* \"#utility.yul\":21781:21807   */\n      swap1\n      pop\n        /* \"#utility.yul\":21817:21888   */\n      tag_725\n        /* \"#utility.yul\":21885:21886   */\n      0x00\n        /* \"#utility.yul\":21874:21883   */\n      dup4\n        /* \"#utility.yul\":21870:21887   */\n      add\n        /* \"#utility.yul\":21861:21867   */\n      dup6\n        /* \"#utility.yul\":21817:21888   */\n      tag_487\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":21898:21970   */\n      tag_726\n        /* \"#utility.yul\":21966:21968   */\n      0x20\n        /* \"#utility.yul\":21955:21964   */\n      dup4\n        /* \"#utility.yul\":21951:21969   */\n      add\n        /* \"#utility.yul\":21942:21948   */\n      dup5\n        /* \"#utility.yul\":21898:21970   */\n      tag_484\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":21645:21977   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21983:22163   */\n    tag_500:\n        /* \"#utility.yul\":22031:22108   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22028:22029   */\n      0x00\n        /* \"#utility.yul\":22021:22109   */\n      mstore\n        /* \"#utility.yul\":22128:22132   */\n      0x11\n        /* \"#utility.yul\":22125:22126   */\n      0x04\n        /* \"#utility.yul\":22118:22133   */\n      mstore\n        /* \"#utility.yul\":22152:22156   */\n      0x24\n        /* \"#utility.yul\":22149:22150   */\n      0x00\n        /* \"#utility.yul\":22142:22157   */\n      revert\n        /* \"#utility.yul\":22169:22360   */\n    tag_443:\n        /* \"#utility.yul\":22209:22212   */\n      0x00\n        /* \"#utility.yul\":22228:22248   */\n      tag_729\n        /* \"#utility.yul\":22246:22247   */\n      dup3\n        /* \"#utility.yul\":22228:22248   */\n      tag_467\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":22223:22248   */\n      swap2\n      pop\n        /* \"#utility.yul\":22262:22282   */\n      tag_730\n        /* \"#utility.yul\":22280:22281   */\n      dup4\n        /* \"#utility.yul\":22262:22282   */\n      tag_467\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":22257:22282   */\n      swap3\n      pop\n        /* \"#utility.yul\":22305:22306   */\n      dup3\n        /* \"#utility.yul\":22302:22303   */\n      dup3\n        /* \"#utility.yul\":22298:22307   */\n      add\n        /* \"#utility.yul\":22291:22307   */\n      swap1\n      pop\n        /* \"#utility.yul\":22326:22329   */\n      dup1\n        /* \"#utility.yul\":22323:22324   */\n      dup3\n        /* \"#utility.yul\":22320:22330   */\n      gt\n        /* \"#utility.yul\":22317:22353   */\n      iszero\n      tag_731\n      jumpi\n        /* \"#utility.yul\":22333:22351   */\n      tag_732\n      tag_500\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":22317:22353   */\n    tag_731:\n        /* \"#utility.yul\":22169:22360   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209f1944292964c7e1204b31f0dec38a3ab244dc0bddece31bcda082e574b2596b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1481": {
									"entryPoint": null,
									"id": 1481,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_534": {
									"entryPoint": null,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_632": {
									"entryPoint": null,
									"id": 632,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 1340,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_935": {
									"entryPoint": 1207,
									"id": 935,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1211": {
									"entryPoint": 2318,
									"id": 1211,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setRoleAdmin_217": {
									"entryPoint": 1586,
									"id": 217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_902": {
									"entryPoint": 1681,
									"id": 902,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2325,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 2218,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3406,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2927,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06": {
									"entryPoint": 3287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9456:11",
										"nodeType": "YulBlock",
										"src": "0:9456:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "922:274:11",
													"nodeType": "YulBlock",
													"src": "922:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:11",
																"nodeType": "YulBlock",
																"src": "968:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:11"
																			},
																			"nativeSrc": "970:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:11"
																		},
																		"nativeSrc": "970:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:11"
																		},
																		"nativeSrc": "939:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:11",
																		"nodeType": "YulLiteral",
																		"src": "964:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:11"
																},
																"nativeSrc": "935:32:11",
																"nodeType": "YulFunctionCall",
																"src": "935:32:11"
															},
															"nativeSrc": "932:119:11",
															"nodeType": "YulIf",
															"src": "932:119:11"
														},
														{
															"nativeSrc": "1061:128:11",
															"nodeType": "YulBlock",
															"src": "1061:128:11",
															"statements": [
																{
																	"nativeSrc": "1076:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:11"
																				},
																				"nativeSrc": "1147:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:11"
																		},
																		"nativeSrc": "1115:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:11",
														"nodeType": "YulTypedName",
														"src": "892:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:11",
														"nodeType": "YulTypedName",
														"src": "903:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:11",
														"nodeType": "YulTypedName",
														"src": "915:6:11",
														"type": ""
													}
												],
												"src": "845:351:11"
											},
											{
												"body": {
													"nativeSrc": "1261:40:11",
													"nodeType": "YulBlock",
													"src": "1261:40:11",
													"statements": [
														{
															"nativeSrc": "1272:22:11",
															"nodeType": "YulAssignment",
															"src": "1272:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:11"
																},
																"nativeSrc": "1282:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:11",
														"nodeType": "YulTypedName",
														"src": "1244:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:11",
														"nodeType": "YulTypedName",
														"src": "1254:6:11",
														"type": ""
													}
												],
												"src": "1202:99:11"
											},
											{
												"body": {
													"nativeSrc": "1335:152:11",
													"nodeType": "YulBlock",
													"src": "1335:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:11",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:11"
																},
																"nativeSrc": "1345:88:11",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:11"
															},
															"nativeSrc": "1345:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:11"
																},
																"nativeSrc": "1442:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:11"
															},
															"nativeSrc": "1442:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:11"
																},
																"nativeSrc": "1466:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:11"
															},
															"nativeSrc": "1466:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:11"
											},
											{
												"body": {
													"nativeSrc": "1521:152:11",
													"nodeType": "YulBlock",
													"src": "1521:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:11",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:11"
																},
																"nativeSrc": "1531:88:11",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:11"
															},
															"nativeSrc": "1531:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:11"
																},
																"nativeSrc": "1628:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:11"
															},
															"nativeSrc": "1628:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:11"
																},
																"nativeSrc": "1652:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:11"
															},
															"nativeSrc": "1652:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:11"
											},
											{
												"body": {
													"nativeSrc": "1730:269:11",
													"nodeType": "YulBlock",
													"src": "1730:269:11",
													"statements": [
														{
															"nativeSrc": "1740:22:11",
															"nodeType": "YulAssignment",
															"src": "1740:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:11"
																},
																"nativeSrc": "1750:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:11"
																}
															]
														},
														{
															"nativeSrc": "1771:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:11"
																},
																"nativeSrc": "1797:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:11",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:11",
																"nodeType": "YulBlock",
																"src": "1848:51:11",
																"statements": [
																	{
																		"nativeSrc": "1862:27:11",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:11"
																			},
																			"nativeSrc": "1872:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:11"
																},
																"nativeSrc": "1821:26:11",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:11"
															},
															"nativeSrc": "1818:81:11",
															"nodeType": "YulIf",
															"src": "1818:81:11"
														},
														{
															"body": {
																"nativeSrc": "1951:42:11",
																"nodeType": "YulBlock",
																"src": "1951:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:11"
																			},
																			"nativeSrc": "1965:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:11"
																		},
																		"nativeSrc": "1965:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:11"
																		},
																		"nativeSrc": "1935:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:11"
																},
																"nativeSrc": "1912:38:11",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:11"
															},
															"nativeSrc": "1909:84:11",
															"nodeType": "YulIf",
															"src": "1909:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:11",
														"nodeType": "YulTypedName",
														"src": "1714:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:11",
														"nodeType": "YulTypedName",
														"src": "1723:6:11",
														"type": ""
													}
												],
												"src": "1679:320:11"
											},
											{
												"body": {
													"nativeSrc": "2059:87:11",
													"nodeType": "YulBlock",
													"src": "2059:87:11",
													"statements": [
														{
															"nativeSrc": "2069:11:11",
															"nodeType": "YulAssignment",
															"src": "2069:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:11",
																"nodeType": "YulIdentifier",
																"src": "2077:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:11"
																},
																"nativeSrc": "2090:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:11"
															},
															"nativeSrc": "2090:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:11"
														},
														{
															"nativeSrc": "2113:26:11",
															"nodeType": "YulAssignment",
															"src": "2113:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:11"
																},
																"nativeSrc": "2121:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:11",
														"nodeType": "YulTypedName",
														"src": "2046:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:11",
														"nodeType": "YulTypedName",
														"src": "2054:4:11",
														"type": ""
													}
												],
												"src": "2005:141:11"
											},
											{
												"body": {
													"nativeSrc": "2196:49:11",
													"nodeType": "YulBlock",
													"src": "2196:49:11",
													"statements": [
														{
															"nativeSrc": "2206:33:11",
															"nodeType": "YulAssignment",
															"src": "2206:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:11"
																		},
																		"nativeSrc": "2220:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:11"
																},
																"nativeSrc": "2216:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:11",
														"nodeType": "YulTypedName",
														"src": "2179:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:11",
														"nodeType": "YulTypedName",
														"src": "2189:6:11",
														"type": ""
													}
												],
												"src": "2152:93:11"
											},
											{
												"body": {
													"nativeSrc": "2304:54:11",
													"nodeType": "YulBlock",
													"src": "2304:54:11",
													"statements": [
														{
															"nativeSrc": "2314:37:11",
															"nodeType": "YulAssignment",
															"src": "2314:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:11"
																},
																"nativeSrc": "2335:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:11",
														"nodeType": "YulTypedName",
														"src": "2279:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:11",
														"nodeType": "YulTypedName",
														"src": "2285:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:11",
														"nodeType": "YulTypedName",
														"src": "2295:8:11",
														"type": ""
													}
												],
												"src": "2251:107:11"
											},
											{
												"body": {
													"nativeSrc": "2440:317:11",
													"nodeType": "YulBlock",
													"src": "2440:317:11",
													"statements": [
														{
															"nativeSrc": "2450:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:11"
																},
																"nativeSrc": "2467:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:11",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:11",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:11"
																},
																"nativeSrc": "2506:97:11",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:11",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:11",
															"nodeType": "YulAssignment",
															"src": "2612:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:11"
																},
																"nativeSrc": "2624:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:11"
																}
															]
														},
														{
															"nativeSrc": "2672:30:11",
															"nodeType": "YulAssignment",
															"src": "2672:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:11"
																		},
																		"nativeSrc": "2692:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:11"
																},
																"nativeSrc": "2681:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:11"
																}
															]
														},
														{
															"nativeSrc": "2711:40:11",
															"nodeType": "YulAssignment",
															"src": "2711:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:11"
																		},
																		"nativeSrc": "2731:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:11"
																},
																"nativeSrc": "2721:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:11",
														"nodeType": "YulTypedName",
														"src": "2401:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:11",
														"nodeType": "YulTypedName",
														"src": "2408:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:11",
														"nodeType": "YulTypedName",
														"src": "2420:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:11",
														"nodeType": "YulTypedName",
														"src": "2433:6:11",
														"type": ""
													}
												],
												"src": "2364:393:11"
											},
											{
												"body": {
													"nativeSrc": "2808:32:11",
													"nodeType": "YulBlock",
													"src": "2808:32:11",
													"statements": [
														{
															"nativeSrc": "2818:16:11",
															"nodeType": "YulAssignment",
															"src": "2818:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:11",
																"nodeType": "YulIdentifier",
																"src": "2829:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:11",
														"nodeType": "YulTypedName",
														"src": "2790:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:11",
														"nodeType": "YulTypedName",
														"src": "2800:7:11",
														"type": ""
													}
												],
												"src": "2763:77:11"
											},
											{
												"body": {
													"nativeSrc": "2878:28:11",
													"nodeType": "YulBlock",
													"src": "2878:28:11",
													"statements": [
														{
															"nativeSrc": "2888:12:11",
															"nodeType": "YulAssignment",
															"src": "2888:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:11",
																"nodeType": "YulIdentifier",
																"src": "2895:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:11",
														"nodeType": "YulTypedName",
														"src": "2864:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:11",
														"nodeType": "YulTypedName",
														"src": "2874:3:11",
														"type": ""
													}
												],
												"src": "2846:60:11"
											},
											{
												"body": {
													"nativeSrc": "2972:82:11",
													"nodeType": "YulBlock",
													"src": "2972:82:11",
													"statements": [
														{
															"nativeSrc": "2982:66:11",
															"nodeType": "YulAssignment",
															"src": "2982:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:11"
																				},
																				"nativeSrc": "3022:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:11"
																		},
																		"nativeSrc": "3013:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:11"
																},
																"nativeSrc": "2995:53:11",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:11",
														"nodeType": "YulTypedName",
														"src": "2952:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:11",
														"nodeType": "YulTypedName",
														"src": "2962:9:11",
														"type": ""
													}
												],
												"src": "2912:142:11"
											},
											{
												"body": {
													"nativeSrc": "3107:28:11",
													"nodeType": "YulBlock",
													"src": "3107:28:11",
													"statements": [
														{
															"nativeSrc": "3117:12:11",
															"nodeType": "YulAssignment",
															"src": "3117:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:11",
																"nodeType": "YulIdentifier",
																"src": "3124:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:11",
														"nodeType": "YulTypedName",
														"src": "3093:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:11",
														"nodeType": "YulTypedName",
														"src": "3103:3:11",
														"type": ""
													}
												],
												"src": "3060:75:11"
											},
											{
												"body": {
													"nativeSrc": "3217:193:11",
													"nodeType": "YulBlock",
													"src": "3217:193:11",
													"statements": [
														{
															"nativeSrc": "3227:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:11"
																},
																"nativeSrc": "3251:39:11",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:11",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:11"
																				},
																				"nativeSrc": "3340:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:11"
																				},
																				"nativeSrc": "3361:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:11"
																		},
																		"nativeSrc": "3312:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:11"
																},
																"nativeSrc": "3299:105:11",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:11"
															},
															"nativeSrc": "3299:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:11",
														"nodeType": "YulTypedName",
														"src": "3194:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:11",
														"nodeType": "YulTypedName",
														"src": "3200:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:11",
														"nodeType": "YulTypedName",
														"src": "3208:7:11",
														"type": ""
													}
												],
												"src": "3141:269:11"
											},
											{
												"body": {
													"nativeSrc": "3465:24:11",
													"nodeType": "YulBlock",
													"src": "3465:24:11",
													"statements": [
														{
															"nativeSrc": "3475:8:11",
															"nodeType": "YulAssignment",
															"src": "3475:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:11",
																"nodeType": "YulLiteral",
																"src": "3482:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:11",
														"nodeType": "YulTypedName",
														"src": "3461:3:11",
														"type": ""
													}
												],
												"src": "3416:73:11"
											},
											{
												"body": {
													"nativeSrc": "3548:136:11",
													"nodeType": "YulBlock",
													"src": "3548:136:11",
													"statements": [
														{
															"nativeSrc": "3558:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:11"
																},
																"nativeSrc": "3572:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:11"
																},
																"nativeSrc": "3613:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:11"
															},
															"nativeSrc": "3613:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:11",
														"nodeType": "YulTypedName",
														"src": "3534:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:11",
														"nodeType": "YulTypedName",
														"src": "3540:6:11",
														"type": ""
													}
												],
												"src": "3495:189:11"
											},
											{
												"body": {
													"nativeSrc": "3740:136:11",
													"nodeType": "YulBlock",
													"src": "3740:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:11",
																"nodeType": "YulBlock",
																"src": "3807:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:11"
																			},
																			"nativeSrc": "3821:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:11"
																		},
																		"nativeSrc": "3821:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:11"
																},
																"nativeSrc": "3757:14:11",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:11"
															},
															"nativeSrc": "3750:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:11",
																"nodeType": "YulBlock",
																"src": "3772:26:11",
																"statements": [
																	{
																		"nativeSrc": "3774:22:11",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:11"
																			},
																			"nativeSrc": "3783:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:11",
																"nodeType": "YulBlock",
																"src": "3754:2:11",
																"statements": []
															},
															"src": "3750:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:11",
														"nodeType": "YulTypedName",
														"src": "3728:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:11",
														"nodeType": "YulTypedName",
														"src": "3735:3:11",
														"type": ""
													}
												],
												"src": "3690:186:11"
											},
											{
												"body": {
													"nativeSrc": "3961:464:11",
													"nodeType": "YulBlock",
													"src": "3961:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:11",
																"nodeType": "YulBlock",
																"src": "3987:431:11",
																"statements": [
																	{
																		"nativeSrc": "4001:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:11"
																			},
																			"nativeSrc": "4017:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:11",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:11"
																					},
																					"nativeSrc": "4101:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:11"
																			},
																			"nativeSrc": "4087:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:11",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:11",
																			"nodeType": "YulBlock",
																			"src": "4288:27:11",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:11",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:11",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:11"
																			},
																			"nativeSrc": "4269:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:11"
																		},
																		"nativeSrc": "4266:49:11",
																		"nodeType": "YulIf",
																		"src": "4266:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:11"
																							},
																							"nativeSrc": "4384:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:11"
																					},
																					"nativeSrc": "4370:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:11"
																			},
																			"nativeSrc": "4328:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:11"
																		},
																		"nativeSrc": "4328:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:11"
																},
																"nativeSrc": "3975:11:11",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:11"
															},
															"nativeSrc": "3972:446:11",
															"nodeType": "YulIf",
															"src": "3972:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:11",
														"nodeType": "YulTypedName",
														"src": "3937:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:11",
														"nodeType": "YulTypedName",
														"src": "3944:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:11",
														"nodeType": "YulTypedName",
														"src": "3949:10:11",
														"type": ""
													}
												],
												"src": "3882:543:11"
											},
											{
												"body": {
													"nativeSrc": "4494:54:11",
													"nodeType": "YulBlock",
													"src": "4494:54:11",
													"statements": [
														{
															"nativeSrc": "4504:37:11",
															"nodeType": "YulAssignment",
															"src": "4504:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:11"
																},
																"nativeSrc": "4525:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:11",
														"nodeType": "YulTypedName",
														"src": "4469:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:11",
														"nodeType": "YulTypedName",
														"src": "4475:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:11",
														"nodeType": "YulTypedName",
														"src": "4485:8:11",
														"type": ""
													}
												],
												"src": "4431:117:11"
											},
											{
												"body": {
													"nativeSrc": "4605:118:11",
													"nodeType": "YulBlock",
													"src": "4605:118:11",
													"statements": [
														{
															"nativeSrc": "4615:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:11"
																				},
																				"nativeSrc": "4660:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:11"
																				},
																				"nativeSrc": "4675:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:11"
																		},
																		"nativeSrc": "4631:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:11"
																},
																"nativeSrc": "4627:56:11",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:11",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:11",
															"nodeType": "YulAssignment",
															"src": "4692:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:11"
																},
																"nativeSrc": "4702:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:11",
														"nodeType": "YulTypedName",
														"src": "4582:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:11",
														"nodeType": "YulTypedName",
														"src": "4588:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:11",
														"nodeType": "YulTypedName",
														"src": "4598:6:11",
														"type": ""
													}
												],
												"src": "4554:169:11"
											},
											{
												"body": {
													"nativeSrc": "4809:214:11",
													"nodeType": "YulBlock",
													"src": "4809:214:11",
													"statements": [
														{
															"nativeSrc": "4942:37:11",
															"nodeType": "YulAssignment",
															"src": "4942:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:11"
																},
																"nativeSrc": "4950:29:11",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:11"
																}
															]
														},
														{
															"nativeSrc": "4988:29:11",
															"nodeType": "YulAssignment",
															"src": "4988:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:11"
																		},
																		"nativeSrc": "5005:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:11"
																},
																"nativeSrc": "4996:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:11",
														"nodeType": "YulTypedName",
														"src": "4790:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:11",
														"nodeType": "YulTypedName",
														"src": "4796:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:11",
														"nodeType": "YulTypedName",
														"src": "4804:4:11",
														"type": ""
													}
												],
												"src": "4728:295:11"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:11",
													"nodeType": "YulBlock",
													"src": "5120:1303:11",
													"statements": [
														{
															"nativeSrc": "5131:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:11"
																},
																"nativeSrc": "5145:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:11",
																"nodeType": "YulBlock",
																"src": "5267:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:11"
																			},
																			"nativeSrc": "5269:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:11"
																		},
																		"nativeSrc": "5269:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:11",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:11"
																},
																"nativeSrc": "5236:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:11"
															},
															"nativeSrc": "5233:56:11",
															"nodeType": "YulIf",
															"src": "5233:56:11"
														},
														{
															"nativeSrc": "5299:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:11"
																		},
																		"nativeSrc": "5339:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:11"
																},
																"nativeSrc": "5313:38:11",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:11"
																},
																"nativeSrc": "5398:67:11",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:11"
															},
															"nativeSrc": "5398:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:11"
														},
														{
															"nativeSrc": "5475:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:11",
																"nodeType": "YulLiteral",
																"src": "5492:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:11",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:11",
															"nodeType": "YulAssignment",
															"src": "5503:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:11",
																"nodeType": "YulLiteral",
																"src": "5516:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:11",
																		"nodeType": "YulBlock",
																		"src": "5567:611:11",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:11",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:11"
																							},
																							"nativeSrc": "5608:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:11"
																					},
																					"nativeSrc": "5596:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:11",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:11"
																					},
																					"nativeSrc": "5646:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:11",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:11",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:11",
																					"nodeType": "YulBlock",
																					"src": "5764:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:11"
																												},
																												"nativeSrc": "5803:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:11"
																										},
																										"nativeSrc": "5797:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:11"
																								},
																								"nativeSrc": "5782:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:11"
																							},
																							"nativeSrc": "5782:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:11"
																						},
																						{
																							"nativeSrc": "5841:24:11",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:11",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:11"
																								},
																								"nativeSrc": "5851:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:11",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:11",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:11"
																								},
																								"nativeSrc": "5895:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:11"
																					},
																					"nativeSrc": "5727:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:11"
																				},
																				"nativeSrc": "5719:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:11",
																					"nodeType": "YulBlock",
																					"src": "5742:21:11",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:11",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:11",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:11"
																								},
																								"nativeSrc": "5749:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:11",
																					"nodeType": "YulBlock",
																					"src": "5723:3:11",
																					"statements": []
																				},
																				"src": "5719:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:11",
																					"nodeType": "YulBlock",
																					"src": "5963:156:11",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:11"
																										},
																										"nativeSrc": "6004:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:11"
																								},
																								"nativeSrc": "5998:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:11",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:11",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:11"
																												},
																												"nativeSrc": "6086:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:11"
																										},
																										"nativeSrc": "6056:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:11"
																								},
																								"nativeSrc": "6041:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:11"
																							},
																							"nativeSrc": "6041:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:11"
																					},
																					"nativeSrc": "5943:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:11"
																				},
																				"nativeSrc": "5940:179:11",
																				"nodeType": "YulIf",
																				"src": "5940:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:11",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:11"
																									},
																									"nativeSrc": "6149:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:11",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:11"
																							},
																							"nativeSrc": "6145:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:11"
																					},
																					"nativeSrc": "6132:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:11"
																				},
																				"nativeSrc": "6132:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:11"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:11",
																	"nodeType": "YulCase",
																	"src": "5560:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:11",
																		"nodeType": "YulBlock",
																		"src": "6195:222:11",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:11",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:11",
																					"nodeType": "YulBlock",
																					"src": "6246:67:11",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:11",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:11"
																										},
																										"nativeSrc": "6279:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:11"
																								},
																								"nativeSrc": "6273:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:11"
																				},
																				"nativeSrc": "6236:77:11",
																				"nodeType": "YulIf",
																				"src": "6236:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:11"
																							},
																							"nativeSrc": "6339:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:11"
																					},
																					"nativeSrc": "6326:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:11"
																				},
																				"nativeSrc": "6326:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:11"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:11",
																	"nodeType": "YulCase",
																	"src": "6187:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:11"
																},
																"nativeSrc": "5537:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:11"
															},
															"nativeSrc": "5530:887:11",
															"nodeType": "YulSwitch",
															"src": "5530:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:11",
														"nodeType": "YulTypedName",
														"src": "5109:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:11",
														"nodeType": "YulTypedName",
														"src": "5115:3:11",
														"type": ""
													}
												],
												"src": "5028:1395:11"
											},
											{
												"body": {
													"nativeSrc": "6525:73:11",
													"nodeType": "YulBlock",
													"src": "6525:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6542:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6542:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6547:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6547:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6535:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6535:6:11"
																},
																"nativeSrc": "6535:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6535:19:11"
															},
															"nativeSrc": "6535:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "6535:19:11"
														},
														{
															"nativeSrc": "6563:29:11",
															"nodeType": "YulAssignment",
															"src": "6563:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6582:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6582:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6587:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6587:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6578:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6578:3:11"
																},
																"nativeSrc": "6578:14:11",
																"nodeType": "YulFunctionCall",
																"src": "6578:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6563:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "6563:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6429:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6497:3:11",
														"nodeType": "YulTypedName",
														"src": "6497:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6502:6:11",
														"nodeType": "YulTypedName",
														"src": "6502:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6513:11:11",
														"nodeType": "YulTypedName",
														"src": "6513:11:11",
														"type": ""
													}
												],
												"src": "6429:169:11"
											},
											{
												"body": {
													"nativeSrc": "6710:73:11",
													"nodeType": "YulBlock",
													"src": "6710:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6732:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6732:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6740:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6740:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6728:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6728:3:11"
																		},
																		"nativeSrc": "6728:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6728:14:11"
																	},
																	{
																		"hexValue": "526f757465722063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6744:31:11",
																		"nodeType": "YulLiteral",
																		"src": "6744:31:11",
																		"type": "",
																		"value": "Router cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6721:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6721:6:11"
																},
																"nativeSrc": "6721:55:11",
																"nodeType": "YulFunctionCall",
																"src": "6721:55:11"
															},
															"nativeSrc": "6721:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "6721:55:11"
														}
													]
												},
												"name": "store_literal_in_memory_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06",
												"nativeSrc": "6604:179:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6702:6:11",
														"nodeType": "YulTypedName",
														"src": "6702:6:11",
														"type": ""
													}
												],
												"src": "6604:179:11"
											},
											{
												"body": {
													"nativeSrc": "6935:220:11",
													"nodeType": "YulBlock",
													"src": "6935:220:11",
													"statements": [
														{
															"nativeSrc": "6945:74:11",
															"nodeType": "YulAssignment",
															"src": "6945:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7011:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7011:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7016:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7016:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6952:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "6952:58:11"
																},
																"nativeSrc": "6952:67:11",
																"nodeType": "YulFunctionCall",
																"src": "6952:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6945:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6945:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7117:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7117:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06",
																	"nativeSrc": "7028:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "7028:88:11"
																},
																"nativeSrc": "7028:93:11",
																"nodeType": "YulFunctionCall",
																"src": "7028:93:11"
															},
															"nativeSrc": "7028:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "7028:93:11"
														},
														{
															"nativeSrc": "7130:19:11",
															"nodeType": "YulAssignment",
															"src": "7130:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7141:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7141:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7146:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7146:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7137:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7137:3:11"
																},
																"nativeSrc": "7137:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7137:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7130:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7130:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6789:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6923:3:11",
														"nodeType": "YulTypedName",
														"src": "6923:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6931:3:11",
														"nodeType": "YulTypedName",
														"src": "6931:3:11",
														"type": ""
													}
												],
												"src": "6789:366:11"
											},
											{
												"body": {
													"nativeSrc": "7332:248:11",
													"nodeType": "YulBlock",
													"src": "7332:248:11",
													"statements": [
														{
															"nativeSrc": "7342:26:11",
															"nodeType": "YulAssignment",
															"src": "7342:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7354:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7354:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7365:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7365:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7350:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7350:3:11"
																},
																"nativeSrc": "7350:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7350:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7342:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7342:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7389:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7389:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7400:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7400:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7385:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:11"
																		},
																		"nativeSrc": "7385:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7385:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7408:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7408:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7414:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7414:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7404:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7404:3:11"
																		},
																		"nativeSrc": "7404:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7404:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7378:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7378:6:11"
																},
																"nativeSrc": "7378:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7378:47:11"
															},
															"nativeSrc": "7378:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7378:47:11"
														},
														{
															"nativeSrc": "7434:139:11",
															"nodeType": "YulAssignment",
															"src": "7434:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7568:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7568:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7442:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "7442:124:11"
																},
																"nativeSrc": "7442:131:11",
																"nodeType": "YulFunctionCall",
																"src": "7442:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7434:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7434:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7161:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7312:9:11",
														"nodeType": "YulTypedName",
														"src": "7312:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7327:4:11",
														"nodeType": "YulTypedName",
														"src": "7327:4:11",
														"type": ""
													}
												],
												"src": "7161:419:11"
											},
											{
												"body": {
													"nativeSrc": "7651:53:11",
													"nodeType": "YulBlock",
													"src": "7651:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7668:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7668:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7691:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7691:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7673:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "7673:17:11"
																		},
																		"nativeSrc": "7673:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7673:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7661:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7661:6:11"
																},
																"nativeSrc": "7661:37:11",
																"nodeType": "YulFunctionCall",
																"src": "7661:37:11"
															},
															"nativeSrc": "7661:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "7661:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7586:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7639:5:11",
														"nodeType": "YulTypedName",
														"src": "7639:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7646:3:11",
														"nodeType": "YulTypedName",
														"src": "7646:3:11",
														"type": ""
													}
												],
												"src": "7586:118:11"
											},
											{
												"body": {
													"nativeSrc": "7836:206:11",
													"nodeType": "YulBlock",
													"src": "7836:206:11",
													"statements": [
														{
															"nativeSrc": "7846:26:11",
															"nodeType": "YulAssignment",
															"src": "7846:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7858:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7858:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7869:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7869:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7854:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7854:3:11"
																},
																"nativeSrc": "7854:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7854:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7846:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7846:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7926:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7926:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7939:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7939:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7950:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7950:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7935:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7935:3:11"
																		},
																		"nativeSrc": "7935:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7935:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7882:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7882:43:11"
																},
																"nativeSrc": "7882:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7882:71:11"
															},
															"nativeSrc": "7882:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7882:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8007:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8007:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8020:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8020:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8031:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8031:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8016:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8016:3:11"
																		},
																		"nativeSrc": "8016:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8016:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7963:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7963:43:11"
																},
																"nativeSrc": "7963:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7963:72:11"
															},
															"nativeSrc": "7963:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7963:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "7710:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7800:9:11",
														"nodeType": "YulTypedName",
														"src": "7800:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7812:6:11",
														"nodeType": "YulTypedName",
														"src": "7812:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7820:6:11",
														"nodeType": "YulTypedName",
														"src": "7820:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7831:4:11",
														"nodeType": "YulTypedName",
														"src": "7831:4:11",
														"type": ""
													}
												],
												"src": "7710:332:11"
											},
											{
												"body": {
													"nativeSrc": "8146:124:11",
													"nodeType": "YulBlock",
													"src": "8146:124:11",
													"statements": [
														{
															"nativeSrc": "8156:26:11",
															"nodeType": "YulAssignment",
															"src": "8156:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8168:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8168:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8179:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8179:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8164:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8164:3:11"
																},
																"nativeSrc": "8164:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8164:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8156:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8156:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8236:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8249:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8249:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8260:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8260:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8245:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8245:3:11"
																		},
																		"nativeSrc": "8245:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8245:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8192:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8192:43:11"
																},
																"nativeSrc": "8192:71:11",
																"nodeType": "YulFunctionCall",
																"src": "8192:71:11"
															},
															"nativeSrc": "8192:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "8192:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8048:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8118:9:11",
														"nodeType": "YulTypedName",
														"src": "8118:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8130:6:11",
														"nodeType": "YulTypedName",
														"src": "8130:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8141:4:11",
														"nodeType": "YulTypedName",
														"src": "8141:4:11",
														"type": ""
													}
												],
												"src": "8048:222:11"
											},
											{
												"body": {
													"nativeSrc": "8304:152:11",
													"nodeType": "YulBlock",
													"src": "8304:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8321:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8321:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8324:77:11",
																		"nodeType": "YulLiteral",
																		"src": "8324:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8314:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8314:6:11"
																},
																"nativeSrc": "8314:88:11",
																"nodeType": "YulFunctionCall",
																"src": "8314:88:11"
															},
															"nativeSrc": "8314:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "8314:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8418:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8418:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8421:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8421:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8411:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8411:6:11"
																},
																"nativeSrc": "8411:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8411:15:11"
															},
															"nativeSrc": "8411:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8411:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8442:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8442:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8445:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8445:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8435:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8435:6:11"
																},
																"nativeSrc": "8435:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8435:15:11"
															},
															"nativeSrc": "8435:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8435:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8276:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "8276:180:11"
											},
											{
												"body": {
													"nativeSrc": "8506:147:11",
													"nodeType": "YulBlock",
													"src": "8506:147:11",
													"statements": [
														{
															"nativeSrc": "8516:25:11",
															"nodeType": "YulAssignment",
															"src": "8516:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8539:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8539:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8521:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8521:17:11"
																},
																"nativeSrc": "8521:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8521:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8516:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "8516:1:11"
																}
															]
														},
														{
															"nativeSrc": "8550:25:11",
															"nodeType": "YulAssignment",
															"src": "8550:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8573:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8573:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8555:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8555:17:11"
																},
																"nativeSrc": "8555:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8555:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8550:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "8550:1:11"
																}
															]
														},
														{
															"nativeSrc": "8584:16:11",
															"nodeType": "YulAssignment",
															"src": "8584:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8595:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8595:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8598:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8598:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8591:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8591:3:11"
																},
																"nativeSrc": "8591:9:11",
																"nodeType": "YulFunctionCall",
																"src": "8591:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8584:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8584:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8624:22:11",
																"nodeType": "YulBlock",
																"src": "8624:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8626:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8626:16:11"
																			},
																			"nativeSrc": "8626:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8626:18:11"
																		},
																		"nativeSrc": "8626:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8626:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8616:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8616:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8619:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8619:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8613:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8613:2:11"
																},
																"nativeSrc": "8613:10:11",
																"nodeType": "YulFunctionCall",
																"src": "8613:10:11"
															},
															"nativeSrc": "8610:36:11",
															"nodeType": "YulIf",
															"src": "8610:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8462:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8493:1:11",
														"nodeType": "YulTypedName",
														"src": "8493:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8496:1:11",
														"nodeType": "YulTypedName",
														"src": "8496:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8502:3:11",
														"nodeType": "YulTypedName",
														"src": "8502:3:11",
														"type": ""
													}
												],
												"src": "8462:191:11"
											},
											{
												"body": {
													"nativeSrc": "8724:53:11",
													"nodeType": "YulBlock",
													"src": "8724:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8741:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8741:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8764:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8764:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8746:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "8746:17:11"
																		},
																		"nativeSrc": "8746:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8746:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8734:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8734:6:11"
																},
																"nativeSrc": "8734:37:11",
																"nodeType": "YulFunctionCall",
																"src": "8734:37:11"
															},
															"nativeSrc": "8734:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "8734:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8659:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8712:5:11",
														"nodeType": "YulTypedName",
														"src": "8712:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8719:3:11",
														"nodeType": "YulTypedName",
														"src": "8719:3:11",
														"type": ""
													}
												],
												"src": "8659:118:11"
											},
											{
												"body": {
													"nativeSrc": "8937:288:11",
													"nodeType": "YulBlock",
													"src": "8937:288:11",
													"statements": [
														{
															"nativeSrc": "8947:26:11",
															"nodeType": "YulAssignment",
															"src": "8947:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8959:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8959:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8970:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8970:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8955:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8955:3:11"
																},
																"nativeSrc": "8955:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8955:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8947:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8947:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9027:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9027:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9040:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9040:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9051:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9051:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9036:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9036:3:11"
																		},
																		"nativeSrc": "9036:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9036:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8983:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8983:43:11"
																},
																"nativeSrc": "8983:71:11",
																"nodeType": "YulFunctionCall",
																"src": "8983:71:11"
															},
															"nativeSrc": "8983:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "8983:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9108:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9108:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9121:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9121:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9132:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9132:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9117:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9117:3:11"
																		},
																		"nativeSrc": "9117:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9117:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9064:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9064:43:11"
																},
																"nativeSrc": "9064:72:11",
																"nodeType": "YulFunctionCall",
																"src": "9064:72:11"
															},
															"nativeSrc": "9064:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "9064:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9190:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9190:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9203:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9203:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9214:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9214:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9199:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9199:3:11"
																		},
																		"nativeSrc": "9199:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9199:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9146:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9146:43:11"
																},
																"nativeSrc": "9146:72:11",
																"nodeType": "YulFunctionCall",
																"src": "9146:72:11"
															},
															"nativeSrc": "9146:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "9146:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8783:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8893:9:11",
														"nodeType": "YulTypedName",
														"src": "8893:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8905:6:11",
														"nodeType": "YulTypedName",
														"src": "8905:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8913:6:11",
														"nodeType": "YulTypedName",
														"src": "8913:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8921:6:11",
														"nodeType": "YulTypedName",
														"src": "8921:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8932:4:11",
														"nodeType": "YulTypedName",
														"src": "8932:4:11",
														"type": ""
													}
												],
												"src": "8783:442:11"
											},
											{
												"body": {
													"nativeSrc": "9329:124:11",
													"nodeType": "YulBlock",
													"src": "9329:124:11",
													"statements": [
														{
															"nativeSrc": "9339:26:11",
															"nodeType": "YulAssignment",
															"src": "9339:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9351:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9351:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9362:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9362:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9347:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9347:3:11"
																},
																"nativeSrc": "9347:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9347:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9339:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9339:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9419:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9419:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9432:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9432:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9443:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9443:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9428:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9428:3:11"
																		},
																		"nativeSrc": "9428:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9428:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9375:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9375:43:11"
																},
																"nativeSrc": "9375:71:11",
																"nodeType": "YulFunctionCall",
																"src": "9375:71:11"
															},
															"nativeSrc": "9375:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "9375:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9231:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9301:9:11",
														"nodeType": "YulTypedName",
														"src": "9301:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9313:6:11",
														"nodeType": "YulTypedName",
														"src": "9313:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9324:4:11",
														"nodeType": "YulTypedName",
														"src": "9324:4:11",
														"type": ""
													}
												],
												"src": "9231:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06(memPtr) {\n\n        mstore(add(memPtr, 0), \"Router cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600860146101000a81548160ff0219169083151502179055505f600b5f6101000a81548160ff0219169083151502179055506002600c555f600e5f6101000a81548160ff021916908315150217905550601e600f55348015610065575f5ffd5b5060405161394438038061394483398181016040528101906100879190610990565b6040518060400160405280600b81526020017f57616c6c7920546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f545747000000000000000000000000000000000000000000000000000000000081525081600390816101029190610bf8565b5080600490816101129190610bf8565b50505060016006819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361018b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018290610d21565b60405180910390fd5b6101a7336b409f9cbc7c4a04c2200000006104b760201b60201c565b6101eb7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177573633ea8fe424cd65ad4d4826e6581273afd06b8ef61053c60201b60201c565b5061023c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a67fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561063260201b60201c565b61028c7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8487fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561063260201b60201c565b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610337573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061035b9190610990565b90505f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103c8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ec9190610990565b90508173ffffffffffffffffffffffffffffffffffffffff1663c9c6539630836040518363ffffffff1660e01b8152600401610429929190610d4e565b6020604051808303815f875af1158015610445573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104699190610990565b60085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f600a81905550505050610e4b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610527575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161051e9190610d75565b60405180910390fd5b6105385f838361069160201b60201c565b5050565b5f61054d83836108aa60201b60201c565b61062857600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506105c561090e60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061062c565b5f90505b92915050565b5f6106428361091560201b60201c565b90508160055f8581526020019081526020015f20600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106e1578060025f8282546106d59190610dbb565b925050819055506107af565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561076a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161076193929190610dfd565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107f6578060025f8282540392505081905550610840565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161089d9190610e32565b60405180910390a3505050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f60055f8381526020019081526020015f20600101549050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61095f82610936565b9050919050565b61096f81610955565b8114610979575f5ffd5b50565b5f8151905061098a81610966565b92915050565b5f602082840312156109a5576109a4610932565b5b5f6109b28482850161097c565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610a3657607f821691505b602082108103610a4957610a486109f2565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610aab7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a70565b610ab58683610a70565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f610af9610af4610aef84610acd565b610ad6565b610acd565b9050919050565b5f819050919050565b610b1283610adf565b610b26610b1e82610b00565b848454610a7c565b825550505050565b5f5f905090565b610b3d610b2e565b610b48818484610b09565b505050565b5b81811015610b6b57610b605f82610b35565b600181019050610b4e565b5050565b601f821115610bb057610b8181610a4f565b610b8a84610a61565b81016020851015610b99578190505b610bad610ba585610a61565b830182610b4d565b50505b505050565b5f82821c905092915050565b5f610bd05f1984600802610bb5565b1980831691505092915050565b5f610be88383610bc1565b9150826002028217905092915050565b610c01826109bb565b67ffffffffffffffff811115610c1a57610c196109c5565b5b610c248254610a1f565b610c2f828285610b6f565b5f60209050601f831160018114610c60575f8415610c4e578287015190505b610c588582610bdd565b865550610cbf565b601f198416610c6e86610a4f565b5f5b82811015610c9557848901518255600182019150602085019450602081019050610c70565b86831015610cb25784890151610cae601f891682610bc1565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f526f757465722063616e6e6f74206265207a65726f20616464726573730000005f82015250565b5f610d0b601d83610cc7565b9150610d1682610cd7565b602082019050919050565b5f6020820190508181035f830152610d3881610cff565b9050919050565b610d4881610955565b82525050565b5f604082019050610d615f830185610d3f565b610d6e6020830184610d3f565b9392505050565b5f602082019050610d885f830184610d3f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610dc582610acd565b9150610dd083610acd565b9250828201905080821115610de857610de7610d8e565b5b92915050565b610df781610acd565b82525050565b5f606082019050610e105f830186610d3f565b610e1d6020830185610dee565b610e2a6040830184610dee565b949350505050565b5f602082019050610e455f830184610dee565b92915050565b612aec80610e585f395ff3fe608060405260043610610254575f3560e01c806370a0823111610138578063b319c6b7116100b5578063d547741f11610079578063d547741f146108c3578063dd62ed3e146108eb578063ec28438a14610927578063f68ded661461094f578063f6f1e30614610979578063f9f92be4146109ab5761025b565b8063b319c6b7146107f5578063b37fd1901461081f578063c2e5ec0414610847578063d00efb2f1461086f578063d5391393146108995761025b565b806395d89b41116100fc57806395d89b4114610711578063963472f91461073b578063a217fddf14610765578063a9059cbb1461078f578063a985ceef146107cb5761025b565b806370a082311461061d57806375b238fc1461065957806389900603146106835780638c0b5e22146106ab57806391d14854146106d55761025b565b80632be29fa8116101d157806340c10f191161019557806340c10f191461051557806342966c681461053d5780634551bbe91461056557806348fca59d146105a157806349bd5a5e146105c95780634ada218b146105f35761025b565b80632be29fa8146104475780632f2ff15d146104715780632ff2e9dc14610499578063313ce567146104c357806336568abe146104ed5761025b565b80631694505e116102185780631694505e1461035157806318160ddd1461037b57806323b872dd146103a5578063248a9ca3146103e1578063282c51f31461041d5761025b565b806301ffc9a71461025f57806306fdde031461029b578063095ea7b3146102c5578063099a04e514610301578063153b0d1e146103295761025b565b3661025b57005b5f5ffd5b34801561026a575f5ffd5b5061028560048036038101906102809190612035565b6109e7565b604051610292919061207a565b60405180910390f35b3480156102a6575f5ffd5b506102af610a60565b6040516102bc9190612103565b60405180910390f35b3480156102d0575f5ffd5b506102eb60048036038101906102e691906121b0565b610af0565b6040516102f8919061207a565b60405180910390f35b34801561030c575f5ffd5b5061032760048036038101906103229190612229565b610b12565b005b348015610334575f5ffd5b5061034f600480360381019061034a9190612291565b610c58565b005b34801561035c575f5ffd5b50610365610d29565b604051610372919061232a565b60405180910390f35b348015610386575f5ffd5b5061038f610d4e565b60405161039c9190612352565b60405180910390f35b3480156103b0575f5ffd5b506103cb60048036038101906103c6919061236b565b610d57565b6040516103d8919061207a565b60405180910390f35b3480156103ec575f5ffd5b50610407600480360381019061040291906123ee565b610d85565b6040516104149190612428565b60405180910390f35b348015610428575f5ffd5b50610431610da2565b60405161043e9190612428565b60405180910390f35b348015610452575f5ffd5b5061045b610dc6565b6040516104689190612352565b60405180910390f35b34801561047c575f5ffd5b5061049760048036038101906104929190612441565b610dcc565b005b3480156104a4575f5ffd5b506104ad610dee565b6040516104ba9190612352565b60405180910390f35b3480156104ce575f5ffd5b506104d7610dfe565b6040516104e4919061249a565b60405180910390f35b3480156104f8575f5ffd5b50610513600480360381019061050e9190612441565b610e06565b005b348015610520575f5ffd5b5061053b600480360381019061053691906121b0565b610e81565b005b348015610548575f5ffd5b50610563600480360381019061055e91906124b3565b610eba565b005b348015610570575f5ffd5b5061058b600480360381019061058691906124de565b610ef9565b6040516105989190612352565b60405180910390f35b3480156105ac575f5ffd5b506105c760048036038101906105c29190612509565b610f0e565b005b3480156105d4575f5ffd5b506105dd610f96565b6040516105ea9190612556565b60405180910390f35b3480156105fe575f5ffd5b50610607610fbb565b604051610614919061207a565b60405180910390f35b348015610628575f5ffd5b50610643600480360381019061063e91906124de565b610fce565b6040516106509190612352565b60405180910390f35b348015610664575f5ffd5b5061066d611013565b60405161067a9190612428565b60405180910390f35b34801561068e575f5ffd5b506106a960048036038101906106a49190612509565b611037565b005b3480156106b6575f5ffd5b506106bf6110bf565b6040516106cc9190612352565b60405180910390f35b3480156106e0575f5ffd5b506106fb60048036038101906106f69190612441565b6110c5565b604051610708919061207a565b60405180910390f35b34801561071c575f5ffd5b50610725611129565b6040516107329190612103565b60405180910390f35b348015610746575f5ffd5b5061074f6111b9565b60405161075c919061207a565b60405180910390f35b348015610770575f5ffd5b506107796111cb565b6040516107869190612428565b60405180910390f35b34801561079a575f5ffd5b506107b560048036038101906107b091906121b0565b6111d1565b6040516107c2919061207a565b60405180910390f35b3480156107d6575f5ffd5b506107df6111f3565b6040516107ec919061207a565b60405180910390f35b348015610800575f5ffd5b50610809611205565b6040516108169190612352565b60405180910390f35b34801561082a575f5ffd5b506108456004803603810190610840919061256f565b61120b565b005b348015610852575f5ffd5b5061086d600480360381019061086891906125bf565b611325565b005b34801561087a575f5ffd5b506108836113c9565b6040516108909190612352565b60405180910390f35b3480156108a4575f5ffd5b506108ad6113cf565b6040516108ba9190612428565b60405180910390f35b3480156108ce575f5ffd5b506108e960048036038101906108e49190612441565b6113f3565b005b3480156108f6575f5ffd5b50610911600480360381019061090c91906125ea565b611415565b60405161091e9190612352565b60405180910390f35b348015610932575f5ffd5b5061094d600480360381019061094891906124b3565b611497565b005b34801561095a575f5ffd5b50610963611503565b6040516109709190612556565b60405180910390f35b610993600480360381019061098e9190612628565b61151b565b6040516109a29392919061269f565b60405180910390f35b3480156109b6575f5ffd5b506109d160048036038101906109cc91906124de565b611642565b6040516109de919061207a565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a595750610a588261165f565b5b9050919050565b606060038054610a6f90612701565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9b90612701565b8015610ae65780601f10610abd57610100808354040283529160200191610ae6565b820191905f5260205f20905b815481529060010190602001808311610ac957829003601f168201915b5050505050905090565b5f5f610afa6116c8565b9050610b078185856116cf565b600191505092915050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610b3c816116e1565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba19061277b565b60405180910390fd5b5f8373ffffffffffffffffffffffffffffffffffffffff1683604051610bcf906127c6565b5f6040518083038185875af1925050503d805f8114610c09576040519150601f19603f3d011682016040523d82523d5f602084013e610c0e565b606091505b5050905080610c52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4990612824565b60405180910390fd5b50505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610c82816116e1565b8160095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd883604051610d1c919061207a565b60405180910390a2505050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f5f610d616116c8565b9050610d6e8582856116f5565b610d79858585611788565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b600c5481565b610dd582610d85565b610dde816116e1565b610de88383611878565b50505050565b6b409f9cbc7c4a04c22000000081565b5f6012905090565b610e0e6116c8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e72576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e7c8282611962565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610eab816116e1565b610eb58383611a4c565b505050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848610ee4816116e1565b610ef5610eef6116c8565b83611acb565b5050565b6010602052805f5260405f205f915090505481565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610f38816116e1565b82600e5f6101000a81548160ff02191690831515021790555081600f819055507f3dd49c7bc5b4083d3ed5845bd08d8d308e600ce46a1bf5fed3466dba31ce9f0c8383604051610f89929190612842565b60405180910390a1505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860149054906101000a900460ff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775611061816116e1565b82600b5f6101000a81548160ff02191690831515021790555081600c819055507fb31b570d042c886827a2637126edd8ff4f4fe90beb7cb87ffe8c4d2d542c190d83836040516110b2929190612842565b60405180910390a1505050565b600a5481565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461113890612701565b80601f016020809104026020016040519081016040528092919081815260200182805461116490612701565b80156111af5780601f10611186576101008083540402835291602001916111af565b820191905f5260205f20905b81548152906001019060200180831161119257829003601f168201915b5050505050905090565b600b5f9054906101000a900460ff1681565b5f5f1b81565b5f5f6111db6116c8565b90506111e8818585611788565b600191505092915050565b600e5f9054906101000a900460ff1681565b600f5481565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775611235816116e1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129a9061277b565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b81526004016112de929190612869565b6020604051808303815f875af11580156112fa573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061131e91906128a4565b5050505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561134f816116e1565b81600860146101000a81548160ff0219169083151502179055508180156113815750600b5f9054906101000a900460ff165b1561138e5743600d819055505b7fbeda7dca7bc1b3e80b871f4818129ec73b771581f803d553aeb3484098e5f65a826040516113bd919061207a565b60405180910390a15050565b600d5481565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6113fc82610d85565b611405816116e1565b61140f8383611962565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756114c1816116e1565b81600a819055507f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf826040516114f79190612352565b60405180910390a15050565b73633ea8fe424cd65ad4d4826e6581273afd06b8ef81565b5f5f5f611526611b4a565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775611550816116e1565b61157c3060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6116cf565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d71934308b8b8b8f8c6040518863ffffffff1660e01b81526004016115e1969594939291906128cf565b60606040518083038185885af11580156115fd573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906116229190612942565b80945081955082965050505050611637611b99565b955095509592505050565b6009602052805f5260405f205f915054906101000a900460ff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6116dc8383836001611ba3565b505050565b6116f2816116ed6116c8565b611d72565b50565b5f6117008484611415565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156117825781811015611773578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161176a93929190612992565b60405180910390fd5b61178184848484035f611ba3565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117f8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117ef9190612556565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611868575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161185f9190612556565b60405180910390fd5b611873838383611dc3565b505050565b5f61188383836110c5565b61195857600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506118f56116c8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061195c565b5f90505b92915050565b5f61196d83836110c5565b15611a42575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506119df6116c8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611a46565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611abc575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611ab39190612556565b60405180910390fd5b611ac75f8383611dc3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b3b575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611b329190612556565b60405180910390fd5b611b46825f83611dc3565b5050565b600260065403611b8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8690612a11565b60405180910390fd5b6002600681905550565b6001600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611c13575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611c0a9190612556565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c83575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611c7a9190612556565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611d6c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d639190612352565b60405180910390a35b50505050565b611d7c82826110c5565b611dbf5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611db6929190612a2f565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e13578060025f828254611e079190612a83565b92505081905550611ee1565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611e9c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611e9393929190612992565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f28578060025f8282540392505081905550611f72565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611fcf9190612352565b60405180910390a3505050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61201481611fe0565b811461201e575f5ffd5b50565b5f8135905061202f8161200b565b92915050565b5f6020828403121561204a57612049611fdc565b5b5f61205784828501612021565b91505092915050565b5f8115159050919050565b61207481612060565b82525050565b5f60208201905061208d5f83018461206b565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6120d582612093565b6120df818561209d565b93506120ef8185602086016120ad565b6120f8816120bb565b840191505092915050565b5f6020820190508181035f83015261211b81846120cb565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61214c82612123565b9050919050565b61215c81612142565b8114612166575f5ffd5b50565b5f8135905061217781612153565b92915050565b5f819050919050565b61218f8161217d565b8114612199575f5ffd5b50565b5f813590506121aa81612186565b92915050565b5f5f604083850312156121c6576121c5611fdc565b5b5f6121d385828601612169565b92505060206121e48582860161219c565b9150509250929050565b5f6121f882612123565b9050919050565b612208816121ee565b8114612212575f5ffd5b50565b5f81359050612223816121ff565b92915050565b5f5f6040838503121561223f5761223e611fdc565b5b5f61224c85828601612215565b925050602061225d8582860161219c565b9150509250929050565b61227081612060565b811461227a575f5ffd5b50565b5f8135905061228b81612267565b92915050565b5f5f604083850312156122a7576122a6611fdc565b5b5f6122b485828601612169565b92505060206122c58582860161227d565b9150509250929050565b5f819050919050565b5f6122f26122ed6122e884612123565b6122cf565b612123565b9050919050565b5f612303826122d8565b9050919050565b5f612314826122f9565b9050919050565b6123248161230a565b82525050565b5f60208201905061233d5f83018461231b565b92915050565b61234c8161217d565b82525050565b5f6020820190506123655f830184612343565b92915050565b5f5f5f6060848603121561238257612381611fdc565b5b5f61238f86828701612169565b93505060206123a086828701612169565b92505060406123b18682870161219c565b9150509250925092565b5f819050919050565b6123cd816123bb565b81146123d7575f5ffd5b50565b5f813590506123e8816123c4565b92915050565b5f6020828403121561240357612402611fdc565b5b5f612410848285016123da565b91505092915050565b612422816123bb565b82525050565b5f60208201905061243b5f830184612419565b92915050565b5f5f6040838503121561245757612456611fdc565b5b5f612464858286016123da565b925050602061247585828601612169565b9150509250929050565b5f60ff82169050919050565b6124948161247f565b82525050565b5f6020820190506124ad5f83018461248b565b92915050565b5f602082840312156124c8576124c7611fdc565b5b5f6124d58482850161219c565b91505092915050565b5f602082840312156124f3576124f2611fdc565b5b5f61250084828501612169565b91505092915050565b5f5f6040838503121561251f5761251e611fdc565b5b5f61252c8582860161227d565b925050602061253d8582860161219c565b9150509250929050565b61255081612142565b82525050565b5f6020820190506125695f830184612547565b92915050565b5f5f5f6060848603121561258657612585611fdc565b5b5f61259386828701612169565b93505060206125a48682870161219c565b92505060406125b586828701612169565b9150509250925092565b5f602082840312156125d4576125d3611fdc565b5b5f6125e18482850161227d565b91505092915050565b5f5f60408385031215612600576125ff611fdc565b5b5f61260d85828601612169565b925050602061261e85828601612169565b9150509250929050565b5f5f5f5f5f60a0868803121561264157612640611fdc565b5b5f61264e88828901612169565b955050602061265f8882890161219c565b94505060406126708882890161219c565b93505060606126818882890161219c565b92505060806126928882890161219c565b9150509295509295909350565b5f6060820190506126b25f830186612343565b6126bf6020830185612343565b6126cc6040830184612343565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061271857607f821691505b60208210810361272b5761272a6126d4565b5b50919050565b7f496e76616c69642027746f2700000000000000000000000000000000000000005f82015250565b5f612765600c8361209d565b915061277082612731565b602082019050919050565b5f6020820190508181035f83015261279281612759565b9050919050565b5f81905092915050565b50565b5f6127b15f83612799565b91506127bc826127a3565b5f82019050919050565b5f6127d0826127a6565b9150819050919050565b7f455448207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f61280e60138361209d565b9150612819826127da565b602082019050919050565b5f6020820190508181035f83015261283b81612802565b9050919050565b5f6040820190506128555f83018561206b565b6128626020830184612343565b9392505050565b5f60408201905061287c5f830185612547565b6128896020830184612343565b9392505050565b5f8151905061289e81612267565b92915050565b5f602082840312156128b9576128b8611fdc565b5b5f6128c684828501612890565b91505092915050565b5f60c0820190506128e25f830189612547565b6128ef6020830188612343565b6128fc6040830187612343565b6129096060830186612343565b6129166080830185612547565b61292360a0830184612343565b979650505050505050565b5f8151905061293c81612186565b92915050565b5f5f5f6060848603121561295957612958611fdc565b5b5f6129668682870161292e565b93505060206129778682870161292e565b92505060406129888682870161292e565b9150509250925092565b5f6060820190506129a55f830186612547565b6129b26020830185612343565b6129bf6040830184612343565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6129fb601f8361209d565b9150612a06826129c7565b602082019050919050565b5f6020820190508181035f830152612a28816129ef565b9050919050565b5f604082019050612a425f830185612547565b612a4f6020830184612419565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612a8d8261217d565b9150612a988361217d565b9250828201905080821115612ab057612aaf612a56565b5b9291505056fea26469706673582212209f1944292964c7e1204b31f0dec38a3ab244dc0bddece31bcda082e574b2596b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x8 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0xC SSTORE PUSH0 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0xF SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3944 CODESIZE SUB DUP1 PUSH2 0x3944 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x57616C6C7920546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5457470000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182 SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A7 CALLER PUSH12 0x409F9CBC7C4A04C220000000 PUSH2 0x4B7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1EB PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH20 0x633EA8FE424CD65AD4D4826E6581273AFD06B8EF PUSH2 0x53C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x23C PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x632 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x28C PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x632 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x337 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP3 SWAP2 SWAP1 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x445 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0xE4B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x527 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x538 PUSH0 DUP4 DUP4 PUSH2 0x691 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x54D DUP4 DUP4 PUSH2 0x8AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x628 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x5C5 PUSH2 0x90E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x62C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x642 DUP4 PUSH2 0x915 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 DUP5 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0xDBB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x7AF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x76A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x761 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7F6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x840 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x95F DUP3 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96F DUP2 PUSH2 0x955 JUMP JUMPDEST DUP2 EQ PUSH2 0x979 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x98A DUP2 PUSH2 0x966 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x9A4 PUSH2 0x932 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9B2 DUP5 DUP3 DUP6 ADD PUSH2 0x97C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xA36 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA49 JUMPI PUSH2 0xA48 PUSH2 0x9F2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xAAB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xA70 JUMP JUMPDEST PUSH2 0xAB5 DUP7 DUP4 PUSH2 0xA70 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAF9 PUSH2 0xAF4 PUSH2 0xAEF DUP5 PUSH2 0xACD JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB12 DUP4 PUSH2 0xADF JUMP JUMPDEST PUSH2 0xB26 PUSH2 0xB1E DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xA7C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB3D PUSH2 0xB2E JUMP JUMPDEST PUSH2 0xB48 DUP2 DUP5 DUP5 PUSH2 0xB09 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB6B JUMPI PUSH2 0xB60 PUSH0 DUP3 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB4E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xBB0 JUMPI PUSH2 0xB81 DUP2 PUSH2 0xA4F JUMP JUMPDEST PUSH2 0xB8A DUP5 PUSH2 0xA61 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB99 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xBAD PUSH2 0xBA5 DUP6 PUSH2 0xA61 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xB4D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBD0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xBB5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBE8 DUP4 DUP4 PUSH2 0xBC1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC01 DUP3 PUSH2 0x9BB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC1A JUMPI PUSH2 0xC19 PUSH2 0x9C5 JUMP JUMPDEST JUMPDEST PUSH2 0xC24 DUP3 SLOAD PUSH2 0xA1F JUMP JUMPDEST PUSH2 0xC2F DUP3 DUP3 DUP6 PUSH2 0xB6F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC60 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xC4E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xC58 DUP6 DUP3 PUSH2 0xBDD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xC6E DUP7 PUSH2 0xA4F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC95 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC70 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xCB2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xCAE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xBC1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526F757465722063616E6E6F74206265207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD0B PUSH1 0x1D DUP4 PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xD16 DUP3 PUSH2 0xCD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD38 DUP2 PUSH2 0xCFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD48 DUP2 PUSH2 0x955 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD61 PUSH0 DUP4 ADD DUP6 PUSH2 0xD3F JUMP JUMPDEST PUSH2 0xD6E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD3F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD88 PUSH0 DUP4 ADD DUP5 PUSH2 0xD3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDC5 DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP2 POP PUSH2 0xDD0 DUP4 PUSH2 0xACD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDE8 JUMPI PUSH2 0xDE7 PUSH2 0xD8E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDF7 DUP2 PUSH2 0xACD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE10 PUSH0 DUP4 ADD DUP7 PUSH2 0xD3F JUMP JUMPDEST PUSH2 0xE1D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0xE2A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE45 PUSH0 DUP4 ADD DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AEC DUP1 PUSH2 0xE58 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x254 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0xB319C6B7 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x8C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x8EB JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x927 JUMPI DUP1 PUSH4 0xF68DED66 EQ PUSH2 0x94F JUMPI DUP1 PUSH4 0xF6F1E306 EQ PUSH2 0x979 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x9AB JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0xB319C6B7 EQ PUSH2 0x7F5 JUMPI DUP1 PUSH4 0xB37FD190 EQ PUSH2 0x81F JUMPI DUP1 PUSH4 0xC2E5EC04 EQ PUSH2 0x847 JUMPI DUP1 PUSH4 0xD00EFB2F EQ PUSH2 0x86F JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x899 JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x711 JUMPI DUP1 PUSH4 0x963472F9 EQ PUSH2 0x73B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x765 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x78F JUMPI DUP1 PUSH4 0xA985CEEF EQ PUSH2 0x7CB JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0x89900603 EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x6AB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x6D5 JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x2BE29FA8 GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x4551BBE9 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x48FCA59D EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x5F3 JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x2BE29FA8 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x4ED JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x1694505E GT PUSH2 0x218 JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x41D JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x99A04E5 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x329 JUMPI PUSH2 0x25B JUMP JUMPDEST CALLDATASIZE PUSH2 0x25B JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x2291 JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x365 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x236B JUMP JUMPDEST PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x428 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x431 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x45B PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0xDCC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4D7 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x53B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x548 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x24B3 JUMP JUMPDEST PUSH2 0xEBA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x570 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x58B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x598 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH2 0xF0E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5DD PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x607 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x643 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63E SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x650 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x66D PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH2 0x1037 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6BF PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x725 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x746 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x74F PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75C SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x770 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x779 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x786 SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7DF PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x800 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x809 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x816 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x845 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x840 SWAP2 SWAP1 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x852 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x86D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x868 SWAP2 SWAP1 PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x1325 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x883 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x890 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x8AD PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x8E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0x13F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x911 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x90C SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x932 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x94D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x24B3 JUMP JUMPDEST PUSH2 0x1497 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x963 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x970 SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x993 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98E SWAP2 SWAP1 PUSH2 0x2628 JUMP JUMPDEST PUSH2 0x151B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x269F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA59 JUMPI POP PUSH2 0xA58 DUP3 PUSH2 0x165F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA6F SWAP1 PUSH2 0x2701 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA9B SWAP1 PUSH2 0x2701 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAE6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAC9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAFA PUSH2 0x16C8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB07 DUP2 DUP6 DUP6 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xB3C DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA1 SWAP1 PUSH2 0x277B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xBCF SWAP1 PUSH2 0x27C6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC49 SWAP1 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xC82 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD1C SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD61 PUSH2 0x16C8 JUMP JUMPDEST SWAP1 POP PUSH2 0xD6E DUP6 DUP3 DUP6 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0xD79 DUP6 DUP6 DUP6 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDD5 DUP3 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xDDE DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xDE8 DUP4 DUP4 PUSH2 0x1878 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH12 0x409F9CBC7C4A04C220000000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE0E PUSH2 0x16C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7C DUP3 DUP3 PUSH2 0x1962 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xEAB DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xEB5 DUP4 DUP4 PUSH2 0x1A4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0xEE4 DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xEF5 PUSH2 0xEEF PUSH2 0x16C8 JUMP JUMPDEST DUP4 PUSH2 0x1ACB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xF38 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP3 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xF DUP2 SWAP1 SSTORE POP PUSH32 0x3DD49C7BC5B4083D3ED5845BD08D8D308E600CE46A1BF5FED3466DBA31CE9F0C DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF89 SWAP3 SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x1061 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP3 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0xB31B570D042C886827A2637126EDD8FF4F4FE90BEB7CB87FFE8C4D2D542C190D DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10B2 SWAP3 SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1138 SWAP1 PUSH2 0x2701 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1164 SWAP1 PUSH2 0x2701 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1186 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1192 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x11DB PUSH2 0x16C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x11E8 DUP2 DUP6 DUP6 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x1235 DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129A SWAP1 PUSH2 0x277B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DE SWAP3 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131E SWAP2 SWAP1 PUSH2 0x28A4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x134F DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP1 ISZERO PUSH2 0x1381 JUMPI POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x138E JUMPI NUMBER PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0xBEDA7DCA7BC1B3E80B871F4818129EC73B771581F803D553AEB3484098E5F65A DUP3 PUSH1 0x40 MLOAD PUSH2 0x13BD SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x13FC DUP3 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x1405 DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x140F DUP4 DUP4 PUSH2 0x1962 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x14C1 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0x947F344D56E1E8C70DC492FB94C4DDDDD490C016AAB685F5E7E47B2E85CB44CF DUP3 PUSH1 0x40 MLOAD PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH20 0x633EA8FE424CD65AD4D4826E6581273AFD06B8EF DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x1526 PUSH2 0x1B4A JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x1550 DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x157C ADDRESS PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 CALLVALUE ADDRESS DUP12 DUP12 DUP12 DUP16 DUP13 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E1 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15FD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP DUP3 SWAP7 POP POP POP POP POP PUSH2 0x1637 PUSH2 0x1B99 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16DC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1BA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16F2 DUP2 PUSH2 0x16ED PUSH2 0x16C8 JUMP JUMPDEST PUSH2 0x1D72 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1700 DUP5 DUP5 PUSH2 0x1415 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1782 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1773 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1781 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1BA3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17F8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EF SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1868 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185F SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1873 DUP4 DUP4 DUP4 PUSH2 0x1DC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1883 DUP4 DUP4 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1958 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x18F5 PUSH2 0x16C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x195C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x196D DUP4 DUP4 PUSH2 0x10C5 JUMP JUMPDEST ISZERO PUSH2 0x1A42 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x19DF PUSH2 0x16C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1A46 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ABC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB3 SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AC7 PUSH0 DUP4 DUP4 PUSH2 0x1DC3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B3B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B32 SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B46 DUP3 PUSH0 DUP4 PUSH2 0x1DC3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1B8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B86 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C13 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0A SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C83 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C7A SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D6C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D63 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D7C DUP3 DUP3 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1DBF JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB6 SWAP3 SWAP2 SWAP1 PUSH2 0x2A2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E13 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E07 SWAP2 SWAP1 PUSH2 0x2A83 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EE1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1E9C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E93 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F28 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F72 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1FCF SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2014 DUP2 PUSH2 0x1FE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x201E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x202F DUP2 PUSH2 0x200B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204A JUMPI PUSH2 0x2049 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2057 DUP5 DUP3 DUP6 ADD PUSH2 0x2021 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2074 DUP2 PUSH2 0x2060 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x208D PUSH0 DUP4 ADD DUP5 PUSH2 0x206B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20D5 DUP3 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x20DF DUP2 DUP6 PUSH2 0x209D JUMP JUMPDEST SWAP4 POP PUSH2 0x20EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x20F8 DUP2 PUSH2 0x20BB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x211B DUP2 DUP5 PUSH2 0x20CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x214C DUP3 PUSH2 0x2123 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215C DUP2 PUSH2 0x2142 JUMP JUMPDEST DUP2 EQ PUSH2 0x2166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2177 DUP2 PUSH2 0x2153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218F DUP2 PUSH2 0x217D JUMP JUMPDEST DUP2 EQ PUSH2 0x2199 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21AA DUP2 PUSH2 0x2186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21C6 JUMPI PUSH2 0x21C5 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21D3 DUP6 DUP3 DUP7 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21E4 DUP6 DUP3 DUP7 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21F8 DUP3 PUSH2 0x2123 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2208 DUP2 PUSH2 0x21EE JUMP JUMPDEST DUP2 EQ PUSH2 0x2212 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2223 DUP2 PUSH2 0x21FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x223F JUMPI PUSH2 0x223E PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x224C DUP6 DUP3 DUP7 ADD PUSH2 0x2215 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x225D DUP6 DUP3 DUP7 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2270 DUP2 PUSH2 0x2060 JUMP JUMPDEST DUP2 EQ PUSH2 0x227A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228B DUP2 PUSH2 0x2267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22A7 JUMPI PUSH2 0x22A6 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22B4 DUP6 DUP3 DUP7 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22C5 DUP6 DUP3 DUP7 ADD PUSH2 0x227D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22F2 PUSH2 0x22ED PUSH2 0x22E8 DUP5 PUSH2 0x2123 JUMP JUMPDEST PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x2123 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2303 DUP3 PUSH2 0x22D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2314 DUP3 PUSH2 0x22F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2324 DUP2 PUSH2 0x230A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x233D PUSH0 DUP4 ADD DUP5 PUSH2 0x231B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x234C DUP2 PUSH2 0x217D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2365 PUSH0 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2382 JUMPI PUSH2 0x2381 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x238F DUP7 DUP3 DUP8 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x23A0 DUP7 DUP3 DUP8 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23B1 DUP7 DUP3 DUP8 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23CD DUP2 PUSH2 0x23BB JUMP JUMPDEST DUP2 EQ PUSH2 0x23D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23E8 DUP2 PUSH2 0x23C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2403 JUMPI PUSH2 0x2402 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2410 DUP5 DUP3 DUP6 ADD PUSH2 0x23DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2422 DUP2 PUSH2 0x23BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x243B PUSH0 DUP4 ADD DUP5 PUSH2 0x2419 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2464 DUP6 DUP3 DUP7 ADD PUSH2 0x23DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2475 DUP6 DUP3 DUP7 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2494 DUP2 PUSH2 0x247F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24AD PUSH0 DUP4 ADD DUP5 PUSH2 0x248B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C8 JUMPI PUSH2 0x24C7 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24D5 DUP5 DUP3 DUP6 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F3 JUMPI PUSH2 0x24F2 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2500 DUP5 DUP3 DUP6 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x251F JUMPI PUSH2 0x251E PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252C DUP6 DUP3 DUP7 ADD PUSH2 0x227D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x253D DUP6 DUP3 DUP7 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2550 DUP2 PUSH2 0x2142 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2569 PUSH0 DUP4 ADD DUP5 PUSH2 0x2547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2586 JUMPI PUSH2 0x2585 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2593 DUP7 DUP3 DUP8 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25A4 DUP7 DUP3 DUP8 ADD PUSH2 0x219C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x25B5 DUP7 DUP3 DUP8 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25D4 JUMPI PUSH2 0x25D3 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25E1 DUP5 DUP3 DUP6 ADD PUSH2 0x227D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2600 JUMPI PUSH2 0x25FF PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x260D DUP6 DUP3 DUP7 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x261E DUP6 DUP3 DUP7 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2641 JUMPI PUSH2 0x2640 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x264E DUP9 DUP3 DUP10 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x265F DUP9 DUP3 DUP10 ADD PUSH2 0x219C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2670 DUP9 DUP3 DUP10 ADD PUSH2 0x219C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2681 DUP9 DUP3 DUP10 ADD PUSH2 0x219C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2692 DUP9 DUP3 DUP10 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26B2 PUSH0 DUP4 ADD DUP7 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x26BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x26CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2718 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x272B JUMPI PUSH2 0x272A PUSH2 0x26D4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642027746F270000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2765 PUSH1 0xC DUP4 PUSH2 0x209D JUMP JUMPDEST SWAP2 POP PUSH2 0x2770 DUP3 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2792 DUP2 PUSH2 0x2759 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x27B1 PUSH0 DUP4 PUSH2 0x2799 JUMP JUMPDEST SWAP2 POP PUSH2 0x27BC DUP3 PUSH2 0x27A3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27D0 DUP3 PUSH2 0x27A6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x280E PUSH1 0x13 DUP4 PUSH2 0x209D JUMP JUMPDEST SWAP2 POP PUSH2 0x2819 DUP3 PUSH2 0x27DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x283B DUP2 PUSH2 0x2802 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2855 PUSH0 DUP4 ADD DUP6 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x2862 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x287C PUSH0 DUP4 ADD DUP6 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x2889 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x289E DUP2 PUSH2 0x2267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28B9 JUMPI PUSH2 0x28B8 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C6 DUP5 DUP3 DUP6 ADD PUSH2 0x2890 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x28E2 PUSH0 DUP4 ADD DUP10 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x28EF PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x28FC PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x2909 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x2916 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x2923 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x293C DUP2 PUSH2 0x2186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2959 JUMPI PUSH2 0x2958 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2966 DUP7 DUP3 DUP8 ADD PUSH2 0x292E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2977 DUP7 DUP3 DUP8 ADD PUSH2 0x292E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2988 DUP7 DUP3 DUP8 ADD PUSH2 0x292E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29A5 PUSH0 DUP4 ADD DUP7 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x29B2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x29BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29FB PUSH1 0x1F DUP4 PUSH2 0x209D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A06 DUP3 PUSH2 0x29C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A28 DUP2 PUSH2 0x29EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A42 PUSH0 DUP4 ADD DUP6 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x2A4F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2419 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A8D DUP3 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A98 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AB0 JUMPI PUSH2 0x2AAF PUSH2 0x2A56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 NOT PREVRANDAO 0x29 0x29 PUSH5 0xC7E1204B31 CREATE 0xDE 0xC3 DUP11 GASPRICE 0xB2 PREVRANDAO 0xDC SIGNEXTEND 0xDD 0xEC 0xE3 SHL 0xCD LOG0 DUP3 0xE5 PUSH21 0xB2596B64736F6C634300081C003300000000000000 ",
							"sourceMap": "1423:10532:10:-:0;;;2296:5;2267:34;;;;;;;;;;;;;;;;;;;;2610:5;2572:43;;;;;;;;;;;;;;;;;;;;2683:1;2654:30;;2929:5;2899:35;;;;;;;;;;;;;;;;;;;;3023:2;2993:32;;3948:1350;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1716:1:3;1821:7;:22;;;;4060:1:10::1;4032:30;;:16;:30;;::::0;4024:72:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4215:33;4221:10;1816:23;4215:5;;;:33;;:::i;:::-;4401:35;1563:23;2036:42;4401:10;;;:35;;:::i;:::-;;4536:38;1630:24;1563:23;4536:13;;;:38;;:::i;:::-;4584;1698:24;1563:23;4584:13;;;:38;;:::i;:::-;4931:16;4894:15;;:54;;;;;;;;;;;;;;;;;;4958:15;4976;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4958:43;;5011:12;5026:15;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5011:37;;5093:7;5075:37;;;5121:4;5128;5075:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5059:13;;:74;;;;;;;;;;;;;;;;;;5263:1;5249:11;:15;;;;4014:1284;;3948:1350:::0;1423:10532;;7458:208:4;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;5698:247::-;5781:25;5809:18;5822:4;5809:12;;;:18;;:::i;:::-;5781:46;;5862:9;5837:6;:12;5844:4;5837:12;;;;;;;;;;;:22;;:34;;;;5928:9;5909:17;5903:4;5886:52;;;;;;;;;;5771:174;5698:247;;:::o;6008:1107:4:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3482:1;3475:8;;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:169::-;6513:11;6547:6;6542:3;6535:19;6587:4;6582:3;6578:14;6563:29;;6429:169;;;;:::o;6604:179::-;6744:31;6740:1;6732:6;6728:14;6721:55;6604:179;:::o;6789:366::-;6931:3;6952:67;7016:2;7011:3;6952:67;:::i;:::-;6945:74;;7028:93;7117:3;7028:93;:::i;:::-;7146:2;7141:3;7137:12;7130:19;;6789:366;;;:::o;7161:419::-;7327:4;7365:2;7354:9;7350:18;7342:26;;7414:9;7408:4;7404:20;7400:1;7389:9;7385:17;7378:47;7442:131;7568:4;7442:131;:::i;:::-;7434:139;;7161:419;;;:::o;7586:118::-;7673:24;7691:5;7673:24;:::i;:::-;7668:3;7661:37;7586:118;;:::o;7710:332::-;7831:4;7869:2;7858:9;7854:18;7846:26;;7882:71;7950:1;7939:9;7935:17;7926:6;7882:71;:::i;:::-;7963:72;8031:2;8020:9;8016:18;8007:6;7963:72;:::i;:::-;7710:332;;;;;:::o;8048:222::-;8141:4;8179:2;8168:9;8164:18;8156:26;;8192:71;8260:1;8249:9;8245:17;8236:6;8192:71;:::i;:::-;8048:222;;;;:::o;8276:180::-;8324:77;8321:1;8314:88;8421:4;8418:1;8411:15;8445:4;8442:1;8435:15;8462:191;8502:3;8521:20;8539:1;8521:20;:::i;:::-;8516:25;;8555:20;8573:1;8555:20;:::i;:::-;8550:25;;8598:1;8595;8591:9;8584:16;;8619:3;8616:1;8613:10;8610:36;;;8626:18;;:::i;:::-;8610:36;8462:191;;;;:::o;8659:118::-;8746:24;8764:5;8746:24;:::i;:::-;8741:3;8734:37;8659:118;;:::o;8783:442::-;8932:4;8970:2;8959:9;8955:18;8947:26;;8983:71;9051:1;9040:9;9036:17;9027:6;8983:71;:::i;:::-;9064:72;9132:2;9121:9;9117:18;9108:6;9064:72;:::i;:::-;9146;9214:2;9203:9;9199:18;9190:6;9146:72;:::i;:::-;8783:442;;;;;;:::o;9231:222::-;9324:4;9362:2;9351:9;9347:18;9339:26;;9375:71;9443:1;9432:9;9428:17;9419:6;9375:71;:::i;:::-;9231:222;;;;:::o;1423:10532:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_1326": {
									"entryPoint": 4115,
									"id": 1326,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BURNER_ROLE_1336": {
									"entryPoint": 3490,
									"id": 1336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DAO_ADDRESS_1346": {
									"entryPoint": 5379,
									"id": 1346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 4555,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INITIAL_SUPPLY_1343": {
									"entryPoint": 3566,
									"id": 1343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1331": {
									"entryPoint": 5071,
									"id": 1331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1891": {
									"entryPoint": null,
									"id": 1891,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1046": {
									"entryPoint": 7075,
									"id": 1046,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_986": {
									"entryPoint": 5839,
									"id": 986,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_968": {
									"entryPoint": 6859,
									"id": 968,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 7538,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 5857,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 6264,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_935": {
									"entryPoint": 6732,
									"id": 935,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1211": {
									"entryPoint": 5832,
									"id": 1211,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_568": {
									"entryPoint": 7065,
									"id": 568,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_560": {
									"entryPoint": 6986,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 6498,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1094": {
									"entryPoint": 5877,
									"id": 1094,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_825": {
									"entryPoint": 6024,
									"id": 825,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_902": {
									"entryPoint": 7619,
									"id": 902,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidityETH_1688": {
									"entryPoint": 5403,
									"id": 1688,
									"parameterSlots": 5,
									"returnSlots": 3
								},
								"@allowance_722": {
									"entryPoint": 5141,
									"id": 722,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_746": {
									"entryPoint": 2800,
									"id": 746,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_681": {
									"entryPoint": 4046,
									"id": 681,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blacklist_1358": {
									"entryPoint": 5698,
									"id": 1358,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_1512": {
									"entryPoint": 3770,
									"id": 1512,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cooldownEnabled_1371": {
									"entryPoint": 4595,
									"id": 1371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cooldownTime_1374": {
									"entryPoint": 4613,
									"id": 1374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_659": {
									"entryPoint": 3582,
									"id": 659,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 3461,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 3532,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 4293,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@lastTxTimestamp_1378": {
									"entryPoint": 3833,
									"id": 1378,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@launchBlock_1368": {
									"entryPoint": 5065,
									"id": 1368,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxTxAmount_1360": {
									"entryPoint": 4287,
									"id": 1360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1497": {
									"entryPoint": 3713,
									"id": 1497,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_641": {
									"entryPoint": 2656,
									"id": 641,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 3590,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rescueETH_1887": {
									"entryPoint": 2834,
									"id": 1887,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rescueTokens_1852": {
									"entryPoint": 4619,
									"id": 1852,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 5107,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBlacklist_1612": {
									"entryPoint": 3160,
									"id": 1612,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setCooldownConfig_1590": {
									"entryPoint": 3854,
									"id": 1590,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setMaxTxAmount_1629": {
									"entryPoint": 5271,
									"id": 1629,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSniperProtection_1565": {
									"entryPoint": 4151,
									"id": 1565,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTradingEnabled_1540": {
									"entryPoint": 4901,
									"id": 1540,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@snipeBlocks_1366": {
									"entryPoint": 3526,
									"id": 1366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sniperProtectionEnabled_1363": {
									"entryPoint": 4537,
									"id": 1363,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1252": {
									"entryPoint": 5727,
									"id": 1252,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 2535,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_650": {
									"entryPoint": 4393,
									"id": 650,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_668": {
									"entryPoint": 3406,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tradingEnabled_1354": {
									"entryPoint": 4027,
									"id": 1354,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_778": {
									"entryPoint": 3415,
									"id": 778,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_705": {
									"entryPoint": 4561,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapV2Pair_1351": {
									"entryPoint": 3990,
									"id": 1351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapV2Router_1349": {
									"entryPoint": 3369,
									"id": 1349,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 8725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 9178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 8745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_address": {
									"entryPoint": 9583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 9768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 9663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 9481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 9198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 10562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV2Router02_$1314_to_t_address_fromStack": {
									"entryPoint": 8987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 10799,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10345,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10642,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10447,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 10306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$1314__to_t_address__fromStack_reversed": {
									"entryPoint": 9002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9887,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 8686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 9147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV2Router02_$1314_to_t_address": {
									"entryPoint": 8970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8365,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10838,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436": {
									"entryPoint": 10033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 10147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd": {
									"entryPoint": 10202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 10695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 8703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 9156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22363:11",
										"nodeType": "YulBlock",
										"src": "0:22363:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "378:105:11",
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nativeSrc": "388:89:11",
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:11",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nativeSrc": "399:78:11",
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:11",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:11",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nativeSrc": "531:78:11",
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:11",
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nativeSrc": "589:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nativeSrc": "589:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nativeSrc": "561:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nativeSrc": "551:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nativeSrc": "544:42:11",
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nativeSrc": "541:62:11",
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:11",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nativeSrc": "666:86:11",
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nativeSrc": "676:29:11",
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nativeSrc": "685:20:11",
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nativeSrc": "714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nativeSrc": "714:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:11",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:11",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:11",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nativeSrc": "823:262:11",
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:11",
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nativeSrc": "871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nativeSrc": "871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nativeSrc": "840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nativeSrc": "836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nativeSrc": "833:119:11",
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nativeSrc": "962:116:11",
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nativeSrc": "977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:11",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nativeSrc": "1036:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nativeSrc": "1016:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:11",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:11",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:11",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nativeSrc": "1133:48:11",
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nativeSrc": "1143:32:11",
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nativeSrc": "1161:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nativeSrc": "1154:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:11",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:11",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nativeSrc": "1246:50:11",
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nativeSrc": "1268:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nativeSrc": "1256:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nativeSrc": "1256:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:11",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nativeSrc": "1394:118:11",
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nativeSrc": "1404:26:11",
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nativeSrc": "1412:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nativeSrc": "1487:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nativeSrc": "1440:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nativeSrc": "1440:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:11",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:11",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nativeSrc": "1577:40:11",
													"nodeType": "YulBlock",
													"src": "1577:40:11",
													"statements": [
														{
															"nativeSrc": "1588:22:11",
															"nodeType": "YulAssignment",
															"src": "1588:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:11"
																},
																"nativeSrc": "1598:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:11",
														"nodeType": "YulTypedName",
														"src": "1560:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:11",
														"nodeType": "YulTypedName",
														"src": "1570:6:11",
														"type": ""
													}
												],
												"src": "1518:99:11"
											},
											{
												"body": {
													"nativeSrc": "1719:73:11",
													"nodeType": "YulBlock",
													"src": "1719:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:11"
																},
																"nativeSrc": "1729:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:11"
															},
															"nativeSrc": "1729:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:11"
														},
														{
															"nativeSrc": "1757:29:11",
															"nodeType": "YulAssignment",
															"src": "1757:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:11"
																},
																"nativeSrc": "1772:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:11",
														"nodeType": "YulTypedName",
														"src": "1691:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:11",
														"nodeType": "YulTypedName",
														"src": "1696:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:11",
														"nodeType": "YulTypedName",
														"src": "1707:11:11",
														"type": ""
													}
												],
												"src": "1623:169:11"
											},
											{
												"body": {
													"nativeSrc": "1860:77:11",
													"nodeType": "YulBlock",
													"src": "1860:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:11"
																},
																"nativeSrc": "1871:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:11"
															},
															"nativeSrc": "1871:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:11"
																		},
																		"nativeSrc": "1910:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:11"
																},
																"nativeSrc": "1903:27:11",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:11"
															},
															"nativeSrc": "1903:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:11",
														"nodeType": "YulTypedName",
														"src": "1842:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:11",
														"nodeType": "YulTypedName",
														"src": "1847:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:11",
														"nodeType": "YulTypedName",
														"src": "1852:6:11",
														"type": ""
													}
												],
												"src": "1798:139:11"
											},
											{
												"body": {
													"nativeSrc": "1991:54:11",
													"nodeType": "YulBlock",
													"src": "1991:54:11",
													"statements": [
														{
															"nativeSrc": "2001:38:11",
															"nodeType": "YulAssignment",
															"src": "2001:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:11"
																		},
																		"nativeSrc": "2015:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:11"
																		},
																		"nativeSrc": "2031:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:11"
																},
																"nativeSrc": "2011:28:11",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:11",
														"nodeType": "YulTypedName",
														"src": "1974:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:11",
														"nodeType": "YulTypedName",
														"src": "1984:6:11",
														"type": ""
													}
												],
												"src": "1943:102:11"
											},
											{
												"body": {
													"nativeSrc": "2143:285:11",
													"nodeType": "YulBlock",
													"src": "2143:285:11",
													"statements": [
														{
															"nativeSrc": "2153:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:11"
																},
																"nativeSrc": "2167:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:11",
															"nodeType": "YulAssignment",
															"src": "2215:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:11"
																},
																"nativeSrc": "2222:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:11"
																		},
																		"nativeSrc": "2337:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:11"
																},
																"nativeSrc": "2302:65:11",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:11"
															},
															"nativeSrc": "2302:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:11"
														},
														{
															"nativeSrc": "2376:46:11",
															"nodeType": "YulAssignment",
															"src": "2376:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:11"
																		},
																		"nativeSrc": "2392:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:11"
																},
																"nativeSrc": "2383:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:11",
														"nodeType": "YulTypedName",
														"src": "2124:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:11",
														"nodeType": "YulTypedName",
														"src": "2131:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:11",
														"nodeType": "YulTypedName",
														"src": "2139:3:11",
														"type": ""
													}
												],
												"src": "2051:377:11"
											},
											{
												"body": {
													"nativeSrc": "2552:195:11",
													"nodeType": "YulBlock",
													"src": "2552:195:11",
													"statements": [
														{
															"nativeSrc": "2562:26:11",
															"nodeType": "YulAssignment",
															"src": "2562:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:11"
																},
																"nativeSrc": "2570:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:11"
																		},
																		"nativeSrc": "2605:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:11"
																		},
																		"nativeSrc": "2624:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:11"
																},
																"nativeSrc": "2598:47:11",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:11"
															},
															"nativeSrc": "2598:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:11"
														},
														{
															"nativeSrc": "2654:86:11",
															"nodeType": "YulAssignment",
															"src": "2654:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:11"
																},
																"nativeSrc": "2662:78:11",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:11",
														"nodeType": "YulTypedName",
														"src": "2524:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:11",
														"nodeType": "YulTypedName",
														"src": "2536:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:11",
														"nodeType": "YulTypedName",
														"src": "2547:4:11",
														"type": ""
													}
												],
												"src": "2434:313:11"
											},
											{
												"body": {
													"nativeSrc": "2798:81:11",
													"nodeType": "YulBlock",
													"src": "2798:81:11",
													"statements": [
														{
															"nativeSrc": "2808:65:11",
															"nodeType": "YulAssignment",
															"src": "2808:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:11"
																},
																"nativeSrc": "2819:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:11",
														"nodeType": "YulTypedName",
														"src": "2780:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:11",
														"nodeType": "YulTypedName",
														"src": "2790:7:11",
														"type": ""
													}
												],
												"src": "2753:126:11"
											},
											{
												"body": {
													"nativeSrc": "2930:51:11",
													"nodeType": "YulBlock",
													"src": "2930:51:11",
													"statements": [
														{
															"nativeSrc": "2940:35:11",
															"nodeType": "YulAssignment",
															"src": "2940:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:11"
																},
																"nativeSrc": "2951:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:11",
														"nodeType": "YulTypedName",
														"src": "2912:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:11",
														"nodeType": "YulTypedName",
														"src": "2922:7:11",
														"type": ""
													}
												],
												"src": "2885:96:11"
											},
											{
												"body": {
													"nativeSrc": "3030:79:11",
													"nodeType": "YulBlock",
													"src": "3030:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:11",
																"nodeType": "YulBlock",
																"src": "3087:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:11"
																			},
																			"nativeSrc": "3089:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:11"
																		},
																		"nativeSrc": "3089:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:11"
																				},
																				"nativeSrc": "3060:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:11"
																		},
																		"nativeSrc": "3050:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:11"
																},
																"nativeSrc": "3043:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:11"
															},
															"nativeSrc": "3040:63:11",
															"nodeType": "YulIf",
															"src": "3040:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:11",
														"nodeType": "YulTypedName",
														"src": "3023:5:11",
														"type": ""
													}
												],
												"src": "2987:122:11"
											},
											{
												"body": {
													"nativeSrc": "3167:87:11",
													"nodeType": "YulBlock",
													"src": "3167:87:11",
													"statements": [
														{
															"nativeSrc": "3177:29:11",
															"nodeType": "YulAssignment",
															"src": "3177:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:11"
																},
																"nativeSrc": "3186:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:11"
																},
																"nativeSrc": "3215:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:11"
															},
															"nativeSrc": "3215:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:11",
														"nodeType": "YulTypedName",
														"src": "3145:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:11",
														"nodeType": "YulTypedName",
														"src": "3153:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:11",
														"nodeType": "YulTypedName",
														"src": "3161:5:11",
														"type": ""
													}
												],
												"src": "3115:139:11"
											},
											{
												"body": {
													"nativeSrc": "3305:32:11",
													"nodeType": "YulBlock",
													"src": "3305:32:11",
													"statements": [
														{
															"nativeSrc": "3315:16:11",
															"nodeType": "YulAssignment",
															"src": "3315:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:11",
																"nodeType": "YulIdentifier",
																"src": "3326:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:11",
														"nodeType": "YulTypedName",
														"src": "3287:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:11",
														"nodeType": "YulTypedName",
														"src": "3297:7:11",
														"type": ""
													}
												],
												"src": "3260:77:11"
											},
											{
												"body": {
													"nativeSrc": "3386:79:11",
													"nodeType": "YulBlock",
													"src": "3386:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:11",
																"nodeType": "YulBlock",
																"src": "3443:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:11"
																			},
																			"nativeSrc": "3445:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:11"
																		},
																		"nativeSrc": "3445:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:11"
																				},
																				"nativeSrc": "3416:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:11"
																		},
																		"nativeSrc": "3406:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:11"
																},
																"nativeSrc": "3399:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:11"
															},
															"nativeSrc": "3396:63:11",
															"nodeType": "YulIf",
															"src": "3396:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:11",
														"nodeType": "YulTypedName",
														"src": "3379:5:11",
														"type": ""
													}
												],
												"src": "3343:122:11"
											},
											{
												"body": {
													"nativeSrc": "3523:87:11",
													"nodeType": "YulBlock",
													"src": "3523:87:11",
													"statements": [
														{
															"nativeSrc": "3533:29:11",
															"nodeType": "YulAssignment",
															"src": "3533:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:11"
																},
																"nativeSrc": "3542:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:11"
																},
																"nativeSrc": "3571:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:11"
															},
															"nativeSrc": "3571:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:11",
														"nodeType": "YulTypedName",
														"src": "3501:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:11",
														"nodeType": "YulTypedName",
														"src": "3509:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:11",
														"nodeType": "YulTypedName",
														"src": "3517:5:11",
														"type": ""
													}
												],
												"src": "3471:139:11"
											},
											{
												"body": {
													"nativeSrc": "3699:391:11",
													"nodeType": "YulBlock",
													"src": "3699:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:11",
																"nodeType": "YulBlock",
																"src": "3745:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:11"
																			},
																			"nativeSrc": "3747:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:11"
																		},
																		"nativeSrc": "3747:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:11"
																		},
																		"nativeSrc": "3716:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:11"
																},
																"nativeSrc": "3712:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:11"
															},
															"nativeSrc": "3709:119:11",
															"nodeType": "YulIf",
															"src": "3709:119:11"
														},
														{
															"nativeSrc": "3838:117:11",
															"nodeType": "YulBlock",
															"src": "3838:117:11",
															"statements": [
																{
																	"nativeSrc": "3853:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:11"
																				},
																				"nativeSrc": "3913:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:11"
																		},
																		"nativeSrc": "3892:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:11",
															"nodeType": "YulBlock",
															"src": "3965:118:11",
															"statements": [
																{
																	"nativeSrc": "3980:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:11"
																				},
																				"nativeSrc": "4041:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:11"
																		},
																		"nativeSrc": "4020:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:11",
														"nodeType": "YulTypedName",
														"src": "3661:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:11",
														"nodeType": "YulTypedName",
														"src": "3672:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:11",
														"nodeType": "YulTypedName",
														"src": "3684:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:11",
														"nodeType": "YulTypedName",
														"src": "3692:6:11",
														"type": ""
													}
												],
												"src": "3616:474:11"
											},
											{
												"body": {
													"nativeSrc": "4149:51:11",
													"nodeType": "YulBlock",
													"src": "4149:51:11",
													"statements": [
														{
															"nativeSrc": "4159:35:11",
															"nodeType": "YulAssignment",
															"src": "4159:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4188:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4188:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4170:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "4170:17:11"
																},
																"nativeSrc": "4170:24:11",
																"nodeType": "YulFunctionCall",
																"src": "4170:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4159:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4159:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "4096:104:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4131:5:11",
														"nodeType": "YulTypedName",
														"src": "4131:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4141:7:11",
														"nodeType": "YulTypedName",
														"src": "4141:7:11",
														"type": ""
													}
												],
												"src": "4096:104:11"
											},
											{
												"body": {
													"nativeSrc": "4257:87:11",
													"nodeType": "YulBlock",
													"src": "4257:87:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4322:16:11",
																"nodeType": "YulBlock",
																"src": "4322:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4331:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4331:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4334:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4334:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4324:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4324:6:11"
																			},
																			"nativeSrc": "4324:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4324:12:11"
																		},
																		"nativeSrc": "4324:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4324:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4280:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4280:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4313:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4313:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "4287:25:11",
																					"nodeType": "YulIdentifier",
																					"src": "4287:25:11"
																				},
																				"nativeSrc": "4287:32:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4287:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4277:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4277:2:11"
																		},
																		"nativeSrc": "4277:43:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4277:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4270:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:11"
																},
																"nativeSrc": "4270:51:11",
																"nodeType": "YulFunctionCall",
																"src": "4270:51:11"
															},
															"nativeSrc": "4267:71:11",
															"nodeType": "YulIf",
															"src": "4267:71:11"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "4206:138:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4250:5:11",
														"nodeType": "YulTypedName",
														"src": "4250:5:11",
														"type": ""
													}
												],
												"src": "4206:138:11"
											},
											{
												"body": {
													"nativeSrc": "4410:95:11",
													"nodeType": "YulBlock",
													"src": "4410:95:11",
													"statements": [
														{
															"nativeSrc": "4420:29:11",
															"nodeType": "YulAssignment",
															"src": "4420:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4442:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4442:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4429:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4429:12:11"
																},
																"nativeSrc": "4429:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4429:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4420:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4420:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "4458:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "4458:34:11"
																},
																"nativeSrc": "4458:41:11",
																"nodeType": "YulFunctionCall",
																"src": "4458:41:11"
															},
															"nativeSrc": "4458:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "4458:41:11"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "4350:155:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4388:6:11",
														"nodeType": "YulTypedName",
														"src": "4388:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4396:3:11",
														"nodeType": "YulTypedName",
														"src": "4396:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4404:5:11",
														"nodeType": "YulTypedName",
														"src": "4404:5:11",
														"type": ""
													}
												],
												"src": "4350:155:11"
											},
											{
												"body": {
													"nativeSrc": "4602:399:11",
													"nodeType": "YulBlock",
													"src": "4602:399:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4648:83:11",
																"nodeType": "YulBlock",
																"src": "4648:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4650:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4650:77:11"
																			},
																			"nativeSrc": "4650:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4650:79:11"
																		},
																		"nativeSrc": "4650:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4650:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4623:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4623:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4632:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4632:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4619:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4619:3:11"
																		},
																		"nativeSrc": "4619:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4619:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4644:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4644:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4615:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:11"
																},
																"nativeSrc": "4615:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4615:32:11"
															},
															"nativeSrc": "4612:119:11",
															"nodeType": "YulIf",
															"src": "4612:119:11"
														},
														{
															"nativeSrc": "4741:125:11",
															"nodeType": "YulBlock",
															"src": "4741:125:11",
															"statements": [
																{
																	"nativeSrc": "4756:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4756:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4770:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4770:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4760:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4760:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4785:71:11",
																	"nodeType": "YulAssignment",
																	"src": "4785:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4828:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4828:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4839:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4839:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4824:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4824:3:11"
																				},
																				"nativeSrc": "4824:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4824:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4848:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4848:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "4795:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "4795:28:11"
																		},
																		"nativeSrc": "4795:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4795:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4785:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4785:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4876:118:11",
															"nodeType": "YulBlock",
															"src": "4876:118:11",
															"statements": [
																{
																	"nativeSrc": "4891:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4891:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4905:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4905:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4895:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4895:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4921:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4921:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4956:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4956:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4967:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4967:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4952:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4952:3:11"
																				},
																				"nativeSrc": "4952:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4952:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4976:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4976:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4931:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4931:20:11"
																		},
																		"nativeSrc": "4931:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4931:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4921:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4921:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "4511:490:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4564:9:11",
														"nodeType": "YulTypedName",
														"src": "4564:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4575:7:11",
														"nodeType": "YulTypedName",
														"src": "4575:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4587:6:11",
														"nodeType": "YulTypedName",
														"src": "4587:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4595:6:11",
														"nodeType": "YulTypedName",
														"src": "4595:6:11",
														"type": ""
													}
												],
												"src": "4511:490:11"
											},
											{
												"body": {
													"nativeSrc": "5047:76:11",
													"nodeType": "YulBlock",
													"src": "5047:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5101:16:11",
																"nodeType": "YulBlock",
																"src": "5101:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5110:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5110:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5113:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5113:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5103:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5103:6:11"
																			},
																			"nativeSrc": "5103:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5103:12:11"
																		},
																		"nativeSrc": "5103:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5103:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5070:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5070:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5092:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5092:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5077:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "5077:14:11"
																				},
																				"nativeSrc": "5077:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5077:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5067:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5067:2:11"
																		},
																		"nativeSrc": "5067:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5060:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5060:6:11"
																},
																"nativeSrc": "5060:40:11",
																"nodeType": "YulFunctionCall",
																"src": "5060:40:11"
															},
															"nativeSrc": "5057:60:11",
															"nodeType": "YulIf",
															"src": "5057:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5007:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5040:5:11",
														"nodeType": "YulTypedName",
														"src": "5040:5:11",
														"type": ""
													}
												],
												"src": "5007:116:11"
											},
											{
												"body": {
													"nativeSrc": "5178:84:11",
													"nodeType": "YulBlock",
													"src": "5178:84:11",
													"statements": [
														{
															"nativeSrc": "5188:29:11",
															"nodeType": "YulAssignment",
															"src": "5188:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5210:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5210:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5197:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5197:12:11"
																},
																"nativeSrc": "5197:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5197:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5188:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5188:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5250:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5250:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5226:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "5226:23:11"
																},
																"nativeSrc": "5226:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5226:30:11"
															},
															"nativeSrc": "5226:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5226:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "5129:133:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5156:6:11",
														"nodeType": "YulTypedName",
														"src": "5156:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5164:3:11",
														"nodeType": "YulTypedName",
														"src": "5164:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5172:5:11",
														"nodeType": "YulTypedName",
														"src": "5172:5:11",
														"type": ""
													}
												],
												"src": "5129:133:11"
											},
											{
												"body": {
													"nativeSrc": "5348:388:11",
													"nodeType": "YulBlock",
													"src": "5348:388:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5394:83:11",
																"nodeType": "YulBlock",
																"src": "5394:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5396:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5396:77:11"
																			},
																			"nativeSrc": "5396:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5396:79:11"
																		},
																		"nativeSrc": "5396:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5396:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5369:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5369:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5378:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5378:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5365:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5365:3:11"
																		},
																		"nativeSrc": "5365:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5365:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5390:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5390:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5361:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5361:3:11"
																},
																"nativeSrc": "5361:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5361:32:11"
															},
															"nativeSrc": "5358:119:11",
															"nodeType": "YulIf",
															"src": "5358:119:11"
														},
														{
															"nativeSrc": "5487:117:11",
															"nodeType": "YulBlock",
															"src": "5487:117:11",
															"statements": [
																{
																	"nativeSrc": "5502:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5502:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5516:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5516:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5506:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5506:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5531:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5531:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5566:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5566:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5577:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5577:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5562:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5562:3:11"
																				},
																				"nativeSrc": "5562:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5562:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5586:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5586:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5541:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5541:20:11"
																		},
																		"nativeSrc": "5541:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5541:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5531:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5531:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5614:115:11",
															"nodeType": "YulBlock",
															"src": "5614:115:11",
															"statements": [
																{
																	"nativeSrc": "5629:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5629:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5643:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5633:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5633:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5659:60:11",
																	"nodeType": "YulAssignment",
																	"src": "5659:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5691:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5691:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5702:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5702:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5687:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5687:3:11"
																				},
																				"nativeSrc": "5687:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5711:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5711:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5669:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5669:17:11"
																		},
																		"nativeSrc": "5669:50:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5669:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5659:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5659:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "5268:468:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5310:9:11",
														"nodeType": "YulTypedName",
														"src": "5310:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5321:7:11",
														"nodeType": "YulTypedName",
														"src": "5321:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5333:6:11",
														"nodeType": "YulTypedName",
														"src": "5333:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5341:6:11",
														"nodeType": "YulTypedName",
														"src": "5341:6:11",
														"type": ""
													}
												],
												"src": "5268:468:11"
											},
											{
												"body": {
													"nativeSrc": "5774:28:11",
													"nodeType": "YulBlock",
													"src": "5774:28:11",
													"statements": [
														{
															"nativeSrc": "5784:12:11",
															"nodeType": "YulAssignment",
															"src": "5784:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "5791:5:11",
																"nodeType": "YulIdentifier",
																"src": "5791:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5784:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5784:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5742:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5760:5:11",
														"nodeType": "YulTypedName",
														"src": "5760:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5770:3:11",
														"nodeType": "YulTypedName",
														"src": "5770:3:11",
														"type": ""
													}
												],
												"src": "5742:60:11"
											},
											{
												"body": {
													"nativeSrc": "5868:82:11",
													"nodeType": "YulBlock",
													"src": "5868:82:11",
													"statements": [
														{
															"nativeSrc": "5878:66:11",
															"nodeType": "YulAssignment",
															"src": "5878:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5936:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5936:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5918:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5918:17:11"
																				},
																				"nativeSrc": "5918:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5918:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5909:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "5909:8:11"
																		},
																		"nativeSrc": "5909:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5909:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5891:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5891:17:11"
																},
																"nativeSrc": "5891:53:11",
																"nodeType": "YulFunctionCall",
																"src": "5891:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5878:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5878:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5808:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5848:5:11",
														"nodeType": "YulTypedName",
														"src": "5848:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5858:9:11",
														"nodeType": "YulTypedName",
														"src": "5858:9:11",
														"type": ""
													}
												],
												"src": "5808:142:11"
											},
											{
												"body": {
													"nativeSrc": "6016:66:11",
													"nodeType": "YulBlock",
													"src": "6016:66:11",
													"statements": [
														{
															"nativeSrc": "6026:50:11",
															"nodeType": "YulAssignment",
															"src": "6026:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6070:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6070:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6039:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "6039:30:11"
																},
																"nativeSrc": "6039:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6039:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6026:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "6026:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5956:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5996:5:11",
														"nodeType": "YulTypedName",
														"src": "5996:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6006:9:11",
														"nodeType": "YulTypedName",
														"src": "6006:9:11",
														"type": ""
													}
												],
												"src": "5956:126:11"
											},
											{
												"body": {
													"nativeSrc": "6175:66:11",
													"nodeType": "YulBlock",
													"src": "6175:66:11",
													"statements": [
														{
															"nativeSrc": "6185:50:11",
															"nodeType": "YulAssignment",
															"src": "6185:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6229:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6229:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6198:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "6198:30:11"
																},
																"nativeSrc": "6198:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6198:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6185:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "6185:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router02_$1314_to_t_address",
												"nativeSrc": "6088:153:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6155:5:11",
														"nodeType": "YulTypedName",
														"src": "6155:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6165:9:11",
														"nodeType": "YulTypedName",
														"src": "6165:9:11",
														"type": ""
													}
												],
												"src": "6088:153:11"
											},
											{
												"body": {
													"nativeSrc": "6339:93:11",
													"nodeType": "YulBlock",
													"src": "6339:93:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6356:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6356:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6419:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6419:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Router02_$1314_to_t_address",
																			"nativeSrc": "6361:57:11",
																			"nodeType": "YulIdentifier",
																			"src": "6361:57:11"
																		},
																		"nativeSrc": "6361:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6361:64:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6349:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:11"
																},
																"nativeSrc": "6349:77:11",
																"nodeType": "YulFunctionCall",
																"src": "6349:77:11"
															},
															"nativeSrc": "6349:77:11",
															"nodeType": "YulExpressionStatement",
															"src": "6349:77:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Router02_$1314_to_t_address_fromStack",
												"nativeSrc": "6247:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6327:5:11",
														"nodeType": "YulTypedName",
														"src": "6327:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6334:3:11",
														"nodeType": "YulTypedName",
														"src": "6334:3:11",
														"type": ""
													}
												],
												"src": "6247:185:11"
											},
											{
												"body": {
													"nativeSrc": "6563:151:11",
													"nodeType": "YulBlock",
													"src": "6563:151:11",
													"statements": [
														{
															"nativeSrc": "6573:26:11",
															"nodeType": "YulAssignment",
															"src": "6573:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6585:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6585:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6596:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6596:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6581:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6581:3:11"
																},
																"nativeSrc": "6581:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6581:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6573:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6573:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6680:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6680:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6693:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6693:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6704:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6704:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6689:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6689:3:11"
																		},
																		"nativeSrc": "6689:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6689:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Router02_$1314_to_t_address_fromStack",
																	"nativeSrc": "6609:70:11",
																	"nodeType": "YulIdentifier",
																	"src": "6609:70:11"
																},
																"nativeSrc": "6609:98:11",
																"nodeType": "YulFunctionCall",
																"src": "6609:98:11"
															},
															"nativeSrc": "6609:98:11",
															"nodeType": "YulExpressionStatement",
															"src": "6609:98:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1314__to_t_address__fromStack_reversed",
												"nativeSrc": "6438:276:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6535:9:11",
														"nodeType": "YulTypedName",
														"src": "6535:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6547:6:11",
														"nodeType": "YulTypedName",
														"src": "6547:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6558:4:11",
														"nodeType": "YulTypedName",
														"src": "6558:4:11",
														"type": ""
													}
												],
												"src": "6438:276:11"
											},
											{
												"body": {
													"nativeSrc": "6785:53:11",
													"nodeType": "YulBlock",
													"src": "6785:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6802:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6802:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6825:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6825:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6807:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6807:17:11"
																		},
																		"nativeSrc": "6807:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6807:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6795:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6795:6:11"
																},
																"nativeSrc": "6795:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6795:37:11"
															},
															"nativeSrc": "6795:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "6795:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6720:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6773:5:11",
														"nodeType": "YulTypedName",
														"src": "6773:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6780:3:11",
														"nodeType": "YulTypedName",
														"src": "6780:3:11",
														"type": ""
													}
												],
												"src": "6720:118:11"
											},
											{
												"body": {
													"nativeSrc": "6942:124:11",
													"nodeType": "YulBlock",
													"src": "6942:124:11",
													"statements": [
														{
															"nativeSrc": "6952:26:11",
															"nodeType": "YulAssignment",
															"src": "6952:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6964:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6964:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6975:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6975:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6960:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6960:3:11"
																},
																"nativeSrc": "6960:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6960:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6952:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6952:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7032:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7032:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7045:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7045:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7056:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7056:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7041:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7041:3:11"
																		},
																		"nativeSrc": "7041:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7041:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6988:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6988:43:11"
																},
																"nativeSrc": "6988:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6988:71:11"
															},
															"nativeSrc": "6988:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6988:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6844:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6914:9:11",
														"nodeType": "YulTypedName",
														"src": "6914:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6926:6:11",
														"nodeType": "YulTypedName",
														"src": "6926:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6937:4:11",
														"nodeType": "YulTypedName",
														"src": "6937:4:11",
														"type": ""
													}
												],
												"src": "6844:222:11"
											},
											{
												"body": {
													"nativeSrc": "7172:519:11",
													"nodeType": "YulBlock",
													"src": "7172:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7218:83:11",
																"nodeType": "YulBlock",
																"src": "7218:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7220:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7220:77:11"
																			},
																			"nativeSrc": "7220:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7220:79:11"
																		},
																		"nativeSrc": "7220:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7220:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7193:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7193:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7202:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7202:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7189:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7189:3:11"
																		},
																		"nativeSrc": "7189:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7189:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7214:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7214:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7185:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7185:3:11"
																},
																"nativeSrc": "7185:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7185:32:11"
															},
															"nativeSrc": "7182:119:11",
															"nodeType": "YulIf",
															"src": "7182:119:11"
														},
														{
															"nativeSrc": "7311:117:11",
															"nodeType": "YulBlock",
															"src": "7311:117:11",
															"statements": [
																{
																	"nativeSrc": "7326:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7326:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7340:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7340:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7330:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7330:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7355:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7355:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7390:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7390:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7401:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7401:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7386:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7386:3:11"
																				},
																				"nativeSrc": "7386:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7386:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7410:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7410:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7365:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7365:20:11"
																		},
																		"nativeSrc": "7365:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7365:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7355:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7355:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7438:118:11",
															"nodeType": "YulBlock",
															"src": "7438:118:11",
															"statements": [
																{
																	"nativeSrc": "7453:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7453:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7467:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7467:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7457:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7457:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7483:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7483:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7518:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7518:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7529:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7529:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7514:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7514:3:11"
																				},
																				"nativeSrc": "7514:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7514:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7538:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7538:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7493:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7493:20:11"
																		},
																		"nativeSrc": "7493:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7493:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7483:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7483:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7566:118:11",
															"nodeType": "YulBlock",
															"src": "7566:118:11",
															"statements": [
																{
																	"nativeSrc": "7581:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7581:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7595:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7595:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7585:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7585:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7611:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7611:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7646:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7646:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7657:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7657:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7642:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7642:3:11"
																				},
																				"nativeSrc": "7642:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7642:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7666:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7666:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7621:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7621:20:11"
																		},
																		"nativeSrc": "7621:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7621:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7611:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7611:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "7072:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7126:9:11",
														"nodeType": "YulTypedName",
														"src": "7126:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7137:7:11",
														"nodeType": "YulTypedName",
														"src": "7137:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7149:6:11",
														"nodeType": "YulTypedName",
														"src": "7149:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7157:6:11",
														"nodeType": "YulTypedName",
														"src": "7157:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7165:6:11",
														"nodeType": "YulTypedName",
														"src": "7165:6:11",
														"type": ""
													}
												],
												"src": "7072:619:11"
											},
											{
												"body": {
													"nativeSrc": "7742:32:11",
													"nodeType": "YulBlock",
													"src": "7742:32:11",
													"statements": [
														{
															"nativeSrc": "7752:16:11",
															"nodeType": "YulAssignment",
															"src": "7752:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "7763:5:11",
																"nodeType": "YulIdentifier",
																"src": "7763:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7752:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "7752:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "7697:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7724:5:11",
														"nodeType": "YulTypedName",
														"src": "7724:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7734:7:11",
														"nodeType": "YulTypedName",
														"src": "7734:7:11",
														"type": ""
													}
												],
												"src": "7697:77:11"
											},
											{
												"body": {
													"nativeSrc": "7823:79:11",
													"nodeType": "YulBlock",
													"src": "7823:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7880:16:11",
																"nodeType": "YulBlock",
																"src": "7880:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7889:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7889:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7892:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7892:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7882:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7882:6:11"
																			},
																			"nativeSrc": "7882:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7882:12:11"
																		},
																		"nativeSrc": "7882:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7882:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7846:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7846:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7871:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7871:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "7853:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "7853:17:11"
																				},
																				"nativeSrc": "7853:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7853:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7843:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7843:2:11"
																		},
																		"nativeSrc": "7843:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7843:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7836:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7836:6:11"
																},
																"nativeSrc": "7836:43:11",
																"nodeType": "YulFunctionCall",
																"src": "7836:43:11"
															},
															"nativeSrc": "7833:63:11",
															"nodeType": "YulIf",
															"src": "7833:63:11"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "7780:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7816:5:11",
														"nodeType": "YulTypedName",
														"src": "7816:5:11",
														"type": ""
													}
												],
												"src": "7780:122:11"
											},
											{
												"body": {
													"nativeSrc": "7960:87:11",
													"nodeType": "YulBlock",
													"src": "7960:87:11",
													"statements": [
														{
															"nativeSrc": "7970:29:11",
															"nodeType": "YulAssignment",
															"src": "7970:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7992:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7992:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7979:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "7979:12:11"
																},
																"nativeSrc": "7979:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7979:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7970:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7970:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8035:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8035:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "8008:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "8008:26:11"
																},
																"nativeSrc": "8008:33:11",
																"nodeType": "YulFunctionCall",
																"src": "8008:33:11"
															},
															"nativeSrc": "8008:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "8008:33:11"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "7908:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7938:6:11",
														"nodeType": "YulTypedName",
														"src": "7938:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7946:3:11",
														"nodeType": "YulTypedName",
														"src": "7946:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7954:5:11",
														"nodeType": "YulTypedName",
														"src": "7954:5:11",
														"type": ""
													}
												],
												"src": "7908:139:11"
											},
											{
												"body": {
													"nativeSrc": "8119:263:11",
													"nodeType": "YulBlock",
													"src": "8119:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8165:83:11",
																"nodeType": "YulBlock",
																"src": "8165:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8167:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8167:77:11"
																			},
																			"nativeSrc": "8167:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8167:79:11"
																		},
																		"nativeSrc": "8167:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8167:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8140:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8140:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8149:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8149:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8136:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8136:3:11"
																		},
																		"nativeSrc": "8136:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8136:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8161:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8161:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8132:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8132:3:11"
																},
																"nativeSrc": "8132:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8132:32:11"
															},
															"nativeSrc": "8129:119:11",
															"nodeType": "YulIf",
															"src": "8129:119:11"
														},
														{
															"nativeSrc": "8258:117:11",
															"nodeType": "YulBlock",
															"src": "8258:117:11",
															"statements": [
																{
																	"nativeSrc": "8273:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8273:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8287:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8287:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8277:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8277:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8302:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8302:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8337:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8337:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8348:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8348:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8333:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8333:3:11"
																				},
																				"nativeSrc": "8333:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8333:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8357:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8357:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "8312:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8312:20:11"
																		},
																		"nativeSrc": "8312:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8312:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8302:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8302:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "8053:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8089:9:11",
														"nodeType": "YulTypedName",
														"src": "8089:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8100:7:11",
														"nodeType": "YulTypedName",
														"src": "8100:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8112:6:11",
														"nodeType": "YulTypedName",
														"src": "8112:6:11",
														"type": ""
													}
												],
												"src": "8053:329:11"
											},
											{
												"body": {
													"nativeSrc": "8453:53:11",
													"nodeType": "YulBlock",
													"src": "8453:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8470:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8470:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8493:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8493:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8475:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "8475:17:11"
																		},
																		"nativeSrc": "8475:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8475:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8463:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8463:6:11"
																},
																"nativeSrc": "8463:37:11",
																"nodeType": "YulFunctionCall",
																"src": "8463:37:11"
															},
															"nativeSrc": "8463:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "8463:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8388:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8441:5:11",
														"nodeType": "YulTypedName",
														"src": "8441:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8448:3:11",
														"nodeType": "YulTypedName",
														"src": "8448:3:11",
														"type": ""
													}
												],
												"src": "8388:118:11"
											},
											{
												"body": {
													"nativeSrc": "8610:124:11",
													"nodeType": "YulBlock",
													"src": "8610:124:11",
													"statements": [
														{
															"nativeSrc": "8620:26:11",
															"nodeType": "YulAssignment",
															"src": "8620:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8632:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8632:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8643:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8643:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8628:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8628:3:11"
																},
																"nativeSrc": "8628:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8628:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8620:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8620:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8700:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8700:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8713:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8713:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8724:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8724:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8709:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8709:3:11"
																		},
																		"nativeSrc": "8709:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8709:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8656:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8656:43:11"
																},
																"nativeSrc": "8656:71:11",
																"nodeType": "YulFunctionCall",
																"src": "8656:71:11"
															},
															"nativeSrc": "8656:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "8656:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "8512:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8582:9:11",
														"nodeType": "YulTypedName",
														"src": "8582:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8594:6:11",
														"nodeType": "YulTypedName",
														"src": "8594:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8605:4:11",
														"nodeType": "YulTypedName",
														"src": "8605:4:11",
														"type": ""
													}
												],
												"src": "8512:222:11"
											},
											{
												"body": {
													"nativeSrc": "8823:391:11",
													"nodeType": "YulBlock",
													"src": "8823:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8869:83:11",
																"nodeType": "YulBlock",
																"src": "8869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8871:77:11"
																			},
																			"nativeSrc": "8871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8871:79:11"
																		},
																		"nativeSrc": "8871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8840:3:11"
																		},
																		"nativeSrc": "8840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8865:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8836:3:11"
																},
																"nativeSrc": "8836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8836:32:11"
															},
															"nativeSrc": "8833:119:11",
															"nodeType": "YulIf",
															"src": "8833:119:11"
														},
														{
															"nativeSrc": "8962:117:11",
															"nodeType": "YulBlock",
															"src": "8962:117:11",
															"statements": [
																{
																	"nativeSrc": "8977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9006:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9006:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9041:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9041:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9052:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9052:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9037:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9037:3:11"
																				},
																				"nativeSrc": "9037:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9037:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9061:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9061:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "9016:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9016:20:11"
																		},
																		"nativeSrc": "9016:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9016:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9006:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9089:118:11",
															"nodeType": "YulBlock",
															"src": "9089:118:11",
															"statements": [
																{
																	"nativeSrc": "9104:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9104:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9118:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9118:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9108:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9108:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9134:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9134:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9169:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9169:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9180:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9180:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9165:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9165:3:11"
																				},
																				"nativeSrc": "9165:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9165:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9144:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9144:20:11"
																		},
																		"nativeSrc": "9144:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9144:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9134:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9134:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "8740:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8785:9:11",
														"nodeType": "YulTypedName",
														"src": "8785:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8796:7:11",
														"nodeType": "YulTypedName",
														"src": "8796:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8808:6:11",
														"nodeType": "YulTypedName",
														"src": "8808:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8816:6:11",
														"nodeType": "YulTypedName",
														"src": "8816:6:11",
														"type": ""
													}
												],
												"src": "8740:474:11"
											},
											{
												"body": {
													"nativeSrc": "9263:43:11",
													"nodeType": "YulBlock",
													"src": "9263:43:11",
													"statements": [
														{
															"nativeSrc": "9273:27:11",
															"nodeType": "YulAssignment",
															"src": "9273:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9288:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "9288:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9295:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9295:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9284:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9284:3:11"
																},
																"nativeSrc": "9284:16:11",
																"nodeType": "YulFunctionCall",
																"src": "9284:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9273:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "9273:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9220:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9245:5:11",
														"nodeType": "YulTypedName",
														"src": "9245:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9255:7:11",
														"nodeType": "YulTypedName",
														"src": "9255:7:11",
														"type": ""
													}
												],
												"src": "9220:86:11"
											},
											{
												"body": {
													"nativeSrc": "9373:51:11",
													"nodeType": "YulBlock",
													"src": "9373:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9390:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9390:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9411:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9411:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "9395:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "9395:15:11"
																		},
																		"nativeSrc": "9395:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9395:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9383:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9383:6:11"
																},
																"nativeSrc": "9383:35:11",
																"nodeType": "YulFunctionCall",
																"src": "9383:35:11"
															},
															"nativeSrc": "9383:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "9383:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "9312:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9361:5:11",
														"nodeType": "YulTypedName",
														"src": "9361:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9368:3:11",
														"nodeType": "YulTypedName",
														"src": "9368:3:11",
														"type": ""
													}
												],
												"src": "9312:112:11"
											},
											{
												"body": {
													"nativeSrc": "9524:120:11",
													"nodeType": "YulBlock",
													"src": "9524:120:11",
													"statements": [
														{
															"nativeSrc": "9534:26:11",
															"nodeType": "YulAssignment",
															"src": "9534:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9546:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9546:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9557:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9557:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9542:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9542:3:11"
																},
																"nativeSrc": "9542:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9542:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9534:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9534:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9610:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9610:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9623:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9623:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9634:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9634:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9619:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9619:3:11"
																		},
																		"nativeSrc": "9619:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9619:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "9570:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "9570:39:11"
																},
																"nativeSrc": "9570:67:11",
																"nodeType": "YulFunctionCall",
																"src": "9570:67:11"
															},
															"nativeSrc": "9570:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "9570:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "9430:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9496:9:11",
														"nodeType": "YulTypedName",
														"src": "9496:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9508:6:11",
														"nodeType": "YulTypedName",
														"src": "9508:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9519:4:11",
														"nodeType": "YulTypedName",
														"src": "9519:4:11",
														"type": ""
													}
												],
												"src": "9430:214:11"
											},
											{
												"body": {
													"nativeSrc": "9716:263:11",
													"nodeType": "YulBlock",
													"src": "9716:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9762:83:11",
																"nodeType": "YulBlock",
																"src": "9762:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9764:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "9764:77:11"
																			},
																			"nativeSrc": "9764:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9764:79:11"
																		},
																		"nativeSrc": "9764:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9764:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9737:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9737:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9746:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9746:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9733:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9733:3:11"
																		},
																		"nativeSrc": "9733:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9733:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9758:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9758:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9729:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9729:3:11"
																},
																"nativeSrc": "9729:32:11",
																"nodeType": "YulFunctionCall",
																"src": "9729:32:11"
															},
															"nativeSrc": "9726:119:11",
															"nodeType": "YulIf",
															"src": "9726:119:11"
														},
														{
															"nativeSrc": "9855:117:11",
															"nodeType": "YulBlock",
															"src": "9855:117:11",
															"statements": [
																{
																	"nativeSrc": "9870:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9870:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9884:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9884:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9874:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9874:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9899:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9899:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9934:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9934:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9945:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9945:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9930:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9930:3:11"
																				},
																				"nativeSrc": "9930:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9930:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9954:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9954:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9909:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9909:20:11"
																		},
																		"nativeSrc": "9909:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9909:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9899:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9899:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "9650:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9686:9:11",
														"nodeType": "YulTypedName",
														"src": "9686:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9697:7:11",
														"nodeType": "YulTypedName",
														"src": "9697:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9709:6:11",
														"nodeType": "YulTypedName",
														"src": "9709:6:11",
														"type": ""
													}
												],
												"src": "9650:329:11"
											},
											{
												"body": {
													"nativeSrc": "10051:263:11",
													"nodeType": "YulBlock",
													"src": "10051:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "10097:83:11",
																"nodeType": "YulBlock",
																"src": "10097:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10099:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "10099:77:11"
																			},
																			"nativeSrc": "10099:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10099:79:11"
																		},
																		"nativeSrc": "10099:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10099:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10072:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10072:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10081:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10081:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10068:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10068:3:11"
																		},
																		"nativeSrc": "10068:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10068:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10093:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10093:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10064:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10064:3:11"
																},
																"nativeSrc": "10064:32:11",
																"nodeType": "YulFunctionCall",
																"src": "10064:32:11"
															},
															"nativeSrc": "10061:119:11",
															"nodeType": "YulIf",
															"src": "10061:119:11"
														},
														{
															"nativeSrc": "10190:117:11",
															"nodeType": "YulBlock",
															"src": "10190:117:11",
															"statements": [
																{
																	"nativeSrc": "10205:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10205:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10219:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10219:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10209:6:11",
																			"nodeType": "YulTypedName",
																			"src": "10209:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10234:63:11",
																	"nodeType": "YulAssignment",
																	"src": "10234:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10269:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "10269:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10280:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10280:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10265:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10265:3:11"
																				},
																				"nativeSrc": "10265:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10265:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10289:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10289:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10244:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "10244:20:11"
																		},
																		"nativeSrc": "10244:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10244:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10234:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "10234:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9985:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10021:9:11",
														"nodeType": "YulTypedName",
														"src": "10021:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10032:7:11",
														"nodeType": "YulTypedName",
														"src": "10032:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10044:6:11",
														"nodeType": "YulTypedName",
														"src": "10044:6:11",
														"type": ""
													}
												],
												"src": "9985:329:11"
											},
											{
												"body": {
													"nativeSrc": "10400:388:11",
													"nodeType": "YulBlock",
													"src": "10400:388:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "10446:83:11",
																"nodeType": "YulBlock",
																"src": "10446:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10448:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "10448:77:11"
																			},
																			"nativeSrc": "10448:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10448:79:11"
																		},
																		"nativeSrc": "10448:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10448:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10421:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10421:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10430:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10430:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10417:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:11"
																		},
																		"nativeSrc": "10417:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10417:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10442:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10442:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10413:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10413:3:11"
																},
																"nativeSrc": "10413:32:11",
																"nodeType": "YulFunctionCall",
																"src": "10413:32:11"
															},
															"nativeSrc": "10410:119:11",
															"nodeType": "YulIf",
															"src": "10410:119:11"
														},
														{
															"nativeSrc": "10539:114:11",
															"nodeType": "YulBlock",
															"src": "10539:114:11",
															"statements": [
																{
																	"nativeSrc": "10554:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10554:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10568:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10568:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10558:6:11",
																			"nodeType": "YulTypedName",
																			"src": "10558:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10583:60:11",
																	"nodeType": "YulAssignment",
																	"src": "10583:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10615:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "10615:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10626:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10626:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10611:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10611:3:11"
																				},
																				"nativeSrc": "10611:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10611:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10635:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10635:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "10593:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "10593:17:11"
																		},
																		"nativeSrc": "10593:50:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10593:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10583:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "10583:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10663:118:11",
															"nodeType": "YulBlock",
															"src": "10663:118:11",
															"statements": [
																{
																	"nativeSrc": "10678:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10678:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10692:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10692:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10682:6:11",
																			"nodeType": "YulTypedName",
																			"src": "10682:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10708:63:11",
																	"nodeType": "YulAssignment",
																	"src": "10708:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10743:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "10743:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10754:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10754:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10739:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10739:3:11"
																				},
																				"nativeSrc": "10739:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10739:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10763:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10763:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10718:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "10718:20:11"
																		},
																		"nativeSrc": "10718:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10718:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10708:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "10708:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nativeSrc": "10320:468:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10362:9:11",
														"nodeType": "YulTypedName",
														"src": "10362:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10373:7:11",
														"nodeType": "YulTypedName",
														"src": "10373:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10385:6:11",
														"nodeType": "YulTypedName",
														"src": "10385:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10393:6:11",
														"nodeType": "YulTypedName",
														"src": "10393:6:11",
														"type": ""
													}
												],
												"src": "10320:468:11"
											},
											{
												"body": {
													"nativeSrc": "10859:53:11",
													"nodeType": "YulBlock",
													"src": "10859:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10876:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10876:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10899:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10899:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10881:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "10881:17:11"
																		},
																		"nativeSrc": "10881:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10881:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10869:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10869:6:11"
																},
																"nativeSrc": "10869:37:11",
																"nodeType": "YulFunctionCall",
																"src": "10869:37:11"
															},
															"nativeSrc": "10869:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "10869:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10794:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10847:5:11",
														"nodeType": "YulTypedName",
														"src": "10847:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10854:3:11",
														"nodeType": "YulTypedName",
														"src": "10854:3:11",
														"type": ""
													}
												],
												"src": "10794:118:11"
											},
											{
												"body": {
													"nativeSrc": "11016:124:11",
													"nodeType": "YulBlock",
													"src": "11016:124:11",
													"statements": [
														{
															"nativeSrc": "11026:26:11",
															"nodeType": "YulAssignment",
															"src": "11026:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11038:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11038:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11049:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11049:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11034:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11034:3:11"
																},
																"nativeSrc": "11034:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11034:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11026:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11026:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11106:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11106:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11119:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11119:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11130:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11130:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11115:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11115:3:11"
																		},
																		"nativeSrc": "11115:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11115:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11062:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11062:43:11"
																},
																"nativeSrc": "11062:71:11",
																"nodeType": "YulFunctionCall",
																"src": "11062:71:11"
															},
															"nativeSrc": "11062:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "11062:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10918:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10988:9:11",
														"nodeType": "YulTypedName",
														"src": "10988:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11000:6:11",
														"nodeType": "YulTypedName",
														"src": "11000:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11011:4:11",
														"nodeType": "YulTypedName",
														"src": "11011:4:11",
														"type": ""
													}
												],
												"src": "10918:222:11"
											},
											{
												"body": {
													"nativeSrc": "11246:519:11",
													"nodeType": "YulBlock",
													"src": "11246:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "11292:83:11",
																"nodeType": "YulBlock",
																"src": "11292:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11294:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "11294:77:11"
																			},
																			"nativeSrc": "11294:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11294:79:11"
																		},
																		"nativeSrc": "11294:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11294:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11267:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "11267:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11276:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11276:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11263:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11263:3:11"
																		},
																		"nativeSrc": "11263:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11263:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11288:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11288:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11259:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11259:3:11"
																},
																"nativeSrc": "11259:32:11",
																"nodeType": "YulFunctionCall",
																"src": "11259:32:11"
															},
															"nativeSrc": "11256:119:11",
															"nodeType": "YulIf",
															"src": "11256:119:11"
														},
														{
															"nativeSrc": "11385:117:11",
															"nodeType": "YulBlock",
															"src": "11385:117:11",
															"statements": [
																{
																	"nativeSrc": "11400:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11400:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11414:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11414:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11404:6:11",
																			"nodeType": "YulTypedName",
																			"src": "11404:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11429:63:11",
																	"nodeType": "YulAssignment",
																	"src": "11429:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11464:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "11464:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11475:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "11475:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11460:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11460:3:11"
																				},
																				"nativeSrc": "11460:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11460:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11484:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "11484:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11439:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "11439:20:11"
																		},
																		"nativeSrc": "11439:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11439:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11429:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "11429:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11512:118:11",
															"nodeType": "YulBlock",
															"src": "11512:118:11",
															"statements": [
																{
																	"nativeSrc": "11527:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11527:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11541:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11541:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11531:6:11",
																			"nodeType": "YulTypedName",
																			"src": "11531:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11557:63:11",
																	"nodeType": "YulAssignment",
																	"src": "11557:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11592:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "11592:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11603:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "11603:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11588:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11588:3:11"
																				},
																				"nativeSrc": "11588:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11588:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11612:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "11612:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11567:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "11567:20:11"
																		},
																		"nativeSrc": "11567:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11567:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11557:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "11557:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11640:118:11",
															"nodeType": "YulBlock",
															"src": "11640:118:11",
															"statements": [
																{
																	"nativeSrc": "11655:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11655:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11669:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11669:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11659:6:11",
																			"nodeType": "YulTypedName",
																			"src": "11659:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11685:63:11",
																	"nodeType": "YulAssignment",
																	"src": "11685:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11720:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "11720:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11731:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "11731:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11716:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11716:3:11"
																				},
																				"nativeSrc": "11716:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11716:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11740:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "11740:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11695:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "11695:20:11"
																		},
																		"nativeSrc": "11695:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11695:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11685:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "11685:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address",
												"nativeSrc": "11146:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11200:9:11",
														"nodeType": "YulTypedName",
														"src": "11200:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11211:7:11",
														"nodeType": "YulTypedName",
														"src": "11211:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11223:6:11",
														"nodeType": "YulTypedName",
														"src": "11223:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11231:6:11",
														"nodeType": "YulTypedName",
														"src": "11231:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11239:6:11",
														"nodeType": "YulTypedName",
														"src": "11239:6:11",
														"type": ""
													}
												],
												"src": "11146:619:11"
											},
											{
												"body": {
													"nativeSrc": "11834:260:11",
													"nodeType": "YulBlock",
													"src": "11834:260:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "11880:83:11",
																"nodeType": "YulBlock",
																"src": "11880:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11882:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "11882:77:11"
																			},
																			"nativeSrc": "11882:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11882:79:11"
																		},
																		"nativeSrc": "11882:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11882:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11855:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "11855:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11864:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11864:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11851:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11851:3:11"
																		},
																		"nativeSrc": "11851:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11851:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11876:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11876:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11847:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11847:3:11"
																},
																"nativeSrc": "11847:32:11",
																"nodeType": "YulFunctionCall",
																"src": "11847:32:11"
															},
															"nativeSrc": "11844:119:11",
															"nodeType": "YulIf",
															"src": "11844:119:11"
														},
														{
															"nativeSrc": "11973:114:11",
															"nodeType": "YulBlock",
															"src": "11973:114:11",
															"statements": [
																{
																	"nativeSrc": "11988:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11988:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12002:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12002:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11992:6:11",
																			"nodeType": "YulTypedName",
																			"src": "11992:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12017:60:11",
																	"nodeType": "YulAssignment",
																	"src": "12017:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12049:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "12049:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12060:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "12060:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12045:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "12045:3:11"
																				},
																				"nativeSrc": "12045:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12045:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12069:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "12069:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "12027:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "12027:17:11"
																		},
																		"nativeSrc": "12027:50:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12027:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12017:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "12017:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "11771:323:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11804:9:11",
														"nodeType": "YulTypedName",
														"src": "11804:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11815:7:11",
														"nodeType": "YulTypedName",
														"src": "11815:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11827:6:11",
														"nodeType": "YulTypedName",
														"src": "11827:6:11",
														"type": ""
													}
												],
												"src": "11771:323:11"
											},
											{
												"body": {
													"nativeSrc": "12183:391:11",
													"nodeType": "YulBlock",
													"src": "12183:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "12229:83:11",
																"nodeType": "YulBlock",
																"src": "12229:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12231:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "12231:77:11"
																			},
																			"nativeSrc": "12231:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12231:79:11"
																		},
																		"nativeSrc": "12231:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12231:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12204:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "12204:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12213:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12213:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12200:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12200:3:11"
																		},
																		"nativeSrc": "12200:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12200:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12225:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12225:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12196:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12196:3:11"
																},
																"nativeSrc": "12196:32:11",
																"nodeType": "YulFunctionCall",
																"src": "12196:32:11"
															},
															"nativeSrc": "12193:119:11",
															"nodeType": "YulIf",
															"src": "12193:119:11"
														},
														{
															"nativeSrc": "12322:117:11",
															"nodeType": "YulBlock",
															"src": "12322:117:11",
															"statements": [
																{
																	"nativeSrc": "12337:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12337:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12351:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12351:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12341:6:11",
																			"nodeType": "YulTypedName",
																			"src": "12341:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12366:63:11",
																	"nodeType": "YulAssignment",
																	"src": "12366:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12401:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "12401:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12412:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "12412:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12397:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "12397:3:11"
																				},
																				"nativeSrc": "12397:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12397:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12421:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "12421:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12376:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "12376:20:11"
																		},
																		"nativeSrc": "12376:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12376:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12366:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "12366:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12449:118:11",
															"nodeType": "YulBlock",
															"src": "12449:118:11",
															"statements": [
																{
																	"nativeSrc": "12464:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12464:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12478:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12478:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12468:6:11",
																			"nodeType": "YulTypedName",
																			"src": "12468:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12494:63:11",
																	"nodeType": "YulAssignment",
																	"src": "12494:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12529:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "12529:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12540:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "12540:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12525:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "12525:3:11"
																				},
																				"nativeSrc": "12525:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12525:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12549:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "12549:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12504:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "12504:20:11"
																		},
																		"nativeSrc": "12504:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12504:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12494:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "12494:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12100:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12145:9:11",
														"nodeType": "YulTypedName",
														"src": "12145:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12156:7:11",
														"nodeType": "YulTypedName",
														"src": "12156:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12168:6:11",
														"nodeType": "YulTypedName",
														"src": "12168:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12176:6:11",
														"nodeType": "YulTypedName",
														"src": "12176:6:11",
														"type": ""
													}
												],
												"src": "12100:474:11"
											},
											{
												"body": {
													"nativeSrc": "12714:777:11",
													"nodeType": "YulBlock",
													"src": "12714:777:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "12761:83:11",
																"nodeType": "YulBlock",
																"src": "12761:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12763:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "12763:77:11"
																			},
																			"nativeSrc": "12763:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12763:79:11"
																		},
																		"nativeSrc": "12763:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12763:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12735:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "12735:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12744:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12744:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12731:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12731:3:11"
																		},
																		"nativeSrc": "12731:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12731:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12756:3:11",
																		"nodeType": "YulLiteral",
																		"src": "12756:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12727:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12727:3:11"
																},
																"nativeSrc": "12727:33:11",
																"nodeType": "YulFunctionCall",
																"src": "12727:33:11"
															},
															"nativeSrc": "12724:120:11",
															"nodeType": "YulIf",
															"src": "12724:120:11"
														},
														{
															"nativeSrc": "12854:117:11",
															"nodeType": "YulBlock",
															"src": "12854:117:11",
															"statements": [
																{
																	"nativeSrc": "12869:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12869:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12883:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12883:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12873:6:11",
																			"nodeType": "YulTypedName",
																			"src": "12873:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12898:63:11",
																	"nodeType": "YulAssignment",
																	"src": "12898:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12933:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "12933:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12944:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "12944:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12929:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "12929:3:11"
																				},
																				"nativeSrc": "12929:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12929:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12953:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "12953:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12908:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "12908:20:11"
																		},
																		"nativeSrc": "12908:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12908:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12898:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "12898:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12981:118:11",
															"nodeType": "YulBlock",
															"src": "12981:118:11",
															"statements": [
																{
																	"nativeSrc": "12996:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12996:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13010:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13010:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13000:6:11",
																			"nodeType": "YulTypedName",
																			"src": "13000:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13026:63:11",
																	"nodeType": "YulAssignment",
																	"src": "13026:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13061:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "13061:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13072:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "13072:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13057:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "13057:3:11"
																				},
																				"nativeSrc": "13057:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13057:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13081:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "13081:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13036:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "13036:20:11"
																		},
																		"nativeSrc": "13036:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13036:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13026:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "13026:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13109:118:11",
															"nodeType": "YulBlock",
															"src": "13109:118:11",
															"statements": [
																{
																	"nativeSrc": "13124:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13124:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13138:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13138:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13128:6:11",
																			"nodeType": "YulTypedName",
																			"src": "13128:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13154:63:11",
																	"nodeType": "YulAssignment",
																	"src": "13154:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13189:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "13189:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13200:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "13200:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13185:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "13185:3:11"
																				},
																				"nativeSrc": "13185:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13185:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13209:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "13209:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13164:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "13164:20:11"
																		},
																		"nativeSrc": "13164:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13164:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13154:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "13154:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13237:118:11",
															"nodeType": "YulBlock",
															"src": "13237:118:11",
															"statements": [
																{
																	"nativeSrc": "13252:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13252:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13266:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13266:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13256:6:11",
																			"nodeType": "YulTypedName",
																			"src": "13256:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13282:63:11",
																	"nodeType": "YulAssignment",
																	"src": "13282:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13317:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "13317:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13328:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "13328:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13313:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "13313:3:11"
																				},
																				"nativeSrc": "13313:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13313:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13337:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "13337:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13292:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "13292:20:11"
																		},
																		"nativeSrc": "13292:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13292:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "13282:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "13282:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13365:119:11",
															"nodeType": "YulBlock",
															"src": "13365:119:11",
															"statements": [
																{
																	"nativeSrc": "13380:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13380:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13394:3:11",
																		"nodeType": "YulLiteral",
																		"src": "13394:3:11",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13384:6:11",
																			"nodeType": "YulTypedName",
																			"src": "13384:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13411:63:11",
																	"nodeType": "YulAssignment",
																	"src": "13411:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13446:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "13446:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13457:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "13457:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13442:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "13442:3:11"
																				},
																				"nativeSrc": "13442:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13442:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13466:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "13466:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13421:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "13421:20:11"
																		},
																		"nativeSrc": "13421:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13421:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "13411:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "13411:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "12580:911:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12652:9:11",
														"nodeType": "YulTypedName",
														"src": "12652:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12663:7:11",
														"nodeType": "YulTypedName",
														"src": "12663:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12675:6:11",
														"nodeType": "YulTypedName",
														"src": "12675:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12683:6:11",
														"nodeType": "YulTypedName",
														"src": "12683:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12691:6:11",
														"nodeType": "YulTypedName",
														"src": "12691:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12699:6:11",
														"nodeType": "YulTypedName",
														"src": "12699:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12707:6:11",
														"nodeType": "YulTypedName",
														"src": "12707:6:11",
														"type": ""
													}
												],
												"src": "12580:911:11"
											},
											{
												"body": {
													"nativeSrc": "13651:288:11",
													"nodeType": "YulBlock",
													"src": "13651:288:11",
													"statements": [
														{
															"nativeSrc": "13661:26:11",
															"nodeType": "YulAssignment",
															"src": "13661:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13673:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13673:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13684:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13684:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13669:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13669:3:11"
																},
																"nativeSrc": "13669:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13669:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13661:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13661:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13741:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13754:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13754:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13765:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13765:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13750:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13750:3:11"
																		},
																		"nativeSrc": "13750:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13750:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13697:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13697:43:11"
																},
																"nativeSrc": "13697:71:11",
																"nodeType": "YulFunctionCall",
																"src": "13697:71:11"
															},
															"nativeSrc": "13697:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "13697:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13822:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13822:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13835:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13835:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13846:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13846:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13831:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13831:3:11"
																		},
																		"nativeSrc": "13831:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13831:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13778:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13778:43:11"
																},
																"nativeSrc": "13778:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13778:72:11"
															},
															"nativeSrc": "13778:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13778:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13904:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13904:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13917:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13917:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13928:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13928:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13913:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13913:3:11"
																		},
																		"nativeSrc": "13913:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13913:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13860:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13860:43:11"
																},
																"nativeSrc": "13860:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13860:72:11"
															},
															"nativeSrc": "13860:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13860:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13497:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13607:9:11",
														"nodeType": "YulTypedName",
														"src": "13607:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13619:6:11",
														"nodeType": "YulTypedName",
														"src": "13619:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13627:6:11",
														"nodeType": "YulTypedName",
														"src": "13627:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13635:6:11",
														"nodeType": "YulTypedName",
														"src": "13635:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13646:4:11",
														"nodeType": "YulTypedName",
														"src": "13646:4:11",
														"type": ""
													}
												],
												"src": "13497:442:11"
											},
											{
												"body": {
													"nativeSrc": "13973:152:11",
													"nodeType": "YulBlock",
													"src": "13973:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13990:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13990:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13993:77:11",
																		"nodeType": "YulLiteral",
																		"src": "13993:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13983:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13983:6:11"
																},
																"nativeSrc": "13983:88:11",
																"nodeType": "YulFunctionCall",
																"src": "13983:88:11"
															},
															"nativeSrc": "13983:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "13983:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14087:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14087:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14090:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14090:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14080:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14080:6:11"
																},
																"nativeSrc": "14080:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14080:15:11"
															},
															"nativeSrc": "14080:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14080:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14111:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14111:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14114:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14114:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14104:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14104:6:11"
																},
																"nativeSrc": "14104:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14104:15:11"
															},
															"nativeSrc": "14104:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14104:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13945:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "13945:180:11"
											},
											{
												"body": {
													"nativeSrc": "14182:269:11",
													"nodeType": "YulBlock",
													"src": "14182:269:11",
													"statements": [
														{
															"nativeSrc": "14192:22:11",
															"nodeType": "YulAssignment",
															"src": "14192:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14206:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14206:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14212:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14212:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14202:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14202:3:11"
																},
																"nativeSrc": "14202:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14202:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14192:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14192:6:11"
																}
															]
														},
														{
															"nativeSrc": "14223:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "14223:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14253:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14253:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14259:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14259:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14249:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14249:3:11"
																},
																"nativeSrc": "14249:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14249:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "14227:18:11",
																	"nodeType": "YulTypedName",
																	"src": "14227:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14300:51:11",
																"nodeType": "YulBlock",
																"src": "14300:51:11",
																"statements": [
																	{
																		"nativeSrc": "14314:27:11",
																		"nodeType": "YulAssignment",
																		"src": "14314:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14328:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "14328:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14336:4:11",
																					"nodeType": "YulLiteral",
																					"src": "14336:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14324:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "14324:3:11"
																			},
																			"nativeSrc": "14324:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14324:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14314:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14314:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14280:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "14280:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14273:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14273:6:11"
																},
																"nativeSrc": "14273:26:11",
																"nodeType": "YulFunctionCall",
																"src": "14273:26:11"
															},
															"nativeSrc": "14270:81:11",
															"nodeType": "YulIf",
															"src": "14270:81:11"
														},
														{
															"body": {
																"nativeSrc": "14403:42:11",
																"nodeType": "YulBlock",
																"src": "14403:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14417:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "14417:16:11"
																			},
																			"nativeSrc": "14417:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14417:18:11"
																		},
																		"nativeSrc": "14417:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14417:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14367:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "14367:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14390:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14390:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14398:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14398:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14387:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "14387:2:11"
																		},
																		"nativeSrc": "14387:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14387:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14364:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "14364:2:11"
																},
																"nativeSrc": "14364:38:11",
																"nodeType": "YulFunctionCall",
																"src": "14364:38:11"
															},
															"nativeSrc": "14361:84:11",
															"nodeType": "YulIf",
															"src": "14361:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "14131:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14166:4:11",
														"nodeType": "YulTypedName",
														"src": "14166:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14175:6:11",
														"nodeType": "YulTypedName",
														"src": "14175:6:11",
														"type": ""
													}
												],
												"src": "14131:320:11"
											},
											{
												"body": {
													"nativeSrc": "14563:56:11",
													"nodeType": "YulBlock",
													"src": "14563:56:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14585:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14585:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14593:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14593:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14581:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14581:3:11"
																		},
																		"nativeSrc": "14581:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14581:14:11"
																	},
																	{
																		"hexValue": "496e76616c69642027746f27",
																		"kind": "string",
																		"nativeSrc": "14597:14:11",
																		"nodeType": "YulLiteral",
																		"src": "14597:14:11",
																		"type": "",
																		"value": "Invalid 'to'"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14574:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14574:6:11"
																},
																"nativeSrc": "14574:38:11",
																"nodeType": "YulFunctionCall",
																"src": "14574:38:11"
															},
															"nativeSrc": "14574:38:11",
															"nodeType": "YulExpressionStatement",
															"src": "14574:38:11"
														}
													]
												},
												"name": "store_literal_in_memory_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436",
												"nativeSrc": "14457:162:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14555:6:11",
														"nodeType": "YulTypedName",
														"src": "14555:6:11",
														"type": ""
													}
												],
												"src": "14457:162:11"
											},
											{
												"body": {
													"nativeSrc": "14771:220:11",
													"nodeType": "YulBlock",
													"src": "14771:220:11",
													"statements": [
														{
															"nativeSrc": "14781:74:11",
															"nodeType": "YulAssignment",
															"src": "14781:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14847:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14847:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14852:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14852:2:11",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14788:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "14788:58:11"
																},
																"nativeSrc": "14788:67:11",
																"nodeType": "YulFunctionCall",
																"src": "14788:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14781:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14781:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14953:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14953:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436",
																	"nativeSrc": "14864:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "14864:88:11"
																},
																"nativeSrc": "14864:93:11",
																"nodeType": "YulFunctionCall",
																"src": "14864:93:11"
															},
															"nativeSrc": "14864:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "14864:93:11"
														},
														{
															"nativeSrc": "14966:19:11",
															"nodeType": "YulAssignment",
															"src": "14966:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14977:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14977:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14982:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14982:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14973:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14973:3:11"
																},
																"nativeSrc": "14973:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14973:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14966:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14966:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14625:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14759:3:11",
														"nodeType": "YulTypedName",
														"src": "14759:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14767:3:11",
														"nodeType": "YulTypedName",
														"src": "14767:3:11",
														"type": ""
													}
												],
												"src": "14625:366:11"
											},
											{
												"body": {
													"nativeSrc": "15168:248:11",
													"nodeType": "YulBlock",
													"src": "15168:248:11",
													"statements": [
														{
															"nativeSrc": "15178:26:11",
															"nodeType": "YulAssignment",
															"src": "15178:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15190:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15190:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15201:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15201:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15186:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15186:3:11"
																},
																"nativeSrc": "15186:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15186:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15178:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15178:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15225:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15225:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15236:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15236:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15221:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15221:3:11"
																		},
																		"nativeSrc": "15221:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15221:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15244:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "15244:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15250:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15250:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15240:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15240:3:11"
																		},
																		"nativeSrc": "15240:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15240:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15214:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15214:6:11"
																},
																"nativeSrc": "15214:47:11",
																"nodeType": "YulFunctionCall",
																"src": "15214:47:11"
															},
															"nativeSrc": "15214:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "15214:47:11"
														},
														{
															"nativeSrc": "15270:139:11",
															"nodeType": "YulAssignment",
															"src": "15270:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15404:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15404:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15278:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "15278:124:11"
																},
																"nativeSrc": "15278:131:11",
																"nodeType": "YulFunctionCall",
																"src": "15278:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15270:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15270:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14997:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15148:9:11",
														"nodeType": "YulTypedName",
														"src": "15148:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15163:4:11",
														"nodeType": "YulTypedName",
														"src": "15163:4:11",
														"type": ""
													}
												],
												"src": "14997:419:11"
											},
											{
												"body": {
													"nativeSrc": "15535:34:11",
													"nodeType": "YulBlock",
													"src": "15535:34:11",
													"statements": [
														{
															"nativeSrc": "15545:18:11",
															"nodeType": "YulAssignment",
															"src": "15545:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "15560:3:11",
																"nodeType": "YulIdentifier",
																"src": "15560:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15545:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "15545:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15422:147:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15507:3:11",
														"nodeType": "YulTypedName",
														"src": "15507:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15512:6:11",
														"nodeType": "YulTypedName",
														"src": "15512:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15523:11:11",
														"nodeType": "YulTypedName",
														"src": "15523:11:11",
														"type": ""
													}
												],
												"src": "15422:147:11"
											},
											{
												"body": {
													"nativeSrc": "15681:8:11",
													"nodeType": "YulBlock",
													"src": "15681:8:11",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "15575:114:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15673:6:11",
														"nodeType": "YulTypedName",
														"src": "15673:6:11",
														"type": ""
													}
												],
												"src": "15575:114:11"
											},
											{
												"body": {
													"nativeSrc": "15858:235:11",
													"nodeType": "YulBlock",
													"src": "15858:235:11",
													"statements": [
														{
															"nativeSrc": "15868:90:11",
															"nodeType": "YulAssignment",
															"src": "15868:90:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15951:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15951:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15956:1:11",
																		"nodeType": "YulLiteral",
																		"src": "15956:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15875:75:11",
																	"nodeType": "YulIdentifier",
																	"src": "15875:75:11"
																},
																"nativeSrc": "15875:83:11",
																"nodeType": "YulFunctionCall",
																"src": "15875:83:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15868:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15868:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16056:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16056:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "15967:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "15967:88:11"
																},
																"nativeSrc": "15967:93:11",
																"nodeType": "YulFunctionCall",
																"src": "15967:93:11"
															},
															"nativeSrc": "15967:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "15967:93:11"
														},
														{
															"nativeSrc": "16069:18:11",
															"nodeType": "YulAssignment",
															"src": "16069:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16080:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16080:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16085:1:11",
																		"nodeType": "YulLiteral",
																		"src": "16085:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16076:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16076:3:11"
																},
																"nativeSrc": "16076:11:11",
																"nodeType": "YulFunctionCall",
																"src": "16076:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16069:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16069:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15695:398:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15846:3:11",
														"nodeType": "YulTypedName",
														"src": "15846:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15854:3:11",
														"nodeType": "YulTypedName",
														"src": "15854:3:11",
														"type": ""
													}
												],
												"src": "15695:398:11"
											},
											{
												"body": {
													"nativeSrc": "16287:191:11",
													"nodeType": "YulBlock",
													"src": "16287:191:11",
													"statements": [
														{
															"nativeSrc": "16298:154:11",
															"nodeType": "YulAssignment",
															"src": "16298:154:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16448:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16448:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16305:141:11",
																	"nodeType": "YulIdentifier",
																	"src": "16305:141:11"
																},
																"nativeSrc": "16305:147:11",
																"nodeType": "YulFunctionCall",
																"src": "16305:147:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16298:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16298:3:11"
																}
															]
														},
														{
															"nativeSrc": "16462:10:11",
															"nodeType": "YulAssignment",
															"src": "16462:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "16469:3:11",
																"nodeType": "YulIdentifier",
																"src": "16469:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16462:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16462:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16099:379:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16274:3:11",
														"nodeType": "YulTypedName",
														"src": "16274:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16283:3:11",
														"nodeType": "YulTypedName",
														"src": "16283:3:11",
														"type": ""
													}
												],
												"src": "16099:379:11"
											},
											{
												"body": {
													"nativeSrc": "16590:63:11",
													"nodeType": "YulBlock",
													"src": "16590:63:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16612:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16612:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16620:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16620:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16608:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16608:3:11"
																		},
																		"nativeSrc": "16608:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16608:14:11"
																	},
																	{
																		"hexValue": "455448207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "16624:21:11",
																		"nodeType": "YulLiteral",
																		"src": "16624:21:11",
																		"type": "",
																		"value": "ETH transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16601:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16601:6:11"
																},
																"nativeSrc": "16601:45:11",
																"nodeType": "YulFunctionCall",
																"src": "16601:45:11"
															},
															"nativeSrc": "16601:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "16601:45:11"
														}
													]
												},
												"name": "store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
												"nativeSrc": "16484:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16582:6:11",
														"nodeType": "YulTypedName",
														"src": "16582:6:11",
														"type": ""
													}
												],
												"src": "16484:169:11"
											},
											{
												"body": {
													"nativeSrc": "16805:220:11",
													"nodeType": "YulBlock",
													"src": "16805:220:11",
													"statements": [
														{
															"nativeSrc": "16815:74:11",
															"nodeType": "YulAssignment",
															"src": "16815:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16881:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16881:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16886:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16886:2:11",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16822:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "16822:58:11"
																},
																"nativeSrc": "16822:67:11",
																"nodeType": "YulFunctionCall",
																"src": "16822:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16815:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16815:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16987:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16987:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																	"nativeSrc": "16898:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "16898:88:11"
																},
																"nativeSrc": "16898:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16898:93:11"
															},
															"nativeSrc": "16898:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "16898:93:11"
														},
														{
															"nativeSrc": "17000:19:11",
															"nodeType": "YulAssignment",
															"src": "17000:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17011:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17011:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17016:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17016:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17007:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17007:3:11"
																},
																"nativeSrc": "17007:12:11",
																"nodeType": "YulFunctionCall",
																"src": "17007:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17000:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17000:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16659:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16793:3:11",
														"nodeType": "YulTypedName",
														"src": "16793:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16801:3:11",
														"nodeType": "YulTypedName",
														"src": "16801:3:11",
														"type": ""
													}
												],
												"src": "16659:366:11"
											},
											{
												"body": {
													"nativeSrc": "17202:248:11",
													"nodeType": "YulBlock",
													"src": "17202:248:11",
													"statements": [
														{
															"nativeSrc": "17212:26:11",
															"nodeType": "YulAssignment",
															"src": "17212:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17224:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17224:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17235:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17235:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17220:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17220:3:11"
																},
																"nativeSrc": "17220:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17220:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17212:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17212:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17259:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17259:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17270:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17270:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17255:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17255:3:11"
																		},
																		"nativeSrc": "17255:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17255:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17278:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17278:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17284:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17284:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17274:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17274:3:11"
																		},
																		"nativeSrc": "17274:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17274:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17248:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17248:6:11"
																},
																"nativeSrc": "17248:47:11",
																"nodeType": "YulFunctionCall",
																"src": "17248:47:11"
															},
															"nativeSrc": "17248:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "17248:47:11"
														},
														{
															"nativeSrc": "17304:139:11",
															"nodeType": "YulAssignment",
															"src": "17304:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17438:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17438:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17312:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "17312:124:11"
																},
																"nativeSrc": "17312:131:11",
																"nodeType": "YulFunctionCall",
																"src": "17312:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17304:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17304:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17031:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17182:9:11",
														"nodeType": "YulTypedName",
														"src": "17182:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17197:4:11",
														"nodeType": "YulTypedName",
														"src": "17197:4:11",
														"type": ""
													}
												],
												"src": "17031:419:11"
											},
											{
												"body": {
													"nativeSrc": "17576:200:11",
													"nodeType": "YulBlock",
													"src": "17576:200:11",
													"statements": [
														{
															"nativeSrc": "17586:26:11",
															"nodeType": "YulAssignment",
															"src": "17586:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17598:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17598:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17609:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17609:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17594:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17594:3:11"
																},
																"nativeSrc": "17594:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17594:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17586:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17586:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17660:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17660:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17673:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17673:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17684:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17684:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17669:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17669:3:11"
																		},
																		"nativeSrc": "17669:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17669:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "17622:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "17622:37:11"
																},
																"nativeSrc": "17622:65:11",
																"nodeType": "YulFunctionCall",
																"src": "17622:65:11"
															},
															"nativeSrc": "17622:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "17622:65:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17741:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17754:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17754:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17765:2:11",
																				"nodeType": "YulLiteral",
																				"src": "17765:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17750:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17750:3:11"
																		},
																		"nativeSrc": "17750:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17750:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17697:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "17697:43:11"
																},
																"nativeSrc": "17697:72:11",
																"nodeType": "YulFunctionCall",
																"src": "17697:72:11"
															},
															"nativeSrc": "17697:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "17697:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "17456:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17540:9:11",
														"nodeType": "YulTypedName",
														"src": "17540:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17552:6:11",
														"nodeType": "YulTypedName",
														"src": "17552:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17560:6:11",
														"nodeType": "YulTypedName",
														"src": "17560:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17571:4:11",
														"nodeType": "YulTypedName",
														"src": "17571:4:11",
														"type": ""
													}
												],
												"src": "17456:320:11"
											},
											{
												"body": {
													"nativeSrc": "17908:206:11",
													"nodeType": "YulBlock",
													"src": "17908:206:11",
													"statements": [
														{
															"nativeSrc": "17918:26:11",
															"nodeType": "YulAssignment",
															"src": "17918:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17930:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17930:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17941:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17941:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17926:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17926:3:11"
																},
																"nativeSrc": "17926:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17926:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17918:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17918:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17998:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17998:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18011:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18011:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18022:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18022:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18007:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18007:3:11"
																		},
																		"nativeSrc": "18007:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18007:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17954:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "17954:43:11"
																},
																"nativeSrc": "17954:71:11",
																"nodeType": "YulFunctionCall",
																"src": "17954:71:11"
															},
															"nativeSrc": "17954:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "17954:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18079:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18079:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18092:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18092:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18103:2:11",
																				"nodeType": "YulLiteral",
																				"src": "18103:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18088:3:11"
																		},
																		"nativeSrc": "18088:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18088:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18035:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "18035:43:11"
																},
																"nativeSrc": "18035:72:11",
																"nodeType": "YulFunctionCall",
																"src": "18035:72:11"
															},
															"nativeSrc": "18035:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "18035:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17782:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17872:9:11",
														"nodeType": "YulTypedName",
														"src": "17872:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17884:6:11",
														"nodeType": "YulTypedName",
														"src": "17884:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17892:6:11",
														"nodeType": "YulTypedName",
														"src": "17892:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17903:4:11",
														"nodeType": "YulTypedName",
														"src": "17903:4:11",
														"type": ""
													}
												],
												"src": "17782:332:11"
											},
											{
												"body": {
													"nativeSrc": "18180:77:11",
													"nodeType": "YulBlock",
													"src": "18180:77:11",
													"statements": [
														{
															"nativeSrc": "18190:22:11",
															"nodeType": "YulAssignment",
															"src": "18190:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18205:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18205:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18199:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "18199:5:11"
																},
																"nativeSrc": "18199:13:11",
																"nodeType": "YulFunctionCall",
																"src": "18199:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18190:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "18190:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18245:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "18245:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "18221:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "18221:23:11"
																},
																"nativeSrc": "18221:30:11",
																"nodeType": "YulFunctionCall",
																"src": "18221:30:11"
															},
															"nativeSrc": "18221:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "18221:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "18120:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18158:6:11",
														"nodeType": "YulTypedName",
														"src": "18158:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18166:3:11",
														"nodeType": "YulTypedName",
														"src": "18166:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18174:5:11",
														"nodeType": "YulTypedName",
														"src": "18174:5:11",
														"type": ""
													}
												],
												"src": "18120:137:11"
											},
											{
												"body": {
													"nativeSrc": "18337:271:11",
													"nodeType": "YulBlock",
													"src": "18337:271:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "18383:83:11",
																"nodeType": "YulBlock",
																"src": "18383:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18385:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "18385:77:11"
																			},
																			"nativeSrc": "18385:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "18385:79:11"
																		},
																		"nativeSrc": "18385:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "18385:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18358:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "18358:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18367:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18367:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18354:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18354:3:11"
																		},
																		"nativeSrc": "18354:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18354:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18379:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18379:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18350:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18350:3:11"
																},
																"nativeSrc": "18350:32:11",
																"nodeType": "YulFunctionCall",
																"src": "18350:32:11"
															},
															"nativeSrc": "18347:119:11",
															"nodeType": "YulIf",
															"src": "18347:119:11"
														},
														{
															"nativeSrc": "18476:125:11",
															"nodeType": "YulBlock",
															"src": "18476:125:11",
															"statements": [
																{
																	"nativeSrc": "18491:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18491:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18505:1:11",
																		"nodeType": "YulLiteral",
																		"src": "18505:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18495:6:11",
																			"nodeType": "YulTypedName",
																			"src": "18495:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18520:71:11",
																	"nodeType": "YulAssignment",
																	"src": "18520:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18563:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "18563:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18574:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "18574:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18559:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "18559:3:11"
																				},
																				"nativeSrc": "18559:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "18559:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18583:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "18583:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "18530:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "18530:28:11"
																		},
																		"nativeSrc": "18530:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18530:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18520:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "18520:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "18263:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18307:9:11",
														"nodeType": "YulTypedName",
														"src": "18307:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18318:7:11",
														"nodeType": "YulTypedName",
														"src": "18318:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18330:6:11",
														"nodeType": "YulTypedName",
														"src": "18330:6:11",
														"type": ""
													}
												],
												"src": "18263:345:11"
											},
											{
												"body": {
													"nativeSrc": "18852:537:11",
													"nodeType": "YulBlock",
													"src": "18852:537:11",
													"statements": [
														{
															"nativeSrc": "18862:27:11",
															"nodeType": "YulAssignment",
															"src": "18862:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18874:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18874:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18885:3:11",
																		"nodeType": "YulLiteral",
																		"src": "18885:3:11",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18870:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18870:3:11"
																},
																"nativeSrc": "18870:19:11",
																"nodeType": "YulFunctionCall",
																"src": "18870:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18862:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18862:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18943:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18943:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18956:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18956:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18967:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18967:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18952:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18952:3:11"
																		},
																		"nativeSrc": "18952:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18952:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18899:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "18899:43:11"
																},
																"nativeSrc": "18899:71:11",
																"nodeType": "YulFunctionCall",
																"src": "18899:71:11"
															},
															"nativeSrc": "18899:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "18899:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19024:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19024:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19037:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19037:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19048:2:11",
																				"nodeType": "YulLiteral",
																				"src": "19048:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19033:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19033:3:11"
																		},
																		"nativeSrc": "19033:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19033:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18980:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "18980:43:11"
																},
																"nativeSrc": "18980:72:11",
																"nodeType": "YulFunctionCall",
																"src": "18980:72:11"
															},
															"nativeSrc": "18980:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "18980:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19106:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19106:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19119:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19119:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19130:2:11",
																				"nodeType": "YulLiteral",
																				"src": "19130:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19115:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19115:3:11"
																		},
																		"nativeSrc": "19115:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19115:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19062:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19062:43:11"
																},
																"nativeSrc": "19062:72:11",
																"nodeType": "YulFunctionCall",
																"src": "19062:72:11"
															},
															"nativeSrc": "19062:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "19062:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19188:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19188:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19201:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19201:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19212:2:11",
																				"nodeType": "YulLiteral",
																				"src": "19212:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19197:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19197:3:11"
																		},
																		"nativeSrc": "19197:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19197:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19144:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19144:43:11"
																},
																"nativeSrc": "19144:72:11",
																"nodeType": "YulFunctionCall",
																"src": "19144:72:11"
															},
															"nativeSrc": "19144:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "19144:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "19270:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19270:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19283:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19283:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19294:3:11",
																				"nodeType": "YulLiteral",
																				"src": "19294:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19279:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19279:3:11"
																		},
																		"nativeSrc": "19279:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19279:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19226:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19226:43:11"
																},
																"nativeSrc": "19226:73:11",
																"nodeType": "YulFunctionCall",
																"src": "19226:73:11"
															},
															"nativeSrc": "19226:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "19226:73:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "19353:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19353:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19366:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19366:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19377:3:11",
																				"nodeType": "YulLiteral",
																				"src": "19377:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19362:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19362:3:11"
																		},
																		"nativeSrc": "19362:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19362:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19309:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19309:43:11"
																},
																"nativeSrc": "19309:73:11",
																"nodeType": "YulFunctionCall",
																"src": "19309:73:11"
															},
															"nativeSrc": "19309:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "19309:73:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18614:775:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18784:9:11",
														"nodeType": "YulTypedName",
														"src": "18784:9:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "18796:6:11",
														"nodeType": "YulTypedName",
														"src": "18796:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "18804:6:11",
														"nodeType": "YulTypedName",
														"src": "18804:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18812:6:11",
														"nodeType": "YulTypedName",
														"src": "18812:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18820:6:11",
														"nodeType": "YulTypedName",
														"src": "18820:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18828:6:11",
														"nodeType": "YulTypedName",
														"src": "18828:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18836:6:11",
														"nodeType": "YulTypedName",
														"src": "18836:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18847:4:11",
														"nodeType": "YulTypedName",
														"src": "18847:4:11",
														"type": ""
													}
												],
												"src": "18614:775:11"
											},
											{
												"body": {
													"nativeSrc": "19458:80:11",
													"nodeType": "YulBlock",
													"src": "19458:80:11",
													"statements": [
														{
															"nativeSrc": "19468:22:11",
															"nodeType": "YulAssignment",
															"src": "19468:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19483:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19483:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19477:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "19477:5:11"
																},
																"nativeSrc": "19477:13:11",
																"nodeType": "YulFunctionCall",
																"src": "19477:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19468:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "19468:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19526:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "19526:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "19499:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "19499:26:11"
																},
																"nativeSrc": "19499:33:11",
																"nodeType": "YulFunctionCall",
																"src": "19499:33:11"
															},
															"nativeSrc": "19499:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "19499:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "19395:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19436:6:11",
														"nodeType": "YulTypedName",
														"src": "19436:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19444:3:11",
														"nodeType": "YulTypedName",
														"src": "19444:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19452:5:11",
														"nodeType": "YulTypedName",
														"src": "19452:5:11",
														"type": ""
													}
												],
												"src": "19395:143:11"
											},
											{
												"body": {
													"nativeSrc": "19655:552:11",
													"nodeType": "YulBlock",
													"src": "19655:552:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "19701:83:11",
																"nodeType": "YulBlock",
																"src": "19701:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19703:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "19703:77:11"
																			},
																			"nativeSrc": "19703:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "19703:79:11"
																		},
																		"nativeSrc": "19703:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "19703:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19676:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "19676:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19685:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19685:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19672:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19672:3:11"
																		},
																		"nativeSrc": "19672:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19672:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19697:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19697:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19668:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19668:3:11"
																},
																"nativeSrc": "19668:32:11",
																"nodeType": "YulFunctionCall",
																"src": "19668:32:11"
															},
															"nativeSrc": "19665:119:11",
															"nodeType": "YulIf",
															"src": "19665:119:11"
														},
														{
															"nativeSrc": "19794:128:11",
															"nodeType": "YulBlock",
															"src": "19794:128:11",
															"statements": [
																{
																	"nativeSrc": "19809:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19809:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19823:1:11",
																		"nodeType": "YulLiteral",
																		"src": "19823:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19813:6:11",
																			"nodeType": "YulTypedName",
																			"src": "19813:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19838:74:11",
																	"nodeType": "YulAssignment",
																	"src": "19838:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19884:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "19884:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19895:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "19895:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19880:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "19880:3:11"
																				},
																				"nativeSrc": "19880:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "19880:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19904:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "19904:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "19848:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "19848:31:11"
																		},
																		"nativeSrc": "19848:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19848:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19838:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "19838:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19932:129:11",
															"nodeType": "YulBlock",
															"src": "19932:129:11",
															"statements": [
																{
																	"nativeSrc": "19947:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19947:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19961:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19961:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19951:6:11",
																			"nodeType": "YulTypedName",
																			"src": "19951:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19977:74:11",
																	"nodeType": "YulAssignment",
																	"src": "19977:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20023:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "20023:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20034:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "20034:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20019:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "20019:3:11"
																				},
																				"nativeSrc": "20019:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "20019:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20043:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "20043:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "19987:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "19987:31:11"
																		},
																		"nativeSrc": "19987:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19987:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "19977:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "19977:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20071:129:11",
															"nodeType": "YulBlock",
															"src": "20071:129:11",
															"statements": [
																{
																	"nativeSrc": "20086:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20086:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20100:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20100:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20090:6:11",
																			"nodeType": "YulTypedName",
																			"src": "20090:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20116:74:11",
																	"nodeType": "YulAssignment",
																	"src": "20116:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20162:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "20162:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20173:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "20173:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20158:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "20158:3:11"
																				},
																				"nativeSrc": "20158:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "20158:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20182:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "20182:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "20126:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "20126:31:11"
																		},
																		"nativeSrc": "20126:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20126:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "20116:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "20116:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "19544:663:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19609:9:11",
														"nodeType": "YulTypedName",
														"src": "19609:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19620:7:11",
														"nodeType": "YulTypedName",
														"src": "19620:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19632:6:11",
														"nodeType": "YulTypedName",
														"src": "19632:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19640:6:11",
														"nodeType": "YulTypedName",
														"src": "19640:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19648:6:11",
														"nodeType": "YulTypedName",
														"src": "19648:6:11",
														"type": ""
													}
												],
												"src": "19544:663:11"
											},
											{
												"body": {
													"nativeSrc": "20367:288:11",
													"nodeType": "YulBlock",
													"src": "20367:288:11",
													"statements": [
														{
															"nativeSrc": "20377:26:11",
															"nodeType": "YulAssignment",
															"src": "20377:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20389:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "20389:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20400:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20400:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20385:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20385:3:11"
																},
																"nativeSrc": "20385:18:11",
																"nodeType": "YulFunctionCall",
																"src": "20385:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20377:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20377:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20457:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20457:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20470:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20470:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20481:1:11",
																				"nodeType": "YulLiteral",
																				"src": "20481:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20466:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20466:3:11"
																		},
																		"nativeSrc": "20466:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20466:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20413:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "20413:43:11"
																},
																"nativeSrc": "20413:71:11",
																"nodeType": "YulFunctionCall",
																"src": "20413:71:11"
															},
															"nativeSrc": "20413:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "20413:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20538:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20538:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20551:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20551:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20562:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20562:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20547:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20547:3:11"
																		},
																		"nativeSrc": "20547:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20547:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20494:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "20494:43:11"
																},
																"nativeSrc": "20494:72:11",
																"nodeType": "YulFunctionCall",
																"src": "20494:72:11"
															},
															"nativeSrc": "20494:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "20494:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20620:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20620:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20633:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20633:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20644:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20644:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20629:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20629:3:11"
																		},
																		"nativeSrc": "20629:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20629:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20576:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "20576:43:11"
																},
																"nativeSrc": "20576:72:11",
																"nodeType": "YulFunctionCall",
																"src": "20576:72:11"
															},
															"nativeSrc": "20576:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "20576:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20213:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20323:9:11",
														"nodeType": "YulTypedName",
														"src": "20323:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20335:6:11",
														"nodeType": "YulTypedName",
														"src": "20335:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20343:6:11",
														"nodeType": "YulTypedName",
														"src": "20343:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20351:6:11",
														"nodeType": "YulTypedName",
														"src": "20351:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20362:4:11",
														"nodeType": "YulTypedName",
														"src": "20362:4:11",
														"type": ""
													}
												],
												"src": "20213:442:11"
											},
											{
												"body": {
													"nativeSrc": "20767:75:11",
													"nodeType": "YulBlock",
													"src": "20767:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20789:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "20789:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20797:1:11",
																				"nodeType": "YulLiteral",
																				"src": "20797:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20785:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20785:3:11"
																		},
																		"nativeSrc": "20785:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20785:14:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "20801:33:11",
																		"nodeType": "YulLiteral",
																		"src": "20801:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20778:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20778:6:11"
																},
																"nativeSrc": "20778:57:11",
																"nodeType": "YulFunctionCall",
																"src": "20778:57:11"
															},
															"nativeSrc": "20778:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "20778:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "20661:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20759:6:11",
														"nodeType": "YulTypedName",
														"src": "20759:6:11",
														"type": ""
													}
												],
												"src": "20661:181:11"
											},
											{
												"body": {
													"nativeSrc": "20994:220:11",
													"nodeType": "YulBlock",
													"src": "20994:220:11",
													"statements": [
														{
															"nativeSrc": "21004:74:11",
															"nodeType": "YulAssignment",
															"src": "21004:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21070:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "21070:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21075:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21075:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21011:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "21011:58:11"
																},
																"nativeSrc": "21011:67:11",
																"nodeType": "YulFunctionCall",
																"src": "21011:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21004:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21004:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21176:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "21176:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "21087:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "21087:88:11"
																},
																"nativeSrc": "21087:93:11",
																"nodeType": "YulFunctionCall",
																"src": "21087:93:11"
															},
															"nativeSrc": "21087:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "21087:93:11"
														},
														{
															"nativeSrc": "21189:19:11",
															"nodeType": "YulAssignment",
															"src": "21189:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21200:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "21200:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21205:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21205:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21196:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21196:3:11"
																},
																"nativeSrc": "21196:12:11",
																"nodeType": "YulFunctionCall",
																"src": "21196:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21189:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21189:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20848:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20982:3:11",
														"nodeType": "YulTypedName",
														"src": "20982:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20990:3:11",
														"nodeType": "YulTypedName",
														"src": "20990:3:11",
														"type": ""
													}
												],
												"src": "20848:366:11"
											},
											{
												"body": {
													"nativeSrc": "21391:248:11",
													"nodeType": "YulBlock",
													"src": "21391:248:11",
													"statements": [
														{
															"nativeSrc": "21401:26:11",
															"nodeType": "YulAssignment",
															"src": "21401:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21413:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "21413:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21424:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21424:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21409:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21409:3:11"
																},
																"nativeSrc": "21409:18:11",
																"nodeType": "YulFunctionCall",
																"src": "21409:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21401:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21401:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21448:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21448:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21459:1:11",
																				"nodeType": "YulLiteral",
																				"src": "21459:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21444:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21444:3:11"
																		},
																		"nativeSrc": "21444:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21444:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21467:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "21467:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21473:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21473:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21463:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21463:3:11"
																		},
																		"nativeSrc": "21463:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21463:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21437:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21437:6:11"
																},
																"nativeSrc": "21437:47:11",
																"nodeType": "YulFunctionCall",
																"src": "21437:47:11"
															},
															"nativeSrc": "21437:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "21437:47:11"
														},
														{
															"nativeSrc": "21493:139:11",
															"nodeType": "YulAssignment",
															"src": "21493:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21627:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "21627:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21501:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "21501:124:11"
																},
																"nativeSrc": "21501:131:11",
																"nodeType": "YulFunctionCall",
																"src": "21501:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21493:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21493:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21220:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21371:9:11",
														"nodeType": "YulTypedName",
														"src": "21371:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21386:4:11",
														"nodeType": "YulTypedName",
														"src": "21386:4:11",
														"type": ""
													}
												],
												"src": "21220:419:11"
											},
											{
												"body": {
													"nativeSrc": "21771:206:11",
													"nodeType": "YulBlock",
													"src": "21771:206:11",
													"statements": [
														{
															"nativeSrc": "21781:26:11",
															"nodeType": "YulAssignment",
															"src": "21781:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21793:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "21793:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21804:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21804:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21789:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21789:3:11"
																},
																"nativeSrc": "21789:18:11",
																"nodeType": "YulFunctionCall",
																"src": "21789:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21781:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21781:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21861:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21861:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21874:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21874:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21885:1:11",
																				"nodeType": "YulLiteral",
																				"src": "21885:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21870:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21870:3:11"
																		},
																		"nativeSrc": "21870:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21870:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21817:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21817:43:11"
																},
																"nativeSrc": "21817:71:11",
																"nodeType": "YulFunctionCall",
																"src": "21817:71:11"
															},
															"nativeSrc": "21817:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "21817:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21942:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21942:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21955:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21955:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21966:2:11",
																				"nodeType": "YulLiteral",
																				"src": "21966:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21951:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21951:3:11"
																		},
																		"nativeSrc": "21951:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21951:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "21898:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21898:43:11"
																},
																"nativeSrc": "21898:72:11",
																"nodeType": "YulFunctionCall",
																"src": "21898:72:11"
															},
															"nativeSrc": "21898:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "21898:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "21645:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21735:9:11",
														"nodeType": "YulTypedName",
														"src": "21735:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21747:6:11",
														"nodeType": "YulTypedName",
														"src": "21747:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21755:6:11",
														"nodeType": "YulTypedName",
														"src": "21755:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21766:4:11",
														"nodeType": "YulTypedName",
														"src": "21766:4:11",
														"type": ""
													}
												],
												"src": "21645:332:11"
											},
											{
												"body": {
													"nativeSrc": "22011:152:11",
													"nodeType": "YulBlock",
													"src": "22011:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22028:1:11",
																		"nodeType": "YulLiteral",
																		"src": "22028:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22031:77:11",
																		"nodeType": "YulLiteral",
																		"src": "22031:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22021:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22021:6:11"
																},
																"nativeSrc": "22021:88:11",
																"nodeType": "YulFunctionCall",
																"src": "22021:88:11"
															},
															"nativeSrc": "22021:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "22021:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22125:1:11",
																		"nodeType": "YulLiteral",
																		"src": "22125:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22128:4:11",
																		"nodeType": "YulLiteral",
																		"src": "22128:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22118:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22118:6:11"
																},
																"nativeSrc": "22118:15:11",
																"nodeType": "YulFunctionCall",
																"src": "22118:15:11"
															},
															"nativeSrc": "22118:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "22118:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22149:1:11",
																		"nodeType": "YulLiteral",
																		"src": "22149:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22152:4:11",
																		"nodeType": "YulLiteral",
																		"src": "22152:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22142:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22142:6:11"
																},
																"nativeSrc": "22142:15:11",
																"nodeType": "YulFunctionCall",
																"src": "22142:15:11"
															},
															"nativeSrc": "22142:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "22142:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "21983:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "21983:180:11"
											},
											{
												"body": {
													"nativeSrc": "22213:147:11",
													"nodeType": "YulBlock",
													"src": "22213:147:11",
													"statements": [
														{
															"nativeSrc": "22223:25:11",
															"nodeType": "YulAssignment",
															"src": "22223:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22246:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22246:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22228:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "22228:17:11"
																},
																"nativeSrc": "22228:20:11",
																"nodeType": "YulFunctionCall",
																"src": "22228:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22223:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "22223:1:11"
																}
															]
														},
														{
															"nativeSrc": "22257:25:11",
															"nodeType": "YulAssignment",
															"src": "22257:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22280:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22280:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22262:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "22262:17:11"
																},
																"nativeSrc": "22262:20:11",
																"nodeType": "YulFunctionCall",
																"src": "22262:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22257:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "22257:1:11"
																}
															]
														},
														{
															"nativeSrc": "22291:16:11",
															"nodeType": "YulAssignment",
															"src": "22291:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22302:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22302:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22305:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22305:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22298:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22298:3:11"
																},
																"nativeSrc": "22298:9:11",
																"nodeType": "YulFunctionCall",
																"src": "22298:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "22291:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22291:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22331:22:11",
																"nodeType": "YulBlock",
																"src": "22331:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22333:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "22333:16:11"
																			},
																			"nativeSrc": "22333:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "22333:18:11"
																		},
																		"nativeSrc": "22333:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "22333:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22323:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22323:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "22326:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "22326:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22320:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "22320:2:11"
																},
																"nativeSrc": "22320:10:11",
																"nodeType": "YulFunctionCall",
																"src": "22320:10:11"
															},
															"nativeSrc": "22317:36:11",
															"nodeType": "YulIf",
															"src": "22317:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "22169:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22200:1:11",
														"nodeType": "YulTypedName",
														"src": "22200:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22203:1:11",
														"nodeType": "YulTypedName",
														"src": "22203:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "22209:3:11",
														"nodeType": "YulTypedName",
														"src": "22209:3:11",
														"type": ""
													}
												],
												"src": "22169:191:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$1314_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$1314_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$1314_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1314__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router02_$1314_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid 'to'\")\n\n    }\n\n    function abi_encode_t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x254 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0xB319C6B7 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x8C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x8EB JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x927 JUMPI DUP1 PUSH4 0xF68DED66 EQ PUSH2 0x94F JUMPI DUP1 PUSH4 0xF6F1E306 EQ PUSH2 0x979 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x9AB JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0xB319C6B7 EQ PUSH2 0x7F5 JUMPI DUP1 PUSH4 0xB37FD190 EQ PUSH2 0x81F JUMPI DUP1 PUSH4 0xC2E5EC04 EQ PUSH2 0x847 JUMPI DUP1 PUSH4 0xD00EFB2F EQ PUSH2 0x86F JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x899 JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x711 JUMPI DUP1 PUSH4 0x963472F9 EQ PUSH2 0x73B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x765 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x78F JUMPI DUP1 PUSH4 0xA985CEEF EQ PUSH2 0x7CB JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0x89900603 EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x6AB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x6D5 JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x2BE29FA8 GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x4551BBE9 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x48FCA59D EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x5F3 JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x2BE29FA8 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x4ED JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x1694505E GT PUSH2 0x218 JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x41D JUMPI PUSH2 0x25B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x99A04E5 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x329 JUMPI PUSH2 0x25B JUMP JUMPDEST CALLDATASIZE PUSH2 0x25B JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x2291 JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x365 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x236B JUMP JUMPDEST PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x428 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x431 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x45B PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0xDCC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4D7 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x53B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x548 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x24B3 JUMP JUMPDEST PUSH2 0xEBA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x570 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x58B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x598 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH2 0xF0E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5DD PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x607 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x643 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63E SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x650 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x66D PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH2 0x1037 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6BF PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x725 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x746 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x74F PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75C SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x770 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x779 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x786 SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7DF PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x800 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x809 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x816 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x845 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x840 SWAP2 SWAP1 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x852 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x86D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x868 SWAP2 SWAP1 PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x1325 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x883 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x890 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x8AD PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x8E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0x13F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x911 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x90C SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x932 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x94D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x24B3 JUMP JUMPDEST PUSH2 0x1497 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x963 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x970 SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x993 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98E SWAP2 SWAP1 PUSH2 0x2628 JUMP JUMPDEST PUSH2 0x151B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x269F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA59 JUMPI POP PUSH2 0xA58 DUP3 PUSH2 0x165F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA6F SWAP1 PUSH2 0x2701 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA9B SWAP1 PUSH2 0x2701 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAE6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAC9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAFA PUSH2 0x16C8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB07 DUP2 DUP6 DUP6 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xB3C DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA1 SWAP1 PUSH2 0x277B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xBCF SWAP1 PUSH2 0x27C6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC49 SWAP1 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xC82 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD1C SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD61 PUSH2 0x16C8 JUMP JUMPDEST SWAP1 POP PUSH2 0xD6E DUP6 DUP3 DUP6 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0xD79 DUP6 DUP6 DUP6 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDD5 DUP3 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xDDE DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xDE8 DUP4 DUP4 PUSH2 0x1878 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH12 0x409F9CBC7C4A04C220000000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE0E PUSH2 0x16C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7C DUP3 DUP3 PUSH2 0x1962 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xEAB DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xEB5 DUP4 DUP4 PUSH2 0x1A4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0xEE4 DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xEF5 PUSH2 0xEEF PUSH2 0x16C8 JUMP JUMPDEST DUP4 PUSH2 0x1ACB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0xF38 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP3 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xF DUP2 SWAP1 SSTORE POP PUSH32 0x3DD49C7BC5B4083D3ED5845BD08D8D308E600CE46A1BF5FED3466DBA31CE9F0C DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF89 SWAP3 SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x1061 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP3 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0xB31B570D042C886827A2637126EDD8FF4F4FE90BEB7CB87FFE8C4D2D542C190D DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10B2 SWAP3 SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1138 SWAP1 PUSH2 0x2701 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1164 SWAP1 PUSH2 0x2701 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1186 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1192 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x11DB PUSH2 0x16C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x11E8 DUP2 DUP6 DUP6 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x1235 DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129A SWAP1 PUSH2 0x277B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DE SWAP3 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131E SWAP2 SWAP1 PUSH2 0x28A4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x134F DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP1 ISZERO PUSH2 0x1381 JUMPI POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x138E JUMPI NUMBER PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0xBEDA7DCA7BC1B3E80B871F4818129EC73B771581F803D553AEB3484098E5F65A DUP3 PUSH1 0x40 MLOAD PUSH2 0x13BD SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x13FC DUP3 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x1405 DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x140F DUP4 DUP4 PUSH2 0x1962 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x14C1 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0x947F344D56E1E8C70DC492FB94C4DDDDD490C016AAB685F5E7E47B2E85CB44CF DUP3 PUSH1 0x40 MLOAD PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH20 0x633EA8FE424CD65AD4D4826E6581273AFD06B8EF DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x1526 PUSH2 0x1B4A JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x1550 DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x157C ADDRESS PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 CALLVALUE ADDRESS DUP12 DUP12 DUP12 DUP16 DUP13 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E1 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15FD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP DUP3 SWAP7 POP POP POP POP POP PUSH2 0x1637 PUSH2 0x1B99 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16DC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1BA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16F2 DUP2 PUSH2 0x16ED PUSH2 0x16C8 JUMP JUMPDEST PUSH2 0x1D72 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1700 DUP5 DUP5 PUSH2 0x1415 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1782 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1773 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1781 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1BA3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17F8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EF SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1868 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185F SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1873 DUP4 DUP4 DUP4 PUSH2 0x1DC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1883 DUP4 DUP4 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1958 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x18F5 PUSH2 0x16C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x195C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x196D DUP4 DUP4 PUSH2 0x10C5 JUMP JUMPDEST ISZERO PUSH2 0x1A42 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x19DF PUSH2 0x16C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1A46 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ABC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB3 SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AC7 PUSH0 DUP4 DUP4 PUSH2 0x1DC3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B3B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B32 SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B46 DUP3 PUSH0 DUP4 PUSH2 0x1DC3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1B8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B86 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C13 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0A SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C83 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C7A SWAP2 SWAP1 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D6C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D63 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D7C DUP3 DUP3 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1DBF JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB6 SWAP3 SWAP2 SWAP1 PUSH2 0x2A2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E13 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E07 SWAP2 SWAP1 PUSH2 0x2A83 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EE1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1E9C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E93 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F28 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F72 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1FCF SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2014 DUP2 PUSH2 0x1FE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x201E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x202F DUP2 PUSH2 0x200B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204A JUMPI PUSH2 0x2049 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2057 DUP5 DUP3 DUP6 ADD PUSH2 0x2021 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2074 DUP2 PUSH2 0x2060 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x208D PUSH0 DUP4 ADD DUP5 PUSH2 0x206B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20D5 DUP3 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x20DF DUP2 DUP6 PUSH2 0x209D JUMP JUMPDEST SWAP4 POP PUSH2 0x20EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x20F8 DUP2 PUSH2 0x20BB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x211B DUP2 DUP5 PUSH2 0x20CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x214C DUP3 PUSH2 0x2123 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215C DUP2 PUSH2 0x2142 JUMP JUMPDEST DUP2 EQ PUSH2 0x2166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2177 DUP2 PUSH2 0x2153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218F DUP2 PUSH2 0x217D JUMP JUMPDEST DUP2 EQ PUSH2 0x2199 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21AA DUP2 PUSH2 0x2186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21C6 JUMPI PUSH2 0x21C5 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21D3 DUP6 DUP3 DUP7 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21E4 DUP6 DUP3 DUP7 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21F8 DUP3 PUSH2 0x2123 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2208 DUP2 PUSH2 0x21EE JUMP JUMPDEST DUP2 EQ PUSH2 0x2212 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2223 DUP2 PUSH2 0x21FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x223F JUMPI PUSH2 0x223E PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x224C DUP6 DUP3 DUP7 ADD PUSH2 0x2215 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x225D DUP6 DUP3 DUP7 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2270 DUP2 PUSH2 0x2060 JUMP JUMPDEST DUP2 EQ PUSH2 0x227A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228B DUP2 PUSH2 0x2267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22A7 JUMPI PUSH2 0x22A6 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22B4 DUP6 DUP3 DUP7 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22C5 DUP6 DUP3 DUP7 ADD PUSH2 0x227D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22F2 PUSH2 0x22ED PUSH2 0x22E8 DUP5 PUSH2 0x2123 JUMP JUMPDEST PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x2123 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2303 DUP3 PUSH2 0x22D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2314 DUP3 PUSH2 0x22F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2324 DUP2 PUSH2 0x230A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x233D PUSH0 DUP4 ADD DUP5 PUSH2 0x231B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x234C DUP2 PUSH2 0x217D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2365 PUSH0 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2382 JUMPI PUSH2 0x2381 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x238F DUP7 DUP3 DUP8 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x23A0 DUP7 DUP3 DUP8 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23B1 DUP7 DUP3 DUP8 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23CD DUP2 PUSH2 0x23BB JUMP JUMPDEST DUP2 EQ PUSH2 0x23D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23E8 DUP2 PUSH2 0x23C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2403 JUMPI PUSH2 0x2402 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2410 DUP5 DUP3 DUP6 ADD PUSH2 0x23DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2422 DUP2 PUSH2 0x23BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x243B PUSH0 DUP4 ADD DUP5 PUSH2 0x2419 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2464 DUP6 DUP3 DUP7 ADD PUSH2 0x23DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2475 DUP6 DUP3 DUP7 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2494 DUP2 PUSH2 0x247F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24AD PUSH0 DUP4 ADD DUP5 PUSH2 0x248B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C8 JUMPI PUSH2 0x24C7 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24D5 DUP5 DUP3 DUP6 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F3 JUMPI PUSH2 0x24F2 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2500 DUP5 DUP3 DUP6 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x251F JUMPI PUSH2 0x251E PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252C DUP6 DUP3 DUP7 ADD PUSH2 0x227D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x253D DUP6 DUP3 DUP7 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2550 DUP2 PUSH2 0x2142 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2569 PUSH0 DUP4 ADD DUP5 PUSH2 0x2547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2586 JUMPI PUSH2 0x2585 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2593 DUP7 DUP3 DUP8 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25A4 DUP7 DUP3 DUP8 ADD PUSH2 0x219C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x25B5 DUP7 DUP3 DUP8 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25D4 JUMPI PUSH2 0x25D3 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25E1 DUP5 DUP3 DUP6 ADD PUSH2 0x227D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2600 JUMPI PUSH2 0x25FF PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x260D DUP6 DUP3 DUP7 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x261E DUP6 DUP3 DUP7 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2641 JUMPI PUSH2 0x2640 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x264E DUP9 DUP3 DUP10 ADD PUSH2 0x2169 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x265F DUP9 DUP3 DUP10 ADD PUSH2 0x219C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2670 DUP9 DUP3 DUP10 ADD PUSH2 0x219C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2681 DUP9 DUP3 DUP10 ADD PUSH2 0x219C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2692 DUP9 DUP3 DUP10 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26B2 PUSH0 DUP4 ADD DUP7 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x26BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x26CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2718 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x272B JUMPI PUSH2 0x272A PUSH2 0x26D4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642027746F270000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2765 PUSH1 0xC DUP4 PUSH2 0x209D JUMP JUMPDEST SWAP2 POP PUSH2 0x2770 DUP3 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2792 DUP2 PUSH2 0x2759 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x27B1 PUSH0 DUP4 PUSH2 0x2799 JUMP JUMPDEST SWAP2 POP PUSH2 0x27BC DUP3 PUSH2 0x27A3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27D0 DUP3 PUSH2 0x27A6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x280E PUSH1 0x13 DUP4 PUSH2 0x209D JUMP JUMPDEST SWAP2 POP PUSH2 0x2819 DUP3 PUSH2 0x27DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x283B DUP2 PUSH2 0x2802 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2855 PUSH0 DUP4 ADD DUP6 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x2862 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x287C PUSH0 DUP4 ADD DUP6 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x2889 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x289E DUP2 PUSH2 0x2267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28B9 JUMPI PUSH2 0x28B8 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C6 DUP5 DUP3 DUP6 ADD PUSH2 0x2890 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x28E2 PUSH0 DUP4 ADD DUP10 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x28EF PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x28FC PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x2909 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x2916 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x2923 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x293C DUP2 PUSH2 0x2186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2959 JUMPI PUSH2 0x2958 PUSH2 0x1FDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2966 DUP7 DUP3 DUP8 ADD PUSH2 0x292E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2977 DUP7 DUP3 DUP8 ADD PUSH2 0x292E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2988 DUP7 DUP3 DUP8 ADD PUSH2 0x292E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29A5 PUSH0 DUP4 ADD DUP7 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x29B2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x29BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29FB PUSH1 0x1F DUP4 PUSH2 0x209D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A06 DUP3 PUSH2 0x29C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A28 DUP2 PUSH2 0x29EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A42 PUSH0 DUP4 ADD DUP6 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x2A4F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2419 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A8D DUP3 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A98 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AB0 JUMPI PUSH2 0x2AAF PUSH2 0x2A56 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 NOT PREVRANDAO 0x29 0x29 PUSH5 0xC7E1204B31 CREATE 0xDE 0xC3 DUP11 GASPRICE 0xB2 PREVRANDAO 0xDC SIGNEXTEND 0xDD 0xEC 0xE3 SHL 0xCD LOG0 DUP3 0xE5 PUSH21 0xB2596B64736F6C634300081C003300000000000000 ",
							"sourceMap": "1423:10532:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11633:267:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7258:210;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2135:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1660:62:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2654:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1775:64:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5469:107:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5582:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3063:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6850:251;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2182:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2267:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1525:61:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6481:265;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2448:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2572:43:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2899:35:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2993:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11397:230;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6031:346;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2754:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1592:62;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7474:166:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1998:80;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7989:758;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2358:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1779:89:4:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;11633:267:10:-;1563:23;2464:16:0;2475:4;2464:10;:16::i;:::-;11770:1:10::1;11756:16;;:2;:16;;::::0;11748:41:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;11800:12;11818:2;:7;;11833:6;11818:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11799:45;;;11862:7;11854:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;11738:162;11633:267:::0;;;:::o;7258:210::-;1563:23;2464:16:0;2475:4;2464:10;:16::i;:::-;7398:13:10::1;7377:9;:18;7387:7;7377:18;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;7438:7;7426:35;;;7447:13;7426:35;;;;;;:::i;:::-;;;;;;;;7258:210:::0;;;:::o;2135:41::-;;;;;;;;;;;;;:::o;2849:97:4:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;1660:62:10:-;1698:24;1660:62;:::o;2654:30::-;;;;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;1775:64:10:-;1816:23;1775:64;:::o;2707:82:4:-;2756:5;2780:2;2773:9;;2707:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;5469:107:10:-;1630:24;2464:16:0;2475:4;2464:10;:16::i;:::-;5552:17:10::1;5558:2;5562:6;5552:5;:17::i;:::-;5469:107:::0;;;:::o;5582:105::-;1698:24;2464:16:0;2475:4;2464:10;:16::i;:::-;5653:27:10::1;5659:12;:10;:12::i;:::-;5673:6;5653:5;:27::i;:::-;5582:105:::0;;:::o;3063:50::-;;;;;;;;;;;;;;;;;:::o;6850:251::-;1563:23;2464:16:0;2475:4;2464:10;:16::i;:::-;6993:8:10::1;6975:15;;:26;;;;;;;;;;;;;;;;;;7026:13;7011:12;:28;;;;7054:40;7070:8;7080:13;7054:40;;;;;;;:::i;:::-;;;;;;;;6850:251:::0;;;:::o;2182:28::-;;;;;;;;;;;;;:::o;2267:34::-;;;;;;;;;;;;;:::o;3004:116:4:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1525:61:10:-;1563:23;1525:61;:::o;6481:265::-;1563:23;2464:16:0;2475:4;2464:10;:16::i;:::-;6633:8:10::1;6607:23;;:34;;;;;;;;;;;;;;;;;;6665:12;6651:11;:26;;;;6692:47;6716:8;6726:12;6692:47;;;;;;;:::i;:::-;;;;;;;;6481:265:::0;;;:::o;2448:26::-;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1981:93:4:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2572:43:10:-;;;;;;;;;;;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3315:178:4:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;2899:35:10:-;;;;;;;;;;;;;:::o;2993:32::-;;;;:::o;11397:230::-;1563:23;2464:16:0;2475:4;2464:10;:16::i;:::-;11551:1:10::1;11537:16;;:2;:16;;::::0;11529:41:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;11586:12;11580:28;;;11609:2;11613:6;11580:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11397:230:::0;;;;:::o;6031:346::-;1563:23;2464:16:0;2475:4;2464:10;:16::i;:::-;6130:8:10::1;6113:14;;:25;;;;;;;;;;;;;;;;;;6243:8;:35;;;;;6255:23;;;;;;;;;;;6243:35;6239:92;;;6308:12;6294:11;:26;;;;6239:92;6346:24;6361:8;6346:24;;;;;;:::i;:::-;;;;;;;;6031:346:::0;;:::o;2754:26::-;;;;:::o;1592:62::-;1630:24;1592:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3551:140:4:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;7474:166:10:-;1563:23;2464:16:0;2475:4;2464:10;:16::i;:::-;7574:12:10::1;7560:11;:26;;;;7601:32;7620:12;7601:32;;;;;;:::i;:::-;;;;;;;;7474:166:::0;;:::o;1998:80::-;2036:42;1998:80;:::o;7989:758::-;8259:19;8280:17;8299;2261:21:3;:19;:21::i;:::-;1563:23:10::1;2464:16:0;2475:4;2464:10;:16::i;:::-;8400:64:10::2;8417:4;8432:15;;;;;;;;;;;8450:13;8400:8;:64::i;:::-;8513:15;;;;;;;;;;;:31;;;8565:9;8606:4;8625:13;8652:14;8680:12;8706:2;8722:8;8513:227;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8475:265;;;;;;;;;;;;2292:1:3::1;2303:20:::0;:18;:20::i;:::-;7989:758:10;;;;;;;;;:::o;2358:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;763:146:8:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:4:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;10415:476:4:-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7458:208:4:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;9701:432:4:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;6008:1107:4:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:11:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:104::-;4141:7;4170:24;4188:5;4170:24;:::i;:::-;4159:35;;4096:104;;;:::o;4206:138::-;4287:32;4313:5;4287:32;:::i;:::-;4280:5;4277:43;4267:71;;4334:1;4331;4324:12;4267:71;4206:138;:::o;4350:155::-;4404:5;4442:6;4429:20;4420:29;;4458:41;4493:5;4458:41;:::i;:::-;4350:155;;;;:::o;4511:490::-;4587:6;4595;4644:2;4632:9;4623:7;4619:23;4615:32;4612:119;;;4650:79;;:::i;:::-;4612:119;4770:1;4795:61;4848:7;4839:6;4828:9;4824:22;4795:61;:::i;:::-;4785:71;;4741:125;4905:2;4931:53;4976:7;4967:6;4956:9;4952:22;4931:53;:::i;:::-;4921:63;;4876:118;4511:490;;;;;:::o;5007:116::-;5077:21;5092:5;5077:21;:::i;:::-;5070:5;5067:32;5057:60;;5113:1;5110;5103:12;5057:60;5007:116;:::o;5129:133::-;5172:5;5210:6;5197:20;5188:29;;5226:30;5250:5;5226:30;:::i;:::-;5129:133;;;;:::o;5268:468::-;5333:6;5341;5390:2;5378:9;5369:7;5365:23;5361:32;5358:119;;;5396:79;;:::i;:::-;5358:119;5516:1;5541:53;5586:7;5577:6;5566:9;5562:22;5541:53;:::i;:::-;5531:63;;5487:117;5643:2;5669:50;5711:7;5702:6;5691:9;5687:22;5669:50;:::i;:::-;5659:60;;5614:115;5268:468;;;;;:::o;5742:60::-;5770:3;5791:5;5784:12;;5742:60;;;:::o;5808:142::-;5858:9;5891:53;5909:34;5918:24;5936:5;5918:24;:::i;:::-;5909:34;:::i;:::-;5891:53;:::i;:::-;5878:66;;5808:142;;;:::o;5956:126::-;6006:9;6039:37;6070:5;6039:37;:::i;:::-;6026:50;;5956:126;;;:::o;6088:153::-;6165:9;6198:37;6229:5;6198:37;:::i;:::-;6185:50;;6088:153;;;:::o;6247:185::-;6361:64;6419:5;6361:64;:::i;:::-;6356:3;6349:77;6247:185;;:::o;6438:276::-;6558:4;6596:2;6585:9;6581:18;6573:26;;6609:98;6704:1;6693:9;6689:17;6680:6;6609:98;:::i;:::-;6438:276;;;;:::o;6720:118::-;6807:24;6825:5;6807:24;:::i;:::-;6802:3;6795:37;6720:118;;:::o;6844:222::-;6937:4;6975:2;6964:9;6960:18;6952:26;;6988:71;7056:1;7045:9;7041:17;7032:6;6988:71;:::i;:::-;6844:222;;;;:::o;7072:619::-;7149:6;7157;7165;7214:2;7202:9;7193:7;7189:23;7185:32;7182:119;;;7220:79;;:::i;:::-;7182:119;7340:1;7365:53;7410:7;7401:6;7390:9;7386:22;7365:53;:::i;:::-;7355:63;;7311:117;7467:2;7493:53;7538:7;7529:6;7518:9;7514:22;7493:53;:::i;:::-;7483:63;;7438:118;7595:2;7621:53;7666:7;7657:6;7646:9;7642:22;7621:53;:::i;:::-;7611:63;;7566:118;7072:619;;;;;:::o;7697:77::-;7734:7;7763:5;7752:16;;7697:77;;;:::o;7780:122::-;7853:24;7871:5;7853:24;:::i;:::-;7846:5;7843:35;7833:63;;7892:1;7889;7882:12;7833:63;7780:122;:::o;7908:139::-;7954:5;7992:6;7979:20;7970:29;;8008:33;8035:5;8008:33;:::i;:::-;7908:139;;;;:::o;8053:329::-;8112:6;8161:2;8149:9;8140:7;8136:23;8132:32;8129:119;;;8167:79;;:::i;:::-;8129:119;8287:1;8312:53;8357:7;8348:6;8337:9;8333:22;8312:53;:::i;:::-;8302:63;;8258:117;8053:329;;;;:::o;8388:118::-;8475:24;8493:5;8475:24;:::i;:::-;8470:3;8463:37;8388:118;;:::o;8512:222::-;8605:4;8643:2;8632:9;8628:18;8620:26;;8656:71;8724:1;8713:9;8709:17;8700:6;8656:71;:::i;:::-;8512:222;;;;:::o;8740:474::-;8808:6;8816;8865:2;8853:9;8844:7;8840:23;8836:32;8833:119;;;8871:79;;:::i;:::-;8833:119;8991:1;9016:53;9061:7;9052:6;9041:9;9037:22;9016:53;:::i;:::-;9006:63;;8962:117;9118:2;9144:53;9189:7;9180:6;9169:9;9165:22;9144:53;:::i;:::-;9134:63;;9089:118;8740:474;;;;;:::o;9220:86::-;9255:7;9295:4;9288:5;9284:16;9273:27;;9220:86;;;:::o;9312:112::-;9395:22;9411:5;9395:22;:::i;:::-;9390:3;9383:35;9312:112;;:::o;9430:214::-;9519:4;9557:2;9546:9;9542:18;9534:26;;9570:67;9634:1;9623:9;9619:17;9610:6;9570:67;:::i;:::-;9430:214;;;;:::o;9650:329::-;9709:6;9758:2;9746:9;9737:7;9733:23;9729:32;9726:119;;;9764:79;;:::i;:::-;9726:119;9884:1;9909:53;9954:7;9945:6;9934:9;9930:22;9909:53;:::i;:::-;9899:63;;9855:117;9650:329;;;;:::o;9985:::-;10044:6;10093:2;10081:9;10072:7;10068:23;10064:32;10061:119;;;10099:79;;:::i;:::-;10061:119;10219:1;10244:53;10289:7;10280:6;10269:9;10265:22;10244:53;:::i;:::-;10234:63;;10190:117;9985:329;;;;:::o;10320:468::-;10385:6;10393;10442:2;10430:9;10421:7;10417:23;10413:32;10410:119;;;10448:79;;:::i;:::-;10410:119;10568:1;10593:50;10635:7;10626:6;10615:9;10611:22;10593:50;:::i;:::-;10583:60;;10539:114;10692:2;10718:53;10763:7;10754:6;10743:9;10739:22;10718:53;:::i;:::-;10708:63;;10663:118;10320:468;;;;;:::o;10794:118::-;10881:24;10899:5;10881:24;:::i;:::-;10876:3;10869:37;10794:118;;:::o;10918:222::-;11011:4;11049:2;11038:9;11034:18;11026:26;;11062:71;11130:1;11119:9;11115:17;11106:6;11062:71;:::i;:::-;10918:222;;;;:::o;11146:619::-;11223:6;11231;11239;11288:2;11276:9;11267:7;11263:23;11259:32;11256:119;;;11294:79;;:::i;:::-;11256:119;11414:1;11439:53;11484:7;11475:6;11464:9;11460:22;11439:53;:::i;:::-;11429:63;;11385:117;11541:2;11567:53;11612:7;11603:6;11592:9;11588:22;11567:53;:::i;:::-;11557:63;;11512:118;11669:2;11695:53;11740:7;11731:6;11720:9;11716:22;11695:53;:::i;:::-;11685:63;;11640:118;11146:619;;;;;:::o;11771:323::-;11827:6;11876:2;11864:9;11855:7;11851:23;11847:32;11844:119;;;11882:79;;:::i;:::-;11844:119;12002:1;12027:50;12069:7;12060:6;12049:9;12045:22;12027:50;:::i;:::-;12017:60;;11973:114;11771:323;;;;:::o;12100:474::-;12168:6;12176;12225:2;12213:9;12204:7;12200:23;12196:32;12193:119;;;12231:79;;:::i;:::-;12193:119;12351:1;12376:53;12421:7;12412:6;12401:9;12397:22;12376:53;:::i;:::-;12366:63;;12322:117;12478:2;12504:53;12549:7;12540:6;12529:9;12525:22;12504:53;:::i;:::-;12494:63;;12449:118;12100:474;;;;;:::o;12580:911::-;12675:6;12683;12691;12699;12707;12756:3;12744:9;12735:7;12731:23;12727:33;12724:120;;;12763:79;;:::i;:::-;12724:120;12883:1;12908:53;12953:7;12944:6;12933:9;12929:22;12908:53;:::i;:::-;12898:63;;12854:117;13010:2;13036:53;13081:7;13072:6;13061:9;13057:22;13036:53;:::i;:::-;13026:63;;12981:118;13138:2;13164:53;13209:7;13200:6;13189:9;13185:22;13164:53;:::i;:::-;13154:63;;13109:118;13266:2;13292:53;13337:7;13328:6;13317:9;13313:22;13292:53;:::i;:::-;13282:63;;13237:118;13394:3;13421:53;13466:7;13457:6;13446:9;13442:22;13421:53;:::i;:::-;13411:63;;13365:119;12580:911;;;;;;;;:::o;13497:442::-;13646:4;13684:2;13673:9;13669:18;13661:26;;13697:71;13765:1;13754:9;13750:17;13741:6;13697:71;:::i;:::-;13778:72;13846:2;13835:9;13831:18;13822:6;13778:72;:::i;:::-;13860;13928:2;13917:9;13913:18;13904:6;13860:72;:::i;:::-;13497:442;;;;;;:::o;13945:180::-;13993:77;13990:1;13983:88;14090:4;14087:1;14080:15;14114:4;14111:1;14104:15;14131:320;14175:6;14212:1;14206:4;14202:12;14192:22;;14259:1;14253:4;14249:12;14280:18;14270:81;;14336:4;14328:6;14324:17;14314:27;;14270:81;14398:2;14390:6;14387:14;14367:18;14364:38;14361:84;;14417:18;;:::i;:::-;14361:84;14182:269;14131:320;;;:::o;14457:162::-;14597:14;14593:1;14585:6;14581:14;14574:38;14457:162;:::o;14625:366::-;14767:3;14788:67;14852:2;14847:3;14788:67;:::i;:::-;14781:74;;14864:93;14953:3;14864:93;:::i;:::-;14982:2;14977:3;14973:12;14966:19;;14625:366;;;:::o;14997:419::-;15163:4;15201:2;15190:9;15186:18;15178:26;;15250:9;15244:4;15240:20;15236:1;15225:9;15221:17;15214:47;15278:131;15404:4;15278:131;:::i;:::-;15270:139;;14997:419;;;:::o;15422:147::-;15523:11;15560:3;15545:18;;15422:147;;;;:::o;15575:114::-;;:::o;15695:398::-;15854:3;15875:83;15956:1;15951:3;15875:83;:::i;:::-;15868:90;;15967:93;16056:3;15967:93;:::i;:::-;16085:1;16080:3;16076:11;16069:18;;15695:398;;;:::o;16099:379::-;16283:3;16305:147;16448:3;16305:147;:::i;:::-;16298:154;;16469:3;16462:10;;16099:379;;;:::o;16484:169::-;16624:21;16620:1;16612:6;16608:14;16601:45;16484:169;:::o;16659:366::-;16801:3;16822:67;16886:2;16881:3;16822:67;:::i;:::-;16815:74;;16898:93;16987:3;16898:93;:::i;:::-;17016:2;17011:3;17007:12;17000:19;;16659:366;;;:::o;17031:419::-;17197:4;17235:2;17224:9;17220:18;17212:26;;17284:9;17278:4;17274:20;17270:1;17259:9;17255:17;17248:47;17312:131;17438:4;17312:131;:::i;:::-;17304:139;;17031:419;;;:::o;17456:320::-;17571:4;17609:2;17598:9;17594:18;17586:26;;17622:65;17684:1;17673:9;17669:17;17660:6;17622:65;:::i;:::-;17697:72;17765:2;17754:9;17750:18;17741:6;17697:72;:::i;:::-;17456:320;;;;;:::o;17782:332::-;17903:4;17941:2;17930:9;17926:18;17918:26;;17954:71;18022:1;18011:9;18007:17;17998:6;17954:71;:::i;:::-;18035:72;18103:2;18092:9;18088:18;18079:6;18035:72;:::i;:::-;17782:332;;;;;:::o;18120:137::-;18174:5;18205:6;18199:13;18190:22;;18221:30;18245:5;18221:30;:::i;:::-;18120:137;;;;:::o;18263:345::-;18330:6;18379:2;18367:9;18358:7;18354:23;18350:32;18347:119;;;18385:79;;:::i;:::-;18347:119;18505:1;18530:61;18583:7;18574:6;18563:9;18559:22;18530:61;:::i;:::-;18520:71;;18476:125;18263:345;;;;:::o;18614:775::-;18847:4;18885:3;18874:9;18870:19;18862:27;;18899:71;18967:1;18956:9;18952:17;18943:6;18899:71;:::i;:::-;18980:72;19048:2;19037:9;19033:18;19024:6;18980:72;:::i;:::-;19062;19130:2;19119:9;19115:18;19106:6;19062:72;:::i;:::-;19144;19212:2;19201:9;19197:18;19188:6;19144:72;:::i;:::-;19226:73;19294:3;19283:9;19279:19;19270:6;19226:73;:::i;:::-;19309;19377:3;19366:9;19362:19;19353:6;19309:73;:::i;:::-;18614:775;;;;;;;;;:::o;19395:143::-;19452:5;19483:6;19477:13;19468:22;;19499:33;19526:5;19499:33;:::i;:::-;19395:143;;;;:::o;19544:663::-;19632:6;19640;19648;19697:2;19685:9;19676:7;19672:23;19668:32;19665:119;;;19703:79;;:::i;:::-;19665:119;19823:1;19848:64;19904:7;19895:6;19884:9;19880:22;19848:64;:::i;:::-;19838:74;;19794:128;19961:2;19987:64;20043:7;20034:6;20023:9;20019:22;19987:64;:::i;:::-;19977:74;;19932:129;20100:2;20126:64;20182:7;20173:6;20162:9;20158:22;20126:64;:::i;:::-;20116:74;;20071:129;19544:663;;;;;:::o;20213:442::-;20362:4;20400:2;20389:9;20385:18;20377:26;;20413:71;20481:1;20470:9;20466:17;20457:6;20413:71;:::i;:::-;20494:72;20562:2;20551:9;20547:18;20538:6;20494:72;:::i;:::-;20576;20644:2;20633:9;20629:18;20620:6;20576:72;:::i;:::-;20213:442;;;;;;:::o;20661:181::-;20801:33;20797:1;20789:6;20785:14;20778:57;20661:181;:::o;20848:366::-;20990:3;21011:67;21075:2;21070:3;21011:67;:::i;:::-;21004:74;;21087:93;21176:3;21087:93;:::i;:::-;21205:2;21200:3;21196:12;21189:19;;20848:366;;;:::o;21220:419::-;21386:4;21424:2;21413:9;21409:18;21401:26;;21473:9;21467:4;21463:20;21459:1;21448:9;21444:17;21437:47;21501:131;21627:4;21501:131;:::i;:::-;21493:139;;21220:419;;;:::o;21645:332::-;21766:4;21804:2;21793:9;21789:18;21781:26;;21817:71;21885:1;21874:9;21870:17;21861:6;21817:71;:::i;:::-;21898:72;21966:2;21955:9;21951:18;21942:6;21898:72;:::i;:::-;21645:332;;;;;:::o;21983:180::-;22031:77;22028:1;22021:88;22128:4;22125:1;22118:15;22152:4;22149:1;22142:15;22169:191;22209:3;22228:20;22246:1;22228:20;:::i;:::-;22223:25;;22262:20;22280:1;22262:20;:::i;:::-;22257:25;;22305:1;22302;22298:9;22291:16;;22326:3;22323:1;22320:10;22317:36;;;22333:18;;:::i;:::-;22317:36;22169:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2197600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "393",
								"BURNER_ROLE()": "459",
								"DAO_ADDRESS()": "483",
								"DEFAULT_ADMIN_ROLE()": "418",
								"INITIAL_SUPPLY()": "415",
								"MINTER_ROLE()": "458",
								"addLiquidityETH(address,uint256,uint256,uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"blacklist(address)": "2987",
								"burn(uint256)": "infinite",
								"cooldownEnabled()": "2599",
								"cooldownTime()": "2470",
								"decimals()": "450",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3255",
								"lastTxTimestamp(address)": "2891",
								"launchBlock()": "2536",
								"maxTxAmount()": "2537",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"rescueETH(address,uint256)": "infinite",
								"rescueTokens(address,uint256,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setBlacklist(address,bool)": "infinite",
								"setCooldownConfig(bool,uint256)": "infinite",
								"setMaxTxAmount(uint256)": "infinite",
								"setSniperProtection(bool,uint256)": "infinite",
								"setTradingEnabled(bool)": "infinite",
								"snipeBlocks()": "2471",
								"sniperProtectionEnabled()": "2533",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"tradingEnabled()": "2672",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"uniswapV2Pair()": "2641",
								"uniswapV2Router()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1423,
									"end": 11955,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2296,
									"end": 2301,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2267,
									"end": 2301,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2610,
									"end": 2615,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2615,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2683,
									"end": 2684,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2654,
									"end": 2684,
									"name": "PUSH",
									"source": 10,
									"value": "C"
								},
								{
									"begin": 2654,
									"end": 2684,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2929,
									"end": 2934,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "PUSH",
									"source": 10,
									"value": "E"
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2899,
									"end": 2934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3023,
									"end": 3025,
									"name": "PUSH",
									"source": 10,
									"value": "1E"
								},
								{
									"begin": 2993,
									"end": 3025,
									"name": "PUSH",
									"source": 10,
									"value": "F"
								},
								{
									"begin": 2993,
									"end": 3025,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3948,
									"end": 5298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "57616C6C7920546F6B656E000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "5457470000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4060,
									"end": 4061,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4032,
									"end": 4062,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4032,
									"end": 4062,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4048,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4062,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4032,
									"end": 4062,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4062,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 4024,
									"end": 4096,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 4024,
									"end": 4096,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4215,
									"end": 4248,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 4221,
									"end": 4231,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1816,
									"end": 1839,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "409F9CBC7C4A04C220000000"
								},
								{
									"begin": 4215,
									"end": 4220,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 4215,
									"end": 4220,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4215,
									"end": 4220,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4215,
									"end": 4248,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4215,
									"end": 4248,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 4215,
									"end": 4248,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4215,
									"end": 4248,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 4215,
									"end": 4248,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4436,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1563,
									"end": 1586,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 2036,
									"end": 2078,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "633EA8FE424CD65AD4D4826E6581273AFD06B8EF"
								},
								{
									"begin": 4401,
									"end": 4411,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 4401,
									"end": 4411,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4401,
									"end": 4411,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4436,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4401,
									"end": 4436,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4436,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4436,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 4401,
									"end": 4436,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4436,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4574,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1630,
									"end": 1654,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 1563,
									"end": 1586,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 4536,
									"end": 4549,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 4536,
									"end": 4549,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4536,
									"end": 4549,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4536,
									"end": 4574,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4574,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4574,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4536,
									"end": 4574,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4584,
									"end": 4622,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1698,
									"end": 1722,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
								},
								{
									"begin": 1563,
									"end": 1586,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 4584,
									"end": 4597,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 4584,
									"end": 4597,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4584,
									"end": 4597,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4584,
									"end": 4622,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4584,
									"end": 4622,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 4584,
									"end": 4622,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4584,
									"end": 4622,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 4584,
									"end": 4622,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4931,
									"end": 4947,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4909,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 4894,
									"end": 4909,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4894,
									"end": 4948,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4958,
									"end": 4973,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4976,
									"end": 4991,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 4976,
									"end": 4991,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4976,
									"end": 4991,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 4991,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 4991,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 4991,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4976,
									"end": 4991,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 4991,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 4991,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 4991,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4976,
									"end": 4991,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 4999,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4976,
									"end": 4999,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 4999,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "C45A0155"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFF"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "STATICCALL",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 4976,
									"end": 5001,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 4976,
									"end": 5001,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4958,
									"end": 5001,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4958,
									"end": 5001,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5011,
									"end": 5023,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5026,
									"end": 5041,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 5026,
									"end": 5041,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5026,
									"end": 5041,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5041,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5041,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5041,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5026,
									"end": 5041,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5041,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5041,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5041,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5026,
									"end": 5041,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5046,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5026,
									"end": 5046,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5046,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "AD5C4648"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "STATICCALL",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 5026,
									"end": 5048,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 5026,
									"end": 5048,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5011,
									"end": 5048,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5011,
									"end": 5048,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5093,
									"end": 5100,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5112,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5075,
									"end": 5112,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5112,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "C9C65396"
								},
								{
									"begin": 5121,
									"end": 5125,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 5128,
									"end": 5132,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 5075,
									"end": 5133,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 5075,
									"end": 5133,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 5075,
									"end": 5133,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5072,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 5059,
									"end": 5072,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5059,
									"end": 5133,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5263,
									"end": 5264,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5249,
									"end": 5260,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 5249,
									"end": 5264,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5249,
									"end": 5264,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5249,
									"end": 5264,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5249,
									"end": 5264,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4014,
									"end": 5298,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4014,
									"end": 5298,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3948,
									"end": 5298,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5781,
									"end": 5806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 5822,
									"end": 5826,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5781,
									"end": 5827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5781,
									"end": 5827,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5843,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5844,
									"end": 5848,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5859,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5837,
									"end": 5859,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5928,
									"end": 5937,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5909,
									"end": 5926,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5903,
									"end": 5907,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 5771,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3875,
									"end": 3882,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3907,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3912,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3482,
									"end": 3483,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "149"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "151"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 11,
									"value": "151"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 11,
									"value": "149"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "157"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 11,
									"value": "157"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "159"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 11,
									"value": "159"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "162"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "163"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 11,
									"value": "163"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 11,
									"value": "162"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "164"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 11,
									"value": "164"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "165"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 11,
									"value": "165"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "167"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "168"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 11,
									"value": "168"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "169"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 11,
									"value": "169"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "166"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 11,
									"value": "167"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "170"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 11,
									"value": "170"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 11,
									"value": "171"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "173"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "171"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 11,
									"value": "173"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "174"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "175"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 11,
									"value": "175"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 11,
									"value": "174"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 11,
									"value": "166"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6513,
									"end": 6524,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6547,
									"end": 6553,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6542,
									"end": 6545,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6535,
									"end": 6554,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6587,
									"end": 6591,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6582,
									"end": 6585,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6578,
									"end": 6592,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6563,
									"end": 6592,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6563,
									"end": 6592,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6604,
									"end": 6783,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 6604,
									"end": 6783,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6744,
									"end": 6775,
									"name": "PUSH",
									"source": 11,
									"value": "526F757465722063616E6E6F74206265207A65726F2061646472657373000000"
								},
								{
									"begin": 6740,
									"end": 6741,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6732,
									"end": 6738,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6728,
									"end": 6742,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6721,
									"end": 6776,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6604,
									"end": 6783,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6604,
									"end": 6783,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6789,
									"end": 7155,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 6789,
									"end": 7155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6931,
									"end": 6934,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6952,
									"end": 7019,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "179"
								},
								{
									"begin": 7016,
									"end": 7018,
									"name": "PUSH",
									"source": 11,
									"value": "1D"
								},
								{
									"begin": 7011,
									"end": 7014,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6952,
									"end": 7019,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 6952,
									"end": 7019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6952,
									"end": 7019,
									"name": "tag",
									"source": 11,
									"value": "179"
								},
								{
									"begin": 6952,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6945,
									"end": 7019,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6945,
									"end": 7019,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7028,
									"end": 7121,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "180"
								},
								{
									"begin": 7117,
									"end": 7120,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7028,
									"end": 7121,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 7028,
									"end": 7121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7028,
									"end": 7121,
									"name": "tag",
									"source": 11,
									"value": "180"
								},
								{
									"begin": 7028,
									"end": 7121,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7146,
									"end": 7148,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7141,
									"end": 7144,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7137,
									"end": 7149,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7130,
									"end": 7149,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7130,
									"end": 7149,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6789,
									"end": 7155,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6789,
									"end": 7155,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6789,
									"end": 7155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6789,
									"end": 7155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7161,
									"end": 7580,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 7161,
									"end": 7580,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7327,
									"end": 7331,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7365,
									"end": 7367,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7354,
									"end": 7363,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7350,
									"end": 7368,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7342,
									"end": 7368,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7342,
									"end": 7368,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7414,
									"end": 7423,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7408,
									"end": 7412,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7404,
									"end": 7424,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 7400,
									"end": 7401,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7389,
									"end": 7398,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7385,
									"end": 7402,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7378,
									"end": 7425,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 7442,
									"end": 7573,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "182"
								},
								{
									"begin": 7568,
									"end": 7572,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7442,
									"end": 7573,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 7442,
									"end": 7573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7442,
									"end": 7573,
									"name": "tag",
									"source": 11,
									"value": "182"
								},
								{
									"begin": 7442,
									"end": 7573,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7434,
									"end": 7573,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7434,
									"end": 7573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7161,
									"end": 7580,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7161,
									"end": 7580,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7161,
									"end": 7580,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7161,
									"end": 7580,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7586,
									"end": 7704,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 7586,
									"end": 7704,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7673,
									"end": 7697,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "184"
								},
								{
									"begin": 7691,
									"end": 7696,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7673,
									"end": 7697,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 7673,
									"end": 7697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7673,
									"end": 7697,
									"name": "tag",
									"source": 11,
									"value": "184"
								},
								{
									"begin": 7673,
									"end": 7697,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7668,
									"end": 7671,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7661,
									"end": 7698,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 7586,
									"end": 7704,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7586,
									"end": 7704,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7586,
									"end": 7704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7710,
									"end": 8042,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 7710,
									"end": 8042,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7831,
									"end": 7835,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7869,
									"end": 7871,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 7858,
									"end": 7867,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7846,
									"end": 7872,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7846,
									"end": 7872,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7882,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "186"
								},
								{
									"begin": 7950,
									"end": 7951,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7939,
									"end": 7948,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7935,
									"end": 7952,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7926,
									"end": 7932,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7882,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 7882,
									"end": 7953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7882,
									"end": 7953,
									"name": "tag",
									"source": 11,
									"value": "186"
								},
								{
									"begin": 7882,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7963,
									"end": 8035,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "187"
								},
								{
									"begin": 8031,
									"end": 8033,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8020,
									"end": 8029,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8016,
									"end": 8034,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8007,
									"end": 8013,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7963,
									"end": 8035,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 7963,
									"end": 8035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7963,
									"end": 8035,
									"name": "tag",
									"source": 11,
									"value": "187"
								},
								{
									"begin": 7963,
									"end": 8035,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7710,
									"end": 8042,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 7710,
									"end": 8042,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7710,
									"end": 8042,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7710,
									"end": 8042,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7710,
									"end": 8042,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7710,
									"end": 8042,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8141,
									"end": 8145,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8179,
									"end": 8181,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8168,
									"end": 8177,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8164,
									"end": 8182,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8156,
									"end": 8182,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8156,
									"end": 8182,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8192,
									"end": 8263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "189"
								},
								{
									"begin": 8260,
									"end": 8261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8249,
									"end": 8258,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8245,
									"end": 8262,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8236,
									"end": 8242,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8192,
									"end": 8263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 8192,
									"end": 8263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8192,
									"end": 8263,
									"name": "tag",
									"source": 11,
									"value": "189"
								},
								{
									"begin": 8192,
									"end": 8263,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8048,
									"end": 8270,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8048,
									"end": 8270,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8276,
									"end": 8456,
									"name": "tag",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 8276,
									"end": 8456,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8324,
									"end": 8401,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8321,
									"end": 8322,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8314,
									"end": 8402,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8421,
									"end": 8425,
									"name": "PUSH",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 8418,
									"end": 8419,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 8411,
									"end": 8426,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8445,
									"end": 8449,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 8442,
									"end": 8443,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8435,
									"end": 8450,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 8462,
									"end": 8653,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 8462,
									"end": 8653,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8502,
									"end": 8505,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8521,
									"end": 8541,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "192"
								},
								{
									"begin": 8539,
									"end": 8540,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8521,
									"end": 8541,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 8521,
									"end": 8541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8521,
									"end": 8541,
									"name": "tag",
									"source": 11,
									"value": "192"
								},
								{
									"begin": 8521,
									"end": 8541,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8516,
									"end": 8541,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8516,
									"end": 8541,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8555,
									"end": 8575,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "193"
								},
								{
									"begin": 8573,
									"end": 8574,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8555,
									"end": 8575,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 8555,
									"end": 8575,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8555,
									"end": 8575,
									"name": "tag",
									"source": 11,
									"value": "193"
								},
								{
									"begin": 8555,
									"end": 8575,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8550,
									"end": 8575,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 8550,
									"end": 8575,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8598,
									"end": 8599,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8595,
									"end": 8596,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8591,
									"end": 8600,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8584,
									"end": 8600,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8584,
									"end": 8600,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8619,
									"end": 8622,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 8616,
									"end": 8617,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8613,
									"end": 8623,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8610,
									"end": 8646,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8610,
									"end": 8646,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "194"
								},
								{
									"begin": 8610,
									"end": 8646,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8626,
									"end": 8644,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "195"
								},
								{
									"begin": 8626,
									"end": 8644,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 8626,
									"end": 8644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8626,
									"end": 8644,
									"name": "tag",
									"source": 11,
									"value": "195"
								},
								{
									"begin": 8626,
									"end": 8644,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8610,
									"end": 8646,
									"name": "tag",
									"source": 11,
									"value": "194"
								},
								{
									"begin": 8610,
									"end": 8646,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8462,
									"end": 8653,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 8462,
									"end": 8653,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8462,
									"end": 8653,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8462,
									"end": 8653,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8462,
									"end": 8653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8659,
									"end": 8777,
									"name": "tag",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 8659,
									"end": 8777,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8746,
									"end": 8770,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "197"
								},
								{
									"begin": 8764,
									"end": 8769,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8746,
									"end": 8770,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 8746,
									"end": 8770,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8746,
									"end": 8770,
									"name": "tag",
									"source": 11,
									"value": "197"
								},
								{
									"begin": 8746,
									"end": 8770,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8741,
									"end": 8744,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8734,
									"end": 8771,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8659,
									"end": 8777,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8659,
									"end": 8777,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8659,
									"end": 8777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8783,
									"end": 9225,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 8783,
									"end": 9225,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8932,
									"end": 8936,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8970,
									"end": 8972,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 8959,
									"end": 8968,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8955,
									"end": 8973,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8947,
									"end": 8973,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8947,
									"end": 8973,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8983,
									"end": 9054,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "199"
								},
								{
									"begin": 9051,
									"end": 9052,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9040,
									"end": 9049,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9036,
									"end": 9053,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9027,
									"end": 9033,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8983,
									"end": 9054,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 8983,
									"end": 9054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8983,
									"end": 9054,
									"name": "tag",
									"source": 11,
									"value": "199"
								},
								{
									"begin": 8983,
									"end": 9054,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9064,
									"end": 9136,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "200"
								},
								{
									"begin": 9132,
									"end": 9134,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 9121,
									"end": 9130,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9117,
									"end": 9135,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9108,
									"end": 9114,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 9064,
									"end": 9136,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 9064,
									"end": 9136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9064,
									"end": 9136,
									"name": "tag",
									"source": 11,
									"value": "200"
								},
								{
									"begin": 9064,
									"end": 9136,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9146,
									"end": 9218,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "201"
								},
								{
									"begin": 9214,
									"end": 9216,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 9203,
									"end": 9212,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9199,
									"end": 9217,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9190,
									"end": 9196,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 9146,
									"end": 9218,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 9146,
									"end": 9218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9146,
									"end": 9218,
									"name": "tag",
									"source": 11,
									"value": "201"
								},
								{
									"begin": 9146,
									"end": 9218,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8783,
									"end": 9225,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 8783,
									"end": 9225,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 8783,
									"end": 9225,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8783,
									"end": 9225,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8783,
									"end": 9225,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8783,
									"end": 9225,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8783,
									"end": 9225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9231,
									"end": 9453,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 9231,
									"end": 9453,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9324,
									"end": 9328,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9362,
									"end": 9364,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 9351,
									"end": 9360,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9347,
									"end": 9365,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9339,
									"end": 9365,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9339,
									"end": 9365,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9375,
									"end": 9446,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "203"
								},
								{
									"begin": 9443,
									"end": 9444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9432,
									"end": 9441,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9428,
									"end": 9445,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9419,
									"end": 9425,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 9375,
									"end": 9446,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 9375,
									"end": 9446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9375,
									"end": 9446,
									"name": "tag",
									"source": 11,
									"value": "203"
								},
								{
									"begin": 9375,
									"end": 9446,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9231,
									"end": 9453,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 9231,
									"end": 9453,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9231,
									"end": 9453,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9231,
									"end": 9453,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9231,
									"end": 9453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 11955,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f1944292964c7e1204b31f0dec38a3ab244dc0bddece31bcda082e574b2596b64736f6c634300081c0033",
									".code": [
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "B319C6B7"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "EC28438A"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "F68DED66"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "F6F1E306"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "F9F92BE4"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "B319C6B7"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "B37FD190"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "C2E5EC04"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "D00EFB2F"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "D5391393"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "963472F9"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "A985CEEF"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "75B238FC"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "89900603"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "8C0B5E22"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "2BE29FA8"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "42966C68"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "4551BBE9"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "48FCA59D"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "49BD5A5E"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "4ADA218B"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "2BE29FA8"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "2FF2E9DC"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "1694505E"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "1694505E"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "282C51F3"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "99A04E5"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "153B0D1E"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 11955,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 11633,
											"end": 11900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 11633,
											"end": 11900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7258,
											"end": 7468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 7258,
											"end": 7468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2135,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2135,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1660,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1660,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2654,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 2654,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1775,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1775,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 5469,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 5469,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 5582,
											"end": 5687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5582,
											"end": 5687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3063,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3063,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3063,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 6850,
											"end": 7101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 6850,
											"end": 7101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 2182,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2182,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 2267,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2267,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 1525,
											"end": 1586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1525,
											"end": 1586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 6481,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 6481,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 2448,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 2448,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2572,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2572,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2899,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2993,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 2993,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 11397,
											"end": 11627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 11397,
											"end": 11627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 6031,
											"end": 6377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 6031,
											"end": 6377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2754,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 2754,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1592,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1592,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 7474,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7474,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 1998,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 1998,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7989,
											"end": 8747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 7989,
											"end": 8747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 7989,
											"end": 8747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2358,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2358,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2358,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11770,
											"end": 11771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11756,
											"end": 11772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11756,
											"end": 11772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11756,
											"end": 11758,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11756,
											"end": 11772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11756,
											"end": 11772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11756,
											"end": 11772,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 11748,
											"end": 11789,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 11748,
											"end": 11789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11800,
											"end": 11812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11820,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11818,
											"end": 11825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11833,
											"end": 11839,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 11818,
											"end": 11844,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11862,
											"end": 11869,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 11854,
											"end": 11893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 11854,
											"end": 11893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7387,
											"end": 7394,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7445,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "CF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8"
										},
										{
											"begin": 7447,
											"end": 7460,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7426,
											"end": 7461,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7461,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH",
											"source": 10,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 1660,
											"end": 1722,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "409F9CBC7C4A04C220000000"
										},
										{
											"begin": 1775,
											"end": 1839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 5558,
											"end": 5560,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5562,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5552,
											"end": 5557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 5552,
											"end": 5569,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5552,
											"end": 5569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 5552,
											"end": 5569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH",
											"source": 10,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5653,
											"end": 5680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5659,
											"end": 5671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5659,
											"end": 5669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 5659,
											"end": 5671,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5659,
											"end": 5671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5679,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5653,
											"end": 5658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 5653,
											"end": 5680,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5653,
											"end": 5680,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5653,
											"end": 5680,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7001,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 6990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 6975,
											"end": 6990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7026,
											"end": 7039,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 7011,
											"end": 7039,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7039,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7039,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3DD49C7BC5B4083D3ED5845BD08D8D308E600CE46A1BF5FED3466DBA31CE9F0C"
										},
										{
											"begin": 7070,
											"end": 7078,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7093,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 7054,
											"end": 7094,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7094,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 7101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 1525,
											"end": 1586,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 6607,
											"end": 6630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6665,
											"end": 6677,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6651,
											"end": 6662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 6651,
											"end": 6677,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6651,
											"end": 6677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6651,
											"end": 6677,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6651,
											"end": 6677,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B31B570D042C886827A2637126EDD8FF4F4FE90BEB7CB87FFE8C4D2D542C190D"
										},
										{
											"begin": 6716,
											"end": 6724,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6738,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 6692,
											"end": 6739,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6739,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11537,
											"end": 11553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11537,
											"end": 11553,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11537,
											"end": 11539,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11537,
											"end": 11553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11537,
											"end": 11553,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11537,
											"end": 11553,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 11529,
											"end": 11570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 11529,
											"end": 11570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11586,
											"end": 11598,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11580,
											"end": 11608,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 11609,
											"end": 11611,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11619,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 11580,
											"end": 11620,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 11580,
											"end": 11620,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11620,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11397,
											"end": 11627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 6113,
											"end": 6127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6138,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6251,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6278,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6278,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 6243,
											"end": 6278,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6278,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 6255,
											"end": 6278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6255,
											"end": 6278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6278,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6255,
											"end": 6278,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6278,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6255,
											"end": 6278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6278,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 6243,
											"end": 6278,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6239,
											"end": 6331,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6239,
											"end": 6331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 6239,
											"end": 6331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6308,
											"end": 6320,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 6294,
											"end": 6320,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6320,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6320,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6239,
											"end": 6331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 6239,
											"end": 6331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "BEDA7DCA7BC1B3E80B871F4818129EC73B771581F803D553AEB3484098E5F65A"
										},
										{
											"begin": 6361,
											"end": 6369,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6346,
											"end": 6370,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6370,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7560,
											"end": 7571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 7560,
											"end": 7586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7560,
											"end": 7586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7560,
											"end": 7586,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7560,
											"end": 7586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "947F344D56E1E8C70DC492FB94C4DDDDD490C016AAB685F5E7E47B2E85CB44CF"
										},
										{
											"begin": 7620,
											"end": 7632,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 7601,
											"end": 7633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7633,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2078,
											"name": "PUSH",
											"source": 10,
											"value": "633EA8FE424CD65AD4D4826E6581273AFD06B8EF"
										},
										{
											"begin": 1998,
											"end": 2078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8280,
											"end": 8297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 2475,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8464,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 8417,
											"end": 8421,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8447,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8432,
											"end": 8447,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8432,
											"end": 8447,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8447,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8447,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8447,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8432,
											"end": 8447,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8447,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8447,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8447,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8432,
											"end": 8447,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8450,
											"end": 8463,
											"modifierDepth": 2,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 8400,
											"end": 8408,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 8400,
											"end": 8464,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8400,
											"end": 8464,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 8400,
											"end": 8464,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8513,
											"end": 8528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8513,
											"end": 8528,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8528,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8528,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8513,
											"end": 8528,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8528,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8528,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8513,
											"end": 8528,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8544,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8513,
											"end": 8544,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8544,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "F305D719"
										},
										{
											"begin": 8565,
											"end": 8574,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8606,
											"end": 8610,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 8625,
											"end": 8638,
											"modifierDepth": 2,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 8652,
											"end": 8666,
											"modifierDepth": 2,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 8680,
											"end": 8692,
											"modifierDepth": 2,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 8706,
											"end": 8708,
											"modifierDepth": 2,
											"name": "DUP16",
											"source": 10
										},
										{
											"begin": 8722,
											"end": 8730,
											"modifierDepth": 2,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 8513,
											"end": 8740,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 8513,
											"end": 8740,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 8513,
											"end": 8740,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4200,
											"name": "tag",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 4096,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 4188,
											"end": 4193,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 4170,
											"end": 4194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "tag",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 4170,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4159,
											"end": 4194,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4159,
											"end": 4194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4200,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4200,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4200,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4344,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 4206,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 4313,
											"end": 4318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 4287,
											"end": 4319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4319,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 4287,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4280,
											"end": 4285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4320,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4267,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 4267,
											"end": 4338,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4334,
											"end": 4335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4267,
											"end": 4338,
											"name": "tag",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 4267,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4505,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 4350,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4404,
											"end": 4409,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4448,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4429,
											"end": 4449,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 4458,
											"end": 4499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "tag",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4505,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4505,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4505,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4505,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4511,
											"end": 5001,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 4511,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4644,
											"end": 4646,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4632,
											"end": 4641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4623,
											"end": 4630,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4619,
											"end": 4642,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4615,
											"end": 4647,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4612,
											"end": 4731,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4612,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 4612,
											"end": 4731,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4650,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 4650,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 4650,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4650,
											"end": 4729,
											"name": "tag",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 4650,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4612,
											"end": 4731,
											"name": "tag",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 4612,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4770,
											"end": 4771,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 4848,
											"end": 4855,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4824,
											"end": 4846,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4795,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 4795,
											"end": 4856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4795,
											"end": 4856,
											"name": "tag",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 4795,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4785,
											"end": 4856,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4785,
											"end": 4856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 4976,
											"end": 4983,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4952,
											"end": 4974,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 4931,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "tag",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 4931,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4921,
											"end": 4984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4921,
											"end": 4984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4994,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4511,
											"end": 5001,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4511,
											"end": 5001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4511,
											"end": 5001,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4511,
											"end": 5001,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4511,
											"end": 5001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4511,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5007,
											"end": 5123,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 5007,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5077,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 5092,
											"end": 5097,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5077,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 5077,
											"end": 5098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5077,
											"end": 5098,
											"name": "tag",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 5077,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5075,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5099,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 5057,
											"end": 5117,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5113,
											"end": 5114,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5115,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5117,
											"name": "tag",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 5057,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5007,
											"end": 5123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5007,
											"end": 5123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5262,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 5129,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5172,
											"end": 5177,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5216,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5188,
											"end": 5217,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5188,
											"end": 5217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5226,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 5250,
											"end": 5255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5226,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 5226,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5226,
											"end": 5256,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 5226,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5262,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5262,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5262,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5262,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5736,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 5268,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5333,
											"end": 5339,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5390,
											"end": 5392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5378,
											"end": 5387,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5369,
											"end": 5376,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5393,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5477,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 5358,
											"end": 5477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 5396,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 5396,
											"end": 5475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5475,
											"name": "tag",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 5396,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5477,
											"name": "tag",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 5358,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5516,
											"end": 5517,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 5586,
											"end": 5593,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5566,
											"end": 5575,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5562,
											"end": 5584,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 5541,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5594,
											"name": "tag",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 5541,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5594,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 5711,
											"end": 5718,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 5709,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 5669,
											"end": 5719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5719,
											"name": "tag",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 5669,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5659,
											"end": 5719,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5659,
											"end": 5719,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5614,
											"end": 5729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5736,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5736,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5736,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5736,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5736,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5802,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 5742,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5770,
											"end": 5773,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5796,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5802,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5802,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5802,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5808,
											"end": 5950,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 5808,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5858,
											"end": 5867,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 5909,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "576"
										},
										{
											"begin": 5936,
											"end": 5941,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 5918,
											"end": 5942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "tag",
											"source": 11,
											"value": "576"
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5909,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 5909,
											"end": 5943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5909,
											"end": 5943,
											"name": "tag",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 5909,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5891,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 5891,
											"end": 5944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5891,
											"end": 5944,
											"name": "tag",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 5891,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5878,
											"end": 5944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5878,
											"end": 5944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5808,
											"end": 5950,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5808,
											"end": 5950,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5808,
											"end": 5950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5808,
											"end": 5950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5956,
											"end": 6082,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 5956,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6015,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 6070,
											"end": 6075,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 6039,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6076,
											"name": "tag",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 6039,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6026,
											"end": 6076,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6026,
											"end": 6076,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5956,
											"end": 6082,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5956,
											"end": 6082,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5956,
											"end": 6082,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5956,
											"end": 6082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6241,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 6088,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6165,
											"end": 6174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 6229,
											"end": 6234,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6198,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 6198,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6198,
											"end": 6235,
											"name": "tag",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 6198,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6185,
											"end": 6235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6185,
											"end": 6235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6241,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6241,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6241,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6432,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 6247,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6361,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 6419,
											"end": 6424,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6361,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 6361,
											"end": 6425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6361,
											"end": 6425,
											"name": "tag",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 6361,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6356,
											"end": 6359,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6349,
											"end": 6426,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6438,
											"end": 6714,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 6438,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6558,
											"end": 6562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6596,
											"end": 6598,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6585,
											"end": 6594,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6573,
											"end": 6599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6573,
											"end": 6599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6609,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6693,
											"end": 6702,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6689,
											"end": 6706,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6609,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 6609,
											"end": 6707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6609,
											"end": 6707,
											"name": "tag",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 6609,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6438,
											"end": 6714,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6438,
											"end": 6714,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6438,
											"end": 6714,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6438,
											"end": 6714,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6438,
											"end": 6714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6720,
											"end": 6838,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 6720,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6807,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 6825,
											"end": 6830,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6807,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 6807,
											"end": 6831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6807,
											"end": 6831,
											"name": "tag",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 6807,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6795,
											"end": 6832,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6720,
											"end": 6838,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6720,
											"end": 6838,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6720,
											"end": 6838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 7066,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 6844,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6937,
											"end": 6941,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6977,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6964,
											"end": 6973,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 6978,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6952,
											"end": 6978,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6952,
											"end": 6978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6988,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 7056,
											"end": 7057,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7054,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7041,
											"end": 7058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7032,
											"end": 7038,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6988,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 6988,
											"end": 7059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6988,
											"end": 7059,
											"name": "tag",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 6988,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 7066,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 7066,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 7066,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 7066,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 7066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7691,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 7072,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7149,
											"end": 7155,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7216,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7202,
											"end": 7211,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7200,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7189,
											"end": 7212,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7185,
											"end": 7217,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7182,
											"end": 7301,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7182,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 7182,
											"end": 7301,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7220,
											"end": 7299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "591"
										},
										{
											"begin": 7220,
											"end": 7299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 7220,
											"end": 7299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7220,
											"end": 7299,
											"name": "tag",
											"source": 11,
											"value": "591"
										},
										{
											"begin": 7220,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7182,
											"end": 7301,
											"name": "tag",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 7182,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7340,
											"end": 7341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 7410,
											"end": 7417,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7401,
											"end": 7407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7390,
											"end": 7399,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7386,
											"end": 7408,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7365,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 7365,
											"end": 7418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7365,
											"end": 7418,
											"name": "tag",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 7365,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7355,
											"end": 7418,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7355,
											"end": 7418,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7311,
											"end": 7428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7467,
											"end": 7469,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7493,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "593"
										},
										{
											"begin": 7538,
											"end": 7545,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7529,
											"end": 7535,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7518,
											"end": 7527,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7493,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 7493,
											"end": 7546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7493,
											"end": 7546,
											"name": "tag",
											"source": 11,
											"value": "593"
										},
										{
											"begin": 7493,
											"end": 7546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7546,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7546,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7595,
											"end": 7597,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7621,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 7666,
											"end": 7673,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7657,
											"end": 7663,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7642,
											"end": 7664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7621,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 7621,
											"end": 7674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7621,
											"end": 7674,
											"name": "tag",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 7621,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7611,
											"end": 7674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7611,
											"end": 7674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7566,
											"end": 7684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7691,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7691,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7691,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7774,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 7697,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7734,
											"end": 7741,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7768,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7752,
											"end": 7768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7752,
											"end": 7768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7774,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7774,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7774,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7780,
											"end": 7902,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 7780,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7853,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 7871,
											"end": 7876,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7853,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 7853,
											"end": 7877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7853,
											"end": 7877,
											"name": "tag",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 7853,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7846,
											"end": 7851,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7843,
											"end": 7878,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 7833,
											"end": 7896,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7892,
											"end": 7893,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7890,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 7894,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 7896,
											"name": "tag",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 7833,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7780,
											"end": 7902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7780,
											"end": 7902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7908,
											"end": 8047,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 7908,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7954,
											"end": 7959,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 7998,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7970,
											"end": 7999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7970,
											"end": 7999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8008,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 8035,
											"end": 8040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8008,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 8008,
											"end": 8041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8008,
											"end": 8041,
											"name": "tag",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 8008,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7908,
											"end": 8047,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7908,
											"end": 8047,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7908,
											"end": 8047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7908,
											"end": 8047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7908,
											"end": 8047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8053,
											"end": 8382,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 8053,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8112,
											"end": 8118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8163,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8149,
											"end": 8158,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8147,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8136,
											"end": 8159,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8164,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8129,
											"end": 8248,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8129,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 8129,
											"end": 8248,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "603"
										},
										{
											"begin": 8167,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 8167,
											"end": 8246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8246,
											"name": "tag",
											"source": 11,
											"value": "603"
										},
										{
											"begin": 8167,
											"end": 8246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8129,
											"end": 8248,
											"name": "tag",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 8129,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 8357,
											"end": 8364,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8348,
											"end": 8354,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8337,
											"end": 8346,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8333,
											"end": 8355,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8312,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 8312,
											"end": 8365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8312,
											"end": 8365,
											"name": "tag",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 8312,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8365,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8258,
											"end": 8375,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8053,
											"end": 8382,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8053,
											"end": 8382,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8053,
											"end": 8382,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8053,
											"end": 8382,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8053,
											"end": 8382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8388,
											"end": 8506,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 8388,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8475,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 8493,
											"end": 8498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8475,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 8475,
											"end": 8499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8475,
											"end": 8499,
											"name": "tag",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 8475,
											"end": 8499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8473,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8388,
											"end": 8506,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8388,
											"end": 8506,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8388,
											"end": 8506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8734,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 8512,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8605,
											"end": 8609,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8643,
											"end": 8645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8632,
											"end": 8641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8620,
											"end": 8646,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8620,
											"end": 8646,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8656,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 8724,
											"end": 8725,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8713,
											"end": 8722,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8709,
											"end": 8726,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8656,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 8656,
											"end": 8727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8656,
											"end": 8727,
											"name": "tag",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 8656,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8734,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8734,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8734,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8734,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8740,
											"end": 9214,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 8740,
											"end": 9214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8808,
											"end": 8814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8816,
											"end": 8822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8865,
											"end": 8867,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8853,
											"end": 8862,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8844,
											"end": 8851,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8840,
											"end": 8863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8836,
											"end": 8868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8833,
											"end": 8952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8833,
											"end": 8952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "610"
										},
										{
											"begin": 8833,
											"end": 8952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8871,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 8871,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 8871,
											"end": 8950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8871,
											"end": 8950,
											"name": "tag",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 8871,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8833,
											"end": 8952,
											"name": "tag",
											"source": 11,
											"value": "610"
										},
										{
											"begin": 8833,
											"end": 8952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8991,
											"end": 8992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "612"
										},
										{
											"begin": 9061,
											"end": 9068,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9052,
											"end": 9058,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9041,
											"end": 9050,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9037,
											"end": 9059,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9016,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 9016,
											"end": 9069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9016,
											"end": 9069,
											"name": "tag",
											"source": 11,
											"value": "612"
										},
										{
											"begin": 9016,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9069,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9069,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8962,
											"end": 9079,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9118,
											"end": 9120,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9144,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9180,
											"end": 9186,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9169,
											"end": 9178,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9165,
											"end": 9187,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9144,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 9144,
											"end": 9197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9144,
											"end": 9197,
											"name": "tag",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 9144,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9134,
											"end": 9197,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9134,
											"end": 9197,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9089,
											"end": 9207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8740,
											"end": 9214,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8740,
											"end": 9214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8740,
											"end": 9214,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8740,
											"end": 9214,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8740,
											"end": 9214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8740,
											"end": 9214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9220,
											"end": 9306,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 9220,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9255,
											"end": 9262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9295,
											"end": 9299,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 9288,
											"end": 9293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9284,
											"end": 9300,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9273,
											"end": 9300,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9273,
											"end": 9300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9220,
											"end": 9306,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9220,
											"end": 9306,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9220,
											"end": 9306,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9220,
											"end": 9306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9312,
											"end": 9424,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 9312,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9395,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "616"
										},
										{
											"begin": 9411,
											"end": 9416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9395,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 9395,
											"end": 9417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9395,
											"end": 9417,
											"name": "tag",
											"source": 11,
											"value": "616"
										},
										{
											"begin": 9395,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9390,
											"end": 9393,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9383,
											"end": 9418,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9312,
											"end": 9424,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9312,
											"end": 9424,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9312,
											"end": 9424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9644,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 9430,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9519,
											"end": 9523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9557,
											"end": 9559,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9546,
											"end": 9555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9542,
											"end": 9560,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9534,
											"end": 9560,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9534,
											"end": 9560,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9570,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "618"
										},
										{
											"begin": 9634,
											"end": 9635,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9623,
											"end": 9632,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9619,
											"end": 9636,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9610,
											"end": 9616,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9570,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 9570,
											"end": 9637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9570,
											"end": 9637,
											"name": "tag",
											"source": 11,
											"value": "618"
										},
										{
											"begin": 9570,
											"end": 9637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9644,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9644,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9650,
											"end": 9979,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 9650,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9709,
											"end": 9715,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9758,
											"end": 9760,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9737,
											"end": 9744,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9733,
											"end": 9756,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9761,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9726,
											"end": 9845,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9726,
											"end": 9845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 9726,
											"end": 9845,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9764,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "621"
										},
										{
											"begin": 9764,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 9764,
											"end": 9843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9764,
											"end": 9843,
											"name": "tag",
											"source": 11,
											"value": "621"
										},
										{
											"begin": 9764,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9726,
											"end": 9845,
											"name": "tag",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 9726,
											"end": 9845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9909,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "622"
										},
										{
											"begin": 9954,
											"end": 9961,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9945,
											"end": 9951,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9934,
											"end": 9943,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9909,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 9909,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9909,
											"end": 9962,
											"name": "tag",
											"source": 11,
											"value": "622"
										},
										{
											"begin": 9909,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9899,
											"end": 9962,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9899,
											"end": 9962,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9855,
											"end": 9972,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9650,
											"end": 9979,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9650,
											"end": 9979,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9650,
											"end": 9979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9650,
											"end": 9979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9650,
											"end": 9979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 10314,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 9985,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10044,
											"end": 10050,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10093,
											"end": 10095,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10081,
											"end": 10090,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10072,
											"end": 10079,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10068,
											"end": 10091,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10064,
											"end": 10096,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 10061,
											"end": 10180,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10061,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "624"
										},
										{
											"begin": 10061,
											"end": 10180,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10099,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "625"
										},
										{
											"begin": 10099,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 10099,
											"end": 10178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10099,
											"end": 10178,
											"name": "tag",
											"source": 11,
											"value": "625"
										},
										{
											"begin": 10099,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10061,
											"end": 10180,
											"name": "tag",
											"source": 11,
											"value": "624"
										},
										{
											"begin": 10061,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10219,
											"end": 10220,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 10289,
											"end": 10296,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10269,
											"end": 10278,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10265,
											"end": 10287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10244,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 10244,
											"end": 10297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10244,
											"end": 10297,
											"name": "tag",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 10244,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10234,
											"end": 10297,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10234,
											"end": 10297,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10190,
											"end": 10307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 10314,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 10314,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 10314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 10314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 10314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10320,
											"end": 10788,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 10320,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10391,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10399,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10442,
											"end": 10444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10430,
											"end": 10439,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10428,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10417,
											"end": 10440,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10413,
											"end": 10445,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 10410,
											"end": 10529,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10410,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "628"
										},
										{
											"begin": 10410,
											"end": 10529,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10448,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 10448,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 10448,
											"end": 10527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10448,
											"end": 10527,
											"name": "tag",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 10448,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10410,
											"end": 10529,
											"name": "tag",
											"source": 11,
											"value": "628"
										},
										{
											"begin": 10410,
											"end": 10529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10568,
											"end": 10569,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "630"
										},
										{
											"begin": 10635,
											"end": 10642,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10626,
											"end": 10632,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10615,
											"end": 10624,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10611,
											"end": 10633,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10593,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 10593,
											"end": 10643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10593,
											"end": 10643,
											"name": "tag",
											"source": 11,
											"value": "630"
										},
										{
											"begin": 10593,
											"end": 10643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10583,
											"end": 10643,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10583,
											"end": 10643,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10539,
											"end": 10653,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10692,
											"end": 10694,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10718,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 10763,
											"end": 10770,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10754,
											"end": 10760,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10743,
											"end": 10752,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10739,
											"end": 10761,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10718,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 10718,
											"end": 10771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10718,
											"end": 10771,
											"name": "tag",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 10718,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 10771,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 10771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10663,
											"end": 10781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10320,
											"end": 10788,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10320,
											"end": 10788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10320,
											"end": 10788,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10320,
											"end": 10788,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10320,
											"end": 10788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10320,
											"end": 10788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10794,
											"end": 10912,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 10794,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10881,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 10899,
											"end": 10904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10881,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 10881,
											"end": 10905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10881,
											"end": 10905,
											"name": "tag",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 10881,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10876,
											"end": 10879,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10869,
											"end": 10906,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10794,
											"end": 10912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10794,
											"end": 10912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10794,
											"end": 10912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10918,
											"end": 11140,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 10918,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11015,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11049,
											"end": 11051,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11038,
											"end": 11047,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11034,
											"end": 11052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11026,
											"end": 11052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11026,
											"end": 11052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11062,
											"end": 11133,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "635"
										},
										{
											"begin": 11130,
											"end": 11131,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11119,
											"end": 11128,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11115,
											"end": 11132,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11106,
											"end": 11112,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11062,
											"end": 11133,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 11062,
											"end": 11133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11062,
											"end": 11133,
											"name": "tag",
											"source": 11,
											"value": "635"
										},
										{
											"begin": 11062,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10918,
											"end": 11140,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10918,
											"end": 11140,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10918,
											"end": 11140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10918,
											"end": 11140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10918,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11765,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 11146,
											"end": 11765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11223,
											"end": 11229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11231,
											"end": 11237,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11239,
											"end": 11245,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11288,
											"end": 11290,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11276,
											"end": 11285,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11267,
											"end": 11274,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11263,
											"end": 11286,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11259,
											"end": 11291,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11256,
											"end": 11375,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11256,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 11256,
											"end": 11375,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11294,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "638"
										},
										{
											"begin": 11294,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 11294,
											"end": 11373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11294,
											"end": 11373,
											"name": "tag",
											"source": 11,
											"value": "638"
										},
										{
											"begin": 11294,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11256,
											"end": 11375,
											"name": "tag",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 11256,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11414,
											"end": 11415,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11439,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "639"
										},
										{
											"begin": 11484,
											"end": 11491,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11475,
											"end": 11481,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11464,
											"end": 11473,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 11460,
											"end": 11482,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11439,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 11439,
											"end": 11492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11439,
											"end": 11492,
											"name": "tag",
											"source": 11,
											"value": "639"
										},
										{
											"begin": 11439,
											"end": 11492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11429,
											"end": 11492,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11429,
											"end": 11492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11541,
											"end": 11543,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11567,
											"end": 11620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "640"
										},
										{
											"begin": 11612,
											"end": 11619,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11603,
											"end": 11609,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11592,
											"end": 11601,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 11588,
											"end": 11610,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11567,
											"end": 11620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 11567,
											"end": 11620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11567,
											"end": 11620,
											"name": "tag",
											"source": 11,
											"value": "640"
										},
										{
											"begin": 11567,
											"end": 11620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11557,
											"end": 11620,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11557,
											"end": 11620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11512,
											"end": 11630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11671,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11695,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "641"
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11731,
											"end": 11737,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11720,
											"end": 11729,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 11716,
											"end": 11738,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11695,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 11695,
											"end": 11748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11695,
											"end": 11748,
											"name": "tag",
											"source": 11,
											"value": "641"
										},
										{
											"begin": 11695,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11685,
											"end": 11748,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11685,
											"end": 11748,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11640,
											"end": 11758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11765,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11765,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11765,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11771,
											"end": 12094,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 11771,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11827,
											"end": 11833,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11876,
											"end": 11878,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11864,
											"end": 11873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11855,
											"end": 11862,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11847,
											"end": 11879,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11844,
											"end": 11963,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11844,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 11844,
											"end": 11963,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11882,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "644"
										},
										{
											"begin": 11882,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 11882,
											"end": 11961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11882,
											"end": 11961,
											"name": "tag",
											"source": 11,
											"value": "644"
										},
										{
											"begin": 11882,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11844,
											"end": 11963,
											"name": "tag",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 11844,
											"end": 11963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12002,
											"end": 12003,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12027,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "645"
										},
										{
											"begin": 12069,
											"end": 12076,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12060,
											"end": 12066,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12049,
											"end": 12058,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12045,
											"end": 12067,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12027,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 12027,
											"end": 12077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12027,
											"end": 12077,
											"name": "tag",
											"source": 11,
											"value": "645"
										},
										{
											"begin": 12027,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11973,
											"end": 12087,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11771,
											"end": 12094,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11771,
											"end": 12094,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11771,
											"end": 12094,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11771,
											"end": 12094,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11771,
											"end": 12094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12100,
											"end": 12574,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 12100,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12168,
											"end": 12174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12176,
											"end": 12182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12204,
											"end": 12211,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12200,
											"end": 12223,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12196,
											"end": 12228,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 12193,
											"end": 12312,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12193,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 12193,
											"end": 12312,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "648"
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 12231,
											"end": 12310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "tag",
											"source": 11,
											"value": "648"
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12193,
											"end": 12312,
											"name": "tag",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 12193,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12352,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12376,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "649"
										},
										{
											"begin": 12421,
											"end": 12428,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12412,
											"end": 12418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12401,
											"end": 12410,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12397,
											"end": 12419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12376,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 12376,
											"end": 12429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12376,
											"end": 12429,
											"name": "tag",
											"source": 11,
											"value": "649"
										},
										{
											"begin": 12376,
											"end": 12429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12366,
											"end": 12429,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12366,
											"end": 12429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12322,
											"end": 12439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12478,
											"end": 12480,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12504,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 12549,
											"end": 12556,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12546,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12529,
											"end": 12538,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12525,
											"end": 12547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12504,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 12504,
											"end": 12557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12504,
											"end": 12557,
											"name": "tag",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 12504,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12494,
											"end": 12557,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12494,
											"end": 12557,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12449,
											"end": 12567,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12100,
											"end": 12574,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12100,
											"end": 12574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12100,
											"end": 12574,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12100,
											"end": 12574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12100,
											"end": 12574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12100,
											"end": 12574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 13491,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 12580,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12675,
											"end": 12681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12683,
											"end": 12689,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12691,
											"end": 12697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12705,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12707,
											"end": 12713,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12756,
											"end": 12759,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 12744,
											"end": 12753,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 12731,
											"end": 12754,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12727,
											"end": 12760,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 12724,
											"end": 12844,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12724,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "652"
										},
										{
											"begin": 12724,
											"end": 12844,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12763,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "653"
										},
										{
											"begin": 12763,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 12763,
											"end": 12842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12763,
											"end": 12842,
											"name": "tag",
											"source": 11,
											"value": "653"
										},
										{
											"begin": 12763,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12724,
											"end": 12844,
											"name": "tag",
											"source": 11,
											"value": "652"
										},
										{
											"begin": 12724,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "654"
										},
										{
											"begin": 12953,
											"end": 12960,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 12944,
											"end": 12950,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12942,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 12929,
											"end": 12951,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12908,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 12908,
											"end": 12961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12908,
											"end": 12961,
											"name": "tag",
											"source": 11,
											"value": "654"
										},
										{
											"begin": 12908,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12898,
											"end": 12961,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 12898,
											"end": 12961,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12854,
											"end": 12971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13010,
											"end": 13012,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "655"
										},
										{
											"begin": 13081,
											"end": 13088,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 13072,
											"end": 13078,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13061,
											"end": 13070,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 13057,
											"end": 13079,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13036,
											"end": 13089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 13036,
											"end": 13089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13036,
											"end": 13089,
											"name": "tag",
											"source": 11,
											"value": "655"
										},
										{
											"begin": 13036,
											"end": 13089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13026,
											"end": 13089,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 13026,
											"end": 13089,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12981,
											"end": 13099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13138,
											"end": 13140,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13164,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "656"
										},
										{
											"begin": 13209,
											"end": 13216,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 13200,
											"end": 13206,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13189,
											"end": 13198,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 13185,
											"end": 13207,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13164,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 13164,
											"end": 13217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13164,
											"end": 13217,
											"name": "tag",
											"source": 11,
											"value": "656"
										},
										{
											"begin": 13164,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13154,
											"end": 13217,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13154,
											"end": 13217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13109,
											"end": 13227,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13268,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13292,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 13337,
											"end": 13344,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 13328,
											"end": 13334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13317,
											"end": 13326,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 13313,
											"end": 13335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13292,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 13292,
											"end": 13345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13292,
											"end": 13345,
											"name": "tag",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 13292,
											"end": 13345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13282,
											"end": 13345,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13282,
											"end": 13345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13237,
											"end": 13355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13394,
											"end": 13397,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 13421,
											"end": 13474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "658"
										},
										{
											"begin": 13466,
											"end": 13473,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 13457,
											"end": 13463,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13446,
											"end": 13455,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 13442,
											"end": 13464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13421,
											"end": 13474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 13421,
											"end": 13474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13421,
											"end": 13474,
											"name": "tag",
											"source": 11,
											"value": "658"
										},
										{
											"begin": 13421,
											"end": 13474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13411,
											"end": 13474,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13411,
											"end": 13474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13365,
											"end": 13484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 13491,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 13491,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 13491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 13491,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 13491,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 13491,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 13491,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 13491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 13491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13939,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 13497,
											"end": 13939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13646,
											"end": 13650,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13684,
											"end": 13686,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13673,
											"end": 13682,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13669,
											"end": 13687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13661,
											"end": 13687,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13661,
											"end": 13687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "660"
										},
										{
											"begin": 13765,
											"end": 13766,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13754,
											"end": 13763,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13750,
											"end": 13767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13741,
											"end": 13747,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 13697,
											"end": 13768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13768,
											"name": "tag",
											"source": 11,
											"value": "660"
										},
										{
											"begin": 13697,
											"end": 13768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "661"
										},
										{
											"begin": 13846,
											"end": 13848,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13835,
											"end": 13844,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13831,
											"end": 13849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13828,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 13778,
											"end": 13850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13850,
											"name": "tag",
											"source": 11,
											"value": "661"
										},
										{
											"begin": 13778,
											"end": 13850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13932,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "662"
										},
										{
											"begin": 13928,
											"end": 13930,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13917,
											"end": 13926,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13904,
											"end": 13910,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13932,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 13860,
											"end": 13932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13932,
											"name": "tag",
											"source": 11,
											"value": "662"
										},
										{
											"begin": 13860,
											"end": 13932,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13939,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13939,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13945,
											"end": 14125,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 13945,
											"end": 14125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13993,
											"end": 14070,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13990,
											"end": 13991,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13983,
											"end": 14071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14090,
											"end": 14094,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 14087,
											"end": 14088,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14080,
											"end": 14095,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14114,
											"end": 14118,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14111,
											"end": 14112,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14104,
											"end": 14119,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14131,
											"end": 14451,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 14131,
											"end": 14451,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14175,
											"end": 14181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14212,
											"end": 14213,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 14206,
											"end": 14210,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14202,
											"end": 14214,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 14192,
											"end": 14214,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14192,
											"end": 14214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14259,
											"end": 14260,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14253,
											"end": 14257,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14249,
											"end": 14261,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14280,
											"end": 14298,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14270,
											"end": 14351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "665"
										},
										{
											"begin": 14270,
											"end": 14351,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14336,
											"end": 14340,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 14328,
											"end": 14334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14324,
											"end": 14341,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14314,
											"end": 14341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14314,
											"end": 14341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14270,
											"end": 14351,
											"name": "tag",
											"source": 11,
											"value": "665"
										},
										{
											"begin": 14270,
											"end": 14351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14398,
											"end": 14400,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14390,
											"end": 14396,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14387,
											"end": 14401,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 14367,
											"end": 14385,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14364,
											"end": 14402,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14361,
											"end": 14445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "666"
										},
										{
											"begin": 14361,
											"end": 14445,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "667"
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 14417,
											"end": 14435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "tag",
											"source": 11,
											"value": "667"
										},
										{
											"begin": 14417,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14361,
											"end": 14445,
											"name": "tag",
											"source": 11,
											"value": "666"
										},
										{
											"begin": 14361,
											"end": 14445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14182,
											"end": 14451,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14131,
											"end": 14451,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14131,
											"end": 14451,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14131,
											"end": 14451,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14131,
											"end": 14451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14457,
											"end": 14619,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 14457,
											"end": 14619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14597,
											"end": 14611,
											"name": "PUSH",
											"source": 11,
											"value": "496E76616C69642027746F270000000000000000000000000000000000000000"
										},
										{
											"begin": 14593,
											"end": 14594,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14585,
											"end": 14591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14581,
											"end": 14595,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14574,
											"end": 14612,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14457,
											"end": 14619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14457,
											"end": 14619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14625,
											"end": 14991,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 14625,
											"end": 14991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14767,
											"end": 14770,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14788,
											"end": 14855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "670"
										},
										{
											"begin": 14852,
											"end": 14854,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 14847,
											"end": 14850,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14788,
											"end": 14855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 14788,
											"end": 14855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14788,
											"end": 14855,
											"name": "tag",
											"source": 11,
											"value": "670"
										},
										{
											"begin": 14788,
											"end": 14855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14781,
											"end": 14855,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14781,
											"end": 14855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14864,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "671"
										},
										{
											"begin": 14953,
											"end": 14956,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14864,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 14864,
											"end": 14957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14864,
											"end": 14957,
											"name": "tag",
											"source": 11,
											"value": "671"
										},
										{
											"begin": 14864,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14982,
											"end": 14984,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14977,
											"end": 14980,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14973,
											"end": 14985,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14966,
											"end": 14985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14966,
											"end": 14985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14625,
											"end": 14991,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14625,
											"end": 14991,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14625,
											"end": 14991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14625,
											"end": 14991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14997,
											"end": 15416,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 14997,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15163,
											"end": 15167,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15201,
											"end": 15203,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15190,
											"end": 15199,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15186,
											"end": 15204,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15204,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15204,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15250,
											"end": 15259,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15244,
											"end": 15248,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15240,
											"end": 15260,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15236,
											"end": 15237,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15234,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15221,
											"end": 15238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15214,
											"end": 15261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15278,
											"end": 15409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "673"
										},
										{
											"begin": 15404,
											"end": 15408,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15278,
											"end": 15409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 15278,
											"end": 15409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15278,
											"end": 15409,
											"name": "tag",
											"source": 11,
											"value": "673"
										},
										{
											"begin": 15278,
											"end": 15409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15270,
											"end": 15409,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15270,
											"end": 15409,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14997,
											"end": 15416,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14997,
											"end": 15416,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14997,
											"end": 15416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14997,
											"end": 15416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15422,
											"end": 15569,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 15422,
											"end": 15569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15523,
											"end": 15534,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15560,
											"end": 15563,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15545,
											"end": 15563,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15545,
											"end": 15563,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15422,
											"end": 15569,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15422,
											"end": 15569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15422,
											"end": 15569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15422,
											"end": 15569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15422,
											"end": 15569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15575,
											"end": 15689,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 15575,
											"end": 15689,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15575,
											"end": 15689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15575,
											"end": 15689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15695,
											"end": 16093,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 15695,
											"end": 16093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15854,
											"end": 15857,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15875,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "677"
										},
										{
											"begin": 15956,
											"end": 15957,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15951,
											"end": 15954,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 15875,
											"end": 15958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15958,
											"name": "tag",
											"source": 11,
											"value": "677"
										},
										{
											"begin": 15875,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15868,
											"end": 15958,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15868,
											"end": 15958,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15967,
											"end": 16060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "678"
										},
										{
											"begin": 16056,
											"end": 16059,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15967,
											"end": 16060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 15967,
											"end": 16060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15967,
											"end": 16060,
											"name": "tag",
											"source": 11,
											"value": "678"
										},
										{
											"begin": 15967,
											"end": 16060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16085,
											"end": 16086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16080,
											"end": 16083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16076,
											"end": 16087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16069,
											"end": 16087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16069,
											"end": 16087,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15695,
											"end": 16093,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15695,
											"end": 16093,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15695,
											"end": 16093,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15695,
											"end": 16093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16099,
											"end": 16478,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 16099,
											"end": 16478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16283,
											"end": 16286,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16305,
											"end": 16452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "680"
										},
										{
											"begin": 16448,
											"end": 16451,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16305,
											"end": 16452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 16305,
											"end": 16452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16305,
											"end": 16452,
											"name": "tag",
											"source": 11,
											"value": "680"
										},
										{
											"begin": 16305,
											"end": 16452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16298,
											"end": 16452,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16298,
											"end": 16452,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16469,
											"end": 16472,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16462,
											"end": 16472,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16462,
											"end": 16472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16099,
											"end": 16478,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16099,
											"end": 16478,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16099,
											"end": 16478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16099,
											"end": 16478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16484,
											"end": 16653,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 16484,
											"end": 16653,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16624,
											"end": 16645,
											"name": "PUSH",
											"source": 11,
											"value": "455448207472616E73666572206661696C656400000000000000000000000000"
										},
										{
											"begin": 16620,
											"end": 16621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16612,
											"end": 16618,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16608,
											"end": 16622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16646,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16484,
											"end": 16653,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16484,
											"end": 16653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16659,
											"end": 17025,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 16659,
											"end": 17025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16801,
											"end": 16804,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16822,
											"end": 16889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "683"
										},
										{
											"begin": 16886,
											"end": 16888,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 16881,
											"end": 16884,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16822,
											"end": 16889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 16822,
											"end": 16889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16822,
											"end": 16889,
											"name": "tag",
											"source": 11,
											"value": "683"
										},
										{
											"begin": 16822,
											"end": 16889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16815,
											"end": 16889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16815,
											"end": 16889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16898,
											"end": 16991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "684"
										},
										{
											"begin": 16987,
											"end": 16990,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16898,
											"end": 16991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 16898,
											"end": 16991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16898,
											"end": 16991,
											"name": "tag",
											"source": 11,
											"value": "684"
										},
										{
											"begin": 16898,
											"end": 16991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17016,
											"end": 17018,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17011,
											"end": 17014,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17007,
											"end": 17019,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17000,
											"end": 17019,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17000,
											"end": 17019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16659,
											"end": 17025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16659,
											"end": 17025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16659,
											"end": 17025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16659,
											"end": 17025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17031,
											"end": 17450,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 17031,
											"end": 17450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17197,
											"end": 17201,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17235,
											"end": 17237,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17224,
											"end": 17233,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17212,
											"end": 17238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17212,
											"end": 17238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17284,
											"end": 17293,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17278,
											"end": 17282,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17274,
											"end": 17294,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17270,
											"end": 17271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17259,
											"end": 17268,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17255,
											"end": 17272,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17248,
											"end": 17295,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17312,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "686"
										},
										{
											"begin": 17438,
											"end": 17442,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17312,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 17312,
											"end": 17443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17312,
											"end": 17443,
											"name": "tag",
											"source": 11,
											"value": "686"
										},
										{
											"begin": 17312,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17304,
											"end": 17443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17304,
											"end": 17443,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17031,
											"end": 17450,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17031,
											"end": 17450,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17031,
											"end": 17450,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17031,
											"end": 17450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17456,
											"end": 17776,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 17456,
											"end": 17776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17571,
											"end": 17575,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17609,
											"end": 17611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17598,
											"end": 17607,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17594,
											"end": 17612,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17586,
											"end": 17612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17586,
											"end": 17612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17622,
											"end": 17687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "688"
										},
										{
											"begin": 17684,
											"end": 17685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17673,
											"end": 17682,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17669,
											"end": 17686,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17660,
											"end": 17666,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17622,
											"end": 17687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 17622,
											"end": 17687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17622,
											"end": 17687,
											"name": "tag",
											"source": 11,
											"value": "688"
										},
										{
											"begin": 17622,
											"end": 17687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17697,
											"end": 17769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "689"
										},
										{
											"begin": 17765,
											"end": 17767,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17754,
											"end": 17763,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17750,
											"end": 17768,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17741,
											"end": 17747,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17697,
											"end": 17769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 17697,
											"end": 17769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17697,
											"end": 17769,
											"name": "tag",
											"source": 11,
											"value": "689"
										},
										{
											"begin": 17697,
											"end": 17769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17456,
											"end": 17776,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 17456,
											"end": 17776,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17456,
											"end": 17776,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17456,
											"end": 17776,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17456,
											"end": 17776,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17456,
											"end": 17776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17782,
											"end": 18114,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 17782,
											"end": 18114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17903,
											"end": 17907,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17941,
											"end": 17943,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17930,
											"end": 17939,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17926,
											"end": 17944,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17918,
											"end": 17944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17918,
											"end": 17944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17954,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "691"
										},
										{
											"begin": 18022,
											"end": 18023,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18011,
											"end": 18020,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18007,
											"end": 18024,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17998,
											"end": 18004,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17954,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 17954,
											"end": 18025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17954,
											"end": 18025,
											"name": "tag",
											"source": 11,
											"value": "691"
										},
										{
											"begin": 17954,
											"end": 18025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18035,
											"end": 18107,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "692"
										},
										{
											"begin": 18103,
											"end": 18105,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18092,
											"end": 18101,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18088,
											"end": 18106,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18079,
											"end": 18085,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18035,
											"end": 18107,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 18035,
											"end": 18107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18035,
											"end": 18107,
											"name": "tag",
											"source": 11,
											"value": "692"
										},
										{
											"begin": 18035,
											"end": 18107,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17782,
											"end": 18114,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 17782,
											"end": 18114,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17782,
											"end": 18114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17782,
											"end": 18114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17782,
											"end": 18114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17782,
											"end": 18114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18120,
											"end": 18257,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 18120,
											"end": 18257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18174,
											"end": 18179,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18205,
											"end": 18211,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18199,
											"end": 18212,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 18190,
											"end": 18212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18190,
											"end": 18212,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18221,
											"end": 18251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "694"
										},
										{
											"begin": 18245,
											"end": 18250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18221,
											"end": 18251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 18221,
											"end": 18251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18221,
											"end": 18251,
											"name": "tag",
											"source": 11,
											"value": "694"
										},
										{
											"begin": 18221,
											"end": 18251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18120,
											"end": 18257,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18120,
											"end": 18257,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18120,
											"end": 18257,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18120,
											"end": 18257,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18120,
											"end": 18257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18263,
											"end": 18608,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 18263,
											"end": 18608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18330,
											"end": 18336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18379,
											"end": 18381,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18367,
											"end": 18376,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18358,
											"end": 18365,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18354,
											"end": 18377,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18350,
											"end": 18382,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 18347,
											"end": 18466,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 18347,
											"end": 18466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "696"
										},
										{
											"begin": 18347,
											"end": 18466,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18385,
											"end": 18464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 18385,
											"end": 18464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 18385,
											"end": 18464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18385,
											"end": 18464,
											"name": "tag",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 18385,
											"end": 18464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18347,
											"end": 18466,
											"name": "tag",
											"source": 11,
											"value": "696"
										},
										{
											"begin": 18347,
											"end": 18466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18505,
											"end": 18506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18530,
											"end": 18591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "698"
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18574,
											"end": 18580,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18563,
											"end": 18572,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 18559,
											"end": 18581,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18530,
											"end": 18591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 18530,
											"end": 18591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18530,
											"end": 18591,
											"name": "tag",
											"source": 11,
											"value": "698"
										},
										{
											"begin": 18530,
											"end": 18591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18520,
											"end": 18591,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18520,
											"end": 18591,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18476,
											"end": 18601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18263,
											"end": 18608,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18263,
											"end": 18608,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18263,
											"end": 18608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18263,
											"end": 18608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18263,
											"end": 18608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19389,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 18614,
											"end": 19389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18847,
											"end": 18851,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18885,
											"end": 18888,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 18874,
											"end": 18883,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18870,
											"end": 18889,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18862,
											"end": 18889,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18862,
											"end": 18889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18899,
											"end": 18970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "700"
										},
										{
											"begin": 18967,
											"end": 18968,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18956,
											"end": 18965,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18952,
											"end": 18969,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18943,
											"end": 18949,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 18899,
											"end": 18970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 18899,
											"end": 18970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18899,
											"end": 18970,
											"name": "tag",
											"source": 11,
											"value": "700"
										},
										{
											"begin": 18899,
											"end": 18970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18980,
											"end": 19052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "701"
										},
										{
											"begin": 19048,
											"end": 19050,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19037,
											"end": 19046,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19033,
											"end": 19051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19024,
											"end": 19030,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 18980,
											"end": 19052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 18980,
											"end": 19052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18980,
											"end": 19052,
											"name": "tag",
											"source": 11,
											"value": "701"
										},
										{
											"begin": 18980,
											"end": 19052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19062,
											"end": 19134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "702"
										},
										{
											"begin": 19130,
											"end": 19132,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19119,
											"end": 19128,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19115,
											"end": 19133,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19106,
											"end": 19112,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 19062,
											"end": 19134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 19062,
											"end": 19134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19062,
											"end": 19134,
											"name": "tag",
											"source": 11,
											"value": "702"
										},
										{
											"begin": 19062,
											"end": 19134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19144,
											"end": 19216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "703"
										},
										{
											"begin": 19212,
											"end": 19214,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 19201,
											"end": 19210,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19197,
											"end": 19215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19188,
											"end": 19194,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 19144,
											"end": 19216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 19144,
											"end": 19216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19144,
											"end": 19216,
											"name": "tag",
											"source": 11,
											"value": "703"
										},
										{
											"begin": 19144,
											"end": 19216,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19226,
											"end": 19299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "704"
										},
										{
											"begin": 19294,
											"end": 19297,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 19283,
											"end": 19292,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19279,
											"end": 19298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19270,
											"end": 19276,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 19226,
											"end": 19299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 19226,
											"end": 19299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19226,
											"end": 19299,
											"name": "tag",
											"source": 11,
											"value": "704"
										},
										{
											"begin": 19226,
											"end": 19299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19309,
											"end": 19382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "705"
										},
										{
											"begin": 19377,
											"end": 19380,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 19366,
											"end": 19375,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19362,
											"end": 19381,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19353,
											"end": 19359,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19309,
											"end": 19382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 19309,
											"end": 19382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19309,
											"end": 19382,
											"name": "tag",
											"source": 11,
											"value": "705"
										},
										{
											"begin": 19309,
											"end": 19382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19389,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19389,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18614,
											"end": 19389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19395,
											"end": 19538,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 19395,
											"end": 19538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19452,
											"end": 19457,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19483,
											"end": 19489,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19477,
											"end": 19490,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19468,
											"end": 19490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19468,
											"end": 19490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19499,
											"end": 19532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "707"
										},
										{
											"begin": 19526,
											"end": 19531,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19499,
											"end": 19532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 19499,
											"end": 19532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19499,
											"end": 19532,
											"name": "tag",
											"source": 11,
											"value": "707"
										},
										{
											"begin": 19499,
											"end": 19532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19395,
											"end": 19538,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19395,
											"end": 19538,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19395,
											"end": 19538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19395,
											"end": 19538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19395,
											"end": 19538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19544,
											"end": 20207,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 19544,
											"end": 20207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19632,
											"end": 19638,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19640,
											"end": 19646,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19648,
											"end": 19654,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19697,
											"end": 19699,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 19685,
											"end": 19694,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19676,
											"end": 19683,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 19672,
											"end": 19695,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19668,
											"end": 19700,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 19665,
											"end": 19784,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19665,
											"end": 19784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "709"
										},
										{
											"begin": 19665,
											"end": 19784,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19703,
											"end": 19782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "710"
										},
										{
											"begin": 19703,
											"end": 19782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 19703,
											"end": 19782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19703,
											"end": 19782,
											"name": "tag",
											"source": 11,
											"value": "710"
										},
										{
											"begin": 19703,
											"end": 19782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19665,
											"end": 19784,
											"name": "tag",
											"source": 11,
											"value": "709"
										},
										{
											"begin": 19665,
											"end": 19784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19823,
											"end": 19824,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19848,
											"end": 19912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "711"
										},
										{
											"begin": 19904,
											"end": 19911,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 19895,
											"end": 19901,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19884,
											"end": 19893,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 19880,
											"end": 19902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19848,
											"end": 19912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 19848,
											"end": 19912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19848,
											"end": 19912,
											"name": "tag",
											"source": 11,
											"value": "711"
										},
										{
											"begin": 19848,
											"end": 19912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19838,
											"end": 19912,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 19838,
											"end": 19912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19794,
											"end": 19922,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19961,
											"end": 19963,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19987,
											"end": 20051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "712"
										},
										{
											"begin": 20043,
											"end": 20050,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 20034,
											"end": 20040,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20023,
											"end": 20032,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 20019,
											"end": 20041,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19987,
											"end": 20051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 19987,
											"end": 20051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19987,
											"end": 20051,
											"name": "tag",
											"source": 11,
											"value": "712"
										},
										{
											"begin": 19987,
											"end": 20051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19977,
											"end": 20051,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19977,
											"end": 20051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19932,
											"end": 20061,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20100,
											"end": 20102,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20126,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "713"
										},
										{
											"begin": 20182,
											"end": 20189,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 20173,
											"end": 20179,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20162,
											"end": 20171,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 20158,
											"end": 20180,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20126,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 20126,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20126,
											"end": 20190,
											"name": "tag",
											"source": 11,
											"value": "713"
										},
										{
											"begin": 20126,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20116,
											"end": 20190,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20116,
											"end": 20190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20071,
											"end": 20200,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19544,
											"end": 20207,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19544,
											"end": 20207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19544,
											"end": 20207,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19544,
											"end": 20207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19544,
											"end": 20207,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19544,
											"end": 20207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20213,
											"end": 20655,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 20213,
											"end": 20655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20362,
											"end": 20366,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20400,
											"end": 20402,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 20389,
											"end": 20398,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20385,
											"end": 20403,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20377,
											"end": 20403,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20377,
											"end": 20403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20413,
											"end": 20484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "715"
										},
										{
											"begin": 20481,
											"end": 20482,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20470,
											"end": 20479,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20466,
											"end": 20483,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20457,
											"end": 20463,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 20413,
											"end": 20484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 20413,
											"end": 20484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20413,
											"end": 20484,
											"name": "tag",
											"source": 11,
											"value": "715"
										},
										{
											"begin": 20413,
											"end": 20484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20494,
											"end": 20566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "716"
										},
										{
											"begin": 20562,
											"end": 20564,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20551,
											"end": 20560,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20547,
											"end": 20565,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20538,
											"end": 20544,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 20494,
											"end": 20566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 20494,
											"end": 20566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20494,
											"end": 20566,
											"name": "tag",
											"source": 11,
											"value": "716"
										},
										{
											"begin": 20494,
											"end": 20566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20576,
											"end": 20648,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "717"
										},
										{
											"begin": 20644,
											"end": 20646,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20633,
											"end": 20642,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20629,
											"end": 20647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20620,
											"end": 20626,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20576,
											"end": 20648,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 20576,
											"end": 20648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20576,
											"end": 20648,
											"name": "tag",
											"source": 11,
											"value": "717"
										},
										{
											"begin": 20576,
											"end": 20648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20213,
											"end": 20655,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 20213,
											"end": 20655,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 20213,
											"end": 20655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20213,
											"end": 20655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20213,
											"end": 20655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20213,
											"end": 20655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20213,
											"end": 20655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20661,
											"end": 20842,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 20661,
											"end": 20842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20801,
											"end": 20834,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 20797,
											"end": 20798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20789,
											"end": 20795,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20785,
											"end": 20799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20778,
											"end": 20835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20661,
											"end": 20842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20661,
											"end": 20842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20848,
											"end": 21214,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 20848,
											"end": 21214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20990,
											"end": 20993,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21011,
											"end": 21078,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "720"
										},
										{
											"begin": 21075,
											"end": 21077,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 21070,
											"end": 21073,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21011,
											"end": 21078,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 21011,
											"end": 21078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21011,
											"end": 21078,
											"name": "tag",
											"source": 11,
											"value": "720"
										},
										{
											"begin": 21011,
											"end": 21078,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21004,
											"end": 21078,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21004,
											"end": 21078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21087,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "721"
										},
										{
											"begin": 21176,
											"end": 21179,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21087,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 21087,
											"end": 21180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21087,
											"end": 21180,
											"name": "tag",
											"source": 11,
											"value": "721"
										},
										{
											"begin": 21087,
											"end": 21180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21205,
											"end": 21207,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21200,
											"end": 21203,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21196,
											"end": 21208,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21189,
											"end": 21208,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21189,
											"end": 21208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20848,
											"end": 21214,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20848,
											"end": 21214,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20848,
											"end": 21214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20848,
											"end": 21214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21220,
											"end": 21639,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 21220,
											"end": 21639,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21386,
											"end": 21390,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21424,
											"end": 21426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21413,
											"end": 21422,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21409,
											"end": 21427,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21401,
											"end": 21427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21401,
											"end": 21427,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21473,
											"end": 21482,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21467,
											"end": 21471,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21463,
											"end": 21483,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21459,
											"end": 21460,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21448,
											"end": 21457,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21444,
											"end": 21461,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21437,
											"end": 21484,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21501,
											"end": 21632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "723"
										},
										{
											"begin": 21627,
											"end": 21631,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21501,
											"end": 21632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 21501,
											"end": 21632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21501,
											"end": 21632,
											"name": "tag",
											"source": 11,
											"value": "723"
										},
										{
											"begin": 21501,
											"end": 21632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21493,
											"end": 21632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21493,
											"end": 21632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21220,
											"end": 21639,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21220,
											"end": 21639,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21220,
											"end": 21639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21220,
											"end": 21639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21645,
											"end": 21977,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 21645,
											"end": 21977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21766,
											"end": 21770,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21804,
											"end": 21806,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21793,
											"end": 21802,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21789,
											"end": 21807,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21781,
											"end": 21807,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21781,
											"end": 21807,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21817,
											"end": 21888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "725"
										},
										{
											"begin": 21885,
											"end": 21886,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21874,
											"end": 21883,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21870,
											"end": 21887,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21861,
											"end": 21867,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21817,
											"end": 21888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 21817,
											"end": 21888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21817,
											"end": 21888,
											"name": "tag",
											"source": 11,
											"value": "725"
										},
										{
											"begin": 21817,
											"end": 21888,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21898,
											"end": 21970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "726"
										},
										{
											"begin": 21966,
											"end": 21968,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21955,
											"end": 21964,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21951,
											"end": 21969,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21942,
											"end": 21948,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21898,
											"end": 21970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 21898,
											"end": 21970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21898,
											"end": 21970,
											"name": "tag",
											"source": 11,
											"value": "726"
										},
										{
											"begin": 21898,
											"end": 21970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21645,
											"end": 21977,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 21645,
											"end": 21977,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21645,
											"end": 21977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21645,
											"end": 21977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21645,
											"end": 21977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21645,
											"end": 21977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21983,
											"end": 22163,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 21983,
											"end": 22163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22031,
											"end": 22108,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22028,
											"end": 22029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22021,
											"end": 22109,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22128,
											"end": 22132,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 22125,
											"end": 22126,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 22118,
											"end": 22133,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22152,
											"end": 22156,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 22149,
											"end": 22150,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22142,
											"end": 22157,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 22169,
											"end": 22360,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 22169,
											"end": 22360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22209,
											"end": 22212,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22228,
											"end": 22248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "729"
										},
										{
											"begin": 22246,
											"end": 22247,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22228,
											"end": 22248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 22228,
											"end": 22248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22228,
											"end": 22248,
											"name": "tag",
											"source": 11,
											"value": "729"
										},
										{
											"begin": 22228,
											"end": 22248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22223,
											"end": 22248,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22223,
											"end": 22248,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22262,
											"end": 22282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "730"
										},
										{
											"begin": 22280,
											"end": 22281,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22262,
											"end": 22282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 22262,
											"end": 22282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22262,
											"end": 22282,
											"name": "tag",
											"source": 11,
											"value": "730"
										},
										{
											"begin": 22262,
											"end": 22282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22257,
											"end": 22282,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22257,
											"end": 22282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22305,
											"end": 22306,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22302,
											"end": 22303,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22298,
											"end": 22307,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22291,
											"end": 22307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22291,
											"end": 22307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22326,
											"end": 22329,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 22323,
											"end": 22324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22320,
											"end": 22330,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 22317,
											"end": 22353,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 22317,
											"end": 22353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "731"
										},
										{
											"begin": 22317,
											"end": 22353,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 22333,
											"end": 22351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "732"
										},
										{
											"begin": 22333,
											"end": 22351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 22333,
											"end": 22351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22333,
											"end": 22351,
											"name": "tag",
											"source": 11,
											"value": "732"
										},
										{
											"begin": 22333,
											"end": 22351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22317,
											"end": 22353,
											"name": "tag",
											"source": 11,
											"value": "731"
										},
										{
											"begin": 22317,
											"end": 22353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22169,
											"end": 22360,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22169,
											"end": 22360,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22169,
											"end": 22360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22169,
											"end": 22360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22169,
											"end": 22360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"BURNER_ROLE()": "282c51f3",
							"DAO_ADDRESS()": "f68ded66",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"MINTER_ROLE()": "d5391393",
							"addLiquidityETH(address,uint256,uint256,uint256,uint256)": "f6f1e306",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blacklist(address)": "f9f92be4",
							"burn(uint256)": "42966c68",
							"cooldownEnabled()": "a985ceef",
							"cooldownTime()": "b319c6b7",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"lastTxTimestamp(address)": "4551bbe9",
							"launchBlock()": "d00efb2f",
							"maxTxAmount()": "8c0b5e22",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"rescueETH(address,uint256)": "099a04e5",
							"rescueTokens(address,uint256,address)": "b37fd190",
							"revokeRole(bytes32,address)": "d547741f",
							"setBlacklist(address,bool)": "153b0d1e",
							"setCooldownConfig(bool,uint256)": "48fca59d",
							"setMaxTxAmount(uint256)": "ec28438a",
							"setSniperProtection(bool,uint256)": "89900603",
							"setTradingEnabled(bool)": "c2e5ec04",
							"snipeBlocks()": "2be29fa8",
							"sniperProtectionEnabled()": "963472f9",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"tradingEnabled()": "4ada218b",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"uniswapV2Pair()": "49bd5a5e",
							"uniswapV2Router()": "1694505e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapV2Router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cooldownTime\",\"type\":\"uint256\"}],\"name\":\"CooldownUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxTx\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"snipeBlocks\",\"type\":\"uint256\"}],\"name\":\"SniperProtectionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"TradingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAO_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmountMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastTxTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_cooldownTime\",\"type\":\"uint256\"}],\"name\":\"setCooldownConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_snipeBlocks\",\"type\":\"uint256\"}],\"name\":\"setSniperProtection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setTradingEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snipeBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sniperProtectionEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"IMPORTANT: The DAO address must be a **secure** address (multi-sig or official DAO).\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addLiquidityETH(address,uint256,uint256,uint256,uint256)\":{\"details\":\"Add liquidity (TWG / ETH) on Uniswap. Must transfer `tokenAmountIn` to      this contract first, or do it in a two-transaction flow from a front-end.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor  1) Mints the entire supply to the deployer (msg.sender).  2) Sets up roles so that only the DAO address has ADMIN_ROLE.  3) Creates a Uniswap V2 pair for (TWG / WETH).  4) Leaves the deployer with NO admin privileges by default, fulfilling the requirement      that the DAO is the sole admin from the start. \",\"params\":{\"_uniswapV2Router\":\"Address of the Uniswap V2 router (e.g., 0x7a250d563...)\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setCooldownConfig(bool,uint256)\":{\"details\":\"Toggle cooldown enforcement and set the cooldown duration in seconds.\"},\"setSniperProtection(bool,uint256)\":{\"details\":\"Turn sniper protection on or off, and set how many blocks to protect.\"},\"setTradingEnabled(bool)\":{\"details\":\"Enables or disables trading. If enabling, records the `launchBlock`       for anti-sniping logic if `sniperProtectionEnabled` is true.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"WallyToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"  - Zero-tax ERC20 token  - **AccessControl** with a designated DAO as `ADMIN_ROLE` (not the deployer EOA)  - **Advanced Anti-Sniping**: (launchBlock sniper checks, optional cooldown)  - Basic anti-bot features: (trading toggle, blacklist, max tx limit)  - Liquidity management (Uniswap V2)  - Rescue functions for stuck tokens/ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WallyToken.sol\":\"WallyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/WallyToken.sol\":{\"keccak256\":\"0x47c5513d5c4b5001ad2c387e7743538c55bab70c3a65c8812d421bba82c8c758\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28dc785d1c4216d89229b4ff6a26a3336787e81b5eb17929282be351be66bcb9\",\"dweb:/ipfs/QmS9VAXvhrHLFQvyLgMFCYzQXjHzozK6bhFxvg9VB2AKpu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 603,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 609,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 611,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 613,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 615,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 526,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1349,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IUniswapV2Router02)1314"
							},
							{
								"astId": 1351,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "uniswapV2Pair",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1354,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "tradingEnabled",
								"offset": 20,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 1358,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "blacklist",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1360,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "maxTxAmount",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1363,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "sniperProtectionEnabled",
								"offset": 0,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 1366,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "snipeBlocks",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1368,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "launchBlock",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1371,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "cooldownEnabled",
								"offset": 0,
								"slot": "14",
								"type": "t_bool"
							},
							{
								"astId": 1374,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "cooldownTime",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1378,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "lastTxTimestamp",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IUniswapV2Router02)1314": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/WallyToken.sol:WallyToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/WallyToken.sol:WallyToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "  - Zero-tax ERC20 token  - **AccessControl** with a designated DAO as `ADMIN_ROLE` (not the deployer EOA)  - **Advanced Anti-Sniping**: (launchBlock sniper checks, optional cooldown)  - Basic anti-bot features: (trading toggle, blacklist, max tx limit)  - Liquidity management (Uniswap V2)  - Rescue functions for stuck tokens/ETH",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1229
						],
						"ERC165": [
							1253
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1230,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1229,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1254,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1253,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1229,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1253,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1253,
								1265,
								378,
								1229
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1252
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1252,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1211,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1211,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							580
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 580,
							"linearizedBaseContracts": [
								580
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 521,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 519,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 520,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 524,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 522,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 523,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 525,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 529,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 530,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 534,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 580,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 540,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 541,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 545,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 550,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 555,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 556,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 580,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 580,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 575,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 573,
												"id": 577,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 580,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 581,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1229
						],
						"ERC20": [
							1095
						],
						"IERC20": [
							1173
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1199
						]
					},
					"id": 1096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1174,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 583,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1200,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 585,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1199,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1230,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 587,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1229,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 516,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 589,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 592,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1229,
										"src": "1133:7:4"
									},
									"id": 593,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 594,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "1142:6:4"
									},
									"id": 595,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 596,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1199,
										"src": "1150:14:4"
									},
									"id": 597,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 598,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:4"
									},
									"id": 599,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 591,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1095,
							"linearizedBaseContracts": [
								1095,
								420,
								1199,
								1173,
								1229
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 603,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 602,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 600,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 601,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 609,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 608,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 604,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 607,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 605,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 606,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 611,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 610,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 613,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 612,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 615,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 614,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 623,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 624,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 627,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 628,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 632,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 619,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 1095,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1186
									],
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 638,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 613,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 637,
												"id": 639,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 1095,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1192
									],
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 647,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 615,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 646,
												"id": 648,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 1095,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1198
									],
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 655,
												"id": 657,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 653,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 1095,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1122
									],
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 665,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 611,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 664,
												"id": 666,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 1095,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1130
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 676,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 678,
													"indexExpression": {
														"id": 677,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 675,
												"id": 679,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 1095,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1140
									],
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													692
												],
												"declarations": [
													{
														"constant": false,
														"id": 692,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 691,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 693,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 690,
												"id": 703,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 1095,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1150
									],
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 715,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 716,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 719,
													"indexExpression": {
														"id": 718,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 720,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 1095,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1160
									],
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 732,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 734,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															986,
															1046
														],
														"referencedDeclaration": 986,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 731,
												"id": 744,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 1095,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1172
									],
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 758,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 760,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 764,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 763,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 769,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 757,
												"id": 776,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 1095,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 795,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 794,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 800,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 804,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 817,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 816,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 810,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 809,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 815,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 1095,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 835,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 836,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																847
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 847,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 872,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 846,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 851,
															"initialValue": {
																"baseExpression": {
																	"id": 848,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 850,
																"indexExpression": {
																	"id": 849,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 852,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 853,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 862,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 861,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 856,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 828,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 857,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 858,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 832,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 855,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 860,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 871,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 863,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 865,
																			"indexExpression": {
																				"id": 864,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 866,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 867,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 870,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 841,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 842,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 874,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 875,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 893,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 892,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 886,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 888,
																			"indexExpression": {
																				"id": 887,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 889,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 891,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 894,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 884,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 880,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 881,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 883,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 896,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 895,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 1095,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 911,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 917,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 916,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 922,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 926,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 1095,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 944,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 957,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 956,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 950,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 949,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 955,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 960,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 958,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 1095,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 978,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															986,
															1046
														],
														"referencedDeclaration": 1046,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 1095,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 999,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1005,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1004,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1013,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1014,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1020,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1019,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1025,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1028,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1031,
															"indexExpression": {
																"id": 1029,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1032,
														"indexExpression": {
															"id": 1030,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1033,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 1036,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 995,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1044,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 1043,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1038,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1039,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1040,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1037,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1042,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 994,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 1095,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "10504:387:4",
										"statements": [
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1093,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1056,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"arguments": [
														{
															"id": 1059,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1058,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1063,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1065,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1064,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "10576:309:4",
												"trueBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "10618:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1070,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "10636:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1071,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "10655:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1080,
															"nodeType": "IfStatement",
															"src": "10632:130:4",
															"trueBody": {
																"id": 1079,
																"nodeType": "Block",
																"src": "10662:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1074,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1051,
																					"src": "10714:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1075,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "10723:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1076,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1053,
																					"src": "10741:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1073,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10687:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1078,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:4"
																	}
																]
															}
														},
														{
															"id": 1090,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1082,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "10812:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1083,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "10819:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1084,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "10828:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1085,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1053,
																					"src": "10847:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1081,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				986,
																				1046
																			],
																			"referencedDeclaration": 1046,
																			"src": "10803:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1089,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 1095,
									"src": "10415:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1096,
							"src": "1106:9787:4",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "105:10789:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1173
						]
					},
					"id": 1174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1098,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1173,
							"linearizedBaseContracts": [
								1173
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1107,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1116,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1173,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1173,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1173,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1173,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1173,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1173,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1174,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1173
						],
						"IERC20Metadata": [
							1199
						]
					},
					"id": 1200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1200,
							"sourceUnit": 1174,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1176,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1179,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "306:6:6"
									},
									"id": 1180,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1199,
							"linearizedBaseContracts": [
								1199,
								1173
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1199,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1199,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1195,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1199,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1200,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1229
						]
					},
					"id": 1230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1202,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1229,
							"linearizedBaseContracts": [
								1229
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1209,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1229,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1216,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1215,
												"id": 1218,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1229,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1224,
												"id": 1226,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1229,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1230,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1253
						],
						"IERC165": [
							1265
						]
					},
					"id": 1254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 1266,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1265,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1235,
										"name": "IERC165",
										"nameLocations": [
											"688:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1265,
										"src": "688:7:8"
									},
									"id": 1236,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1234,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1253,
							"linearizedBaseContracts": [
								1253,
								1265
							],
							"name": "ERC165",
							"nameLocation": "678:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1264
									],
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "845:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1244,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "862:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1246,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "882:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1265_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1265_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1245,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1265",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1250,
												"nodeType": "Return",
												"src": "855:47:8"
											}
										]
									},
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "790:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:8"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "839:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:8"
									},
									"scope": 1253,
									"src": "763:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1254,
							"src": "660:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1265
						]
					},
					"id": 1266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1256,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1265,
							"linearizedBaseContracts": [
								1265
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 1265,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1266,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"contracts/WallyToken.sol": {
				"ast": {
					"absolutePath": "contracts/WallyToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1229
						],
						"ERC165": [
							1253
						],
						"ERC20": [
							1095
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1173
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1199
						],
						"IUniswapV2Factory": [
							1281
						],
						"IUniswapV2Router02": [
							1314
						],
						"ReentrancyGuard": [
							580
						],
						"WallyToken": [
							1892
						]
					},
					"id": 1893,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1893,
							"sourceUnit": 1096,
							"src": "58:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1893,
							"sourceUnit": 296,
							"src": "114:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1893,
							"sourceUnit": 581,
							"src": "173:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1271,
								"nodeType": "StructuredDocumentation",
								"src": "237:48:10",
								"text": " @dev Interface for Uniswap V2 Factory"
							},
							"fullyImplemented": false,
							"id": 1281,
							"linearizedBaseContracts": [
								1281
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "296:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "329:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "348:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "340:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "364:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "356:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:32:10"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "398:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "390:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:14:10"
									},
									"scope": 1281,
									"src": "320:84:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1893,
							"src": "286:120:10",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1282,
								"nodeType": "StructuredDocumentation",
								"src": "408:47:10",
								"text": " @dev Interface for Uniswap V2 Router"
							},
							"fullyImplemented": false,
							"id": 1314,
							"linearizedBaseContracts": [
								1314
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "466:18:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "500:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "507:2:10"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "533:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:9:10"
									},
									"scope": 1314,
									"src": "491:51:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "556:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "560:2:10"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "586:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:9:10"
									},
									"scope": 1314,
									"src": "547:48:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "610:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "643:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "635:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "663:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "658:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "658:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "696:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "691:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "691:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "725:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "720:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "755:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "747:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "772:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "767:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:161:10"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "855:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "850:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "885:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "880:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "880:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "913:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "908:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:96:10"
									},
									"scope": 1314,
									"src": "601:332:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1893,
							"src": "456:479:10",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1316,
										"name": "ERC20",
										"nameLocations": [
											"1446:5:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1095,
										"src": "1446:5:10"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "1446:5:10"
								},
								{
									"baseName": {
										"id": 1318,
										"name": "AccessControl",
										"nameLocations": [
											"1453:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "1453:13:10"
									},
									"id": 1319,
									"nodeType": "InheritanceSpecifier",
									"src": "1453:13:10"
								},
								{
									"baseName": {
										"id": 1320,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1468:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 580,
										"src": "1468:15:10"
									},
									"id": 1321,
									"nodeType": "InheritanceSpecifier",
									"src": "1468:15:10"
								}
							],
							"canonicalName": "WallyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "937:485:10",
								"text": " @title WallyToken\n @notice \n  - Zero-tax ERC20 token\n  - **AccessControl** with a designated DAO as `ADMIN_ROLE` (not the deployer EOA)\n  - **Advanced Anti-Sniping**: (launchBlock sniper checks, optional cooldown)\n  - Basic anti-bot features: (trading toggle, blacklist, max tx limit)\n  - Liquidity management (Uniswap V2)\n  - Rescue functions for stuck tokens/ETH\n @dev IMPORTANT: The DAO address must be a **secure** address (multi-sig or official DAO)."
							},
							"fullyImplemented": true,
							"id": 1892,
							"linearizedBaseContracts": [
								1892,
								580,
								295,
								1253,
								1265,
								378,
								1095,
								420,
								1199,
								1173,
								1229
							],
							"name": "WallyToken",
							"nameLocation": "1432:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 1326,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "1549:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "1525:61:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1322,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1525:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1324,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1573:12:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1323,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1563:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1325,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1563:23:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1331,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "1616:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "1592:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1327,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1592:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1329,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1640:13:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1328,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1630:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1630:24:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "282c51f3",
									"id": 1336,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "1684:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "1660:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1332,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1660:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1334,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1708:13:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1333,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1698:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1698:24:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 1343,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "1799:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "1775:64:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1775:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_20000000000000000000000000000_by_1",
											"typeString": "int_const 20000000000000000000000000000"
										},
										"id": 1342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32305f3030305f3030305f303030",
											"id": 1338,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1816:14:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_20000000000_by_1",
												"typeString": "int_const 20000000000"
											},
											"value": "20_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1341,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1339,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1833:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1340,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1837:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1833:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1816:23:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20000000000000000000000000000_by_1",
											"typeString": "int_const 20000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f68ded66",
									"id": 1346,
									"mutability": "constant",
									"name": "DAO_ADDRESS",
									"nameLocation": "2022:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "1998:80:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1344,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1998:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836333365613866653432344344363541443444343832366536353831323733616664303642384566",
										"id": 1345,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2036:42:10",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x633ea8fe424CD65AD4D4826e6581273afd06B8Ef"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1694505e",
									"id": 1349,
									"mutability": "mutable",
									"name": "uniswapV2Router",
									"nameLocation": "2161:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "2135:41:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1314",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1348,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1347,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"2135:18:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1314,
											"src": "2135:18:10"
										},
										"referencedDeclaration": 1314,
										"src": "2135:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1314",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "49bd5a5e",
									"id": 1351,
									"mutability": "mutable",
									"name": "uniswapV2Pair",
									"nameLocation": "2197:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "2182:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1350,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2182:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ada218b",
									"id": 1354,
									"mutability": "mutable",
									"name": "tradingEnabled",
									"nameLocation": "2279:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "2267:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1352,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2267:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1353,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2296:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9f92be4",
									"id": 1358,
									"mutability": "mutable",
									"name": "blacklist",
									"nameLocation": "2390:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "2358:41:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1357,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1355,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2366:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2358:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1356,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2377:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c0b5e22",
									"id": 1360,
									"mutability": "mutable",
									"name": "maxTxAmount",
									"nameLocation": "2463:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "2448:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1359,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2448:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "963472f9",
									"id": 1363,
									"mutability": "mutable",
									"name": "sniperProtectionEnabled",
									"nameLocation": "2584:23:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "2572:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1361,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2572:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1362,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2610:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2be29fa8",
									"id": 1366,
									"mutability": "mutable",
									"name": "snipeBlocks",
									"nameLocation": "2669:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "2654:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1364,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2654:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1365,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2683:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d00efb2f",
									"id": 1368,
									"mutability": "mutable",
									"name": "launchBlock",
									"nameLocation": "2769:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "2754:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1367,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2754:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a985ceef",
									"id": 1371,
									"mutability": "mutable",
									"name": "cooldownEnabled",
									"nameLocation": "2911:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "2899:35:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1369,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2899:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1370,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2929:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b319c6b7",
									"id": 1374,
									"mutability": "mutable",
									"name": "cooldownTime",
									"nameLocation": "3008:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "2993:32:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1372,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2993:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3023:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4551bbe9",
									"id": 1378,
									"mutability": "mutable",
									"name": "lastTxTimestamp",
									"nameLocation": "3098:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1892,
									"src": "3063:50:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1377,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1375,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3071:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3063:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1376,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3082:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "beda7dca7bc1b3e80b871f4818129ec73b771581f803d553aeb3484098e5f65a",
									"id": 1382,
									"name": "TradingEnabled",
									"nameLocation": "3185:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "3205:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "3200:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3200:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3199:14:10"
									},
									"src": "3179:35:10"
								},
								{
									"anonymous": false,
									"eventSelector": "cf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8",
									"id": 1388,
									"name": "Blacklisted",
									"nameLocation": "3225:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3253:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3237:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"indexed": false,
												"mutability": "mutable",
												"name": "isBlacklisted",
												"nameLocation": "3267:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3262:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1385,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3262:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:45:10"
									},
									"src": "3219:63:10"
								},
								{
									"anonymous": false,
									"eventSelector": "947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf",
									"id": 1392,
									"name": "MaxTxAmountUpdated",
									"nameLocation": "3293:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxTx",
												"nameLocation": "3320:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "3312:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3312:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:18:10"
									},
									"src": "3287:43:10"
								},
								{
									"anonymous": false,
									"eventSelector": "b31b570d042c886827a2637126edd8ff4f4fe90beb7cb87ffe8c4d2d542c190d",
									"id": 1398,
									"name": "SniperProtectionUpdated",
									"nameLocation": "3341:23:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "3370:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "3365:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"indexed": false,
												"mutability": "mutable",
												"name": "snipeBlocks",
												"nameLocation": "3387:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "3379:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3379:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:35:10"
									},
									"src": "3335:65:10"
								},
								{
									"anonymous": false,
									"eventSelector": "3dd49c7bc5b4083d3ed5845bd08d8d308e600ce46a1bf5fed3466dba31ce9f0c",
									"id": 1404,
									"name": "CooldownUpdated",
									"nameLocation": "3411:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "3432:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "3427:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3427:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"indexed": false,
												"mutability": "mutable",
												"name": "cooldownTime",
												"nameLocation": "3449:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "3441:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3441:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:36:10"
									},
									"src": "3405:58:10"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "4014:1284:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1415,
																"name": "_uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "4032:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4060:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4052:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1416,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4052:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4052:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4032:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f757465722063616e6e6f74206265207a65726f2061646472657373",
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4064:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06",
																"typeString": "literal_string \"Router cannot be zero address\""
															},
															"value": "Router cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60cb879a092adb17e7e2b575bd3ba5442bd05b4ba975ddb735fca6c99bdf4f06",
																"typeString": "literal_string \"Router cannot be zero address\""
															}
														],
														"id": 1414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4024:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4024:72:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "4024:72:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1425,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4221:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4225:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4221:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1427,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "4233:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1424,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "4215:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "4215:33:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1431,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "4412:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1432,
															"name": "DAO_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "4424:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1430,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4401:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4401:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "4401:35:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1436,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "4550:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1437,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "4563:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1435,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "4536:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4536:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "4536:38:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1441,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "4598:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1442,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "4611:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1440,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "4584:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4584:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "4584:38:10"
											},
											{
												"expression": {
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1445,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "4894:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1314",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1447,
																"name": "_uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "4931:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1446,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "4912:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1314_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4912:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1314",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "4894:54:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1314",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "4894:54:10"
											},
											{
												"assignments": [
													1452
												],
												"declarations": [
													{
														"constant": false,
														"id": 1452,
														"mutability": "mutable",
														"name": "factory",
														"nameLocation": "4966:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1480,
														"src": "4958:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1451,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4958:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1456,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1453,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "4976:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1314",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4992:7:10",
														"memberName": "factory",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1287,
														"src": "4976:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
															"typeString": "function () pure external returns (address)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4976:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4958:43:10"
											},
											{
												"assignments": [
													1458
												],
												"declarations": [
													{
														"constant": false,
														"id": 1458,
														"mutability": "mutable",
														"name": "weth",
														"nameLocation": "5019:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1480,
														"src": "5011:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1457,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5011:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1462,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1459,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "5026:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1314",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5042:4:10",
														"memberName": "WETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1292,
														"src": "5026:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
															"typeString": "function () pure external returns (address)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5026:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5011:37:10"
											},
											{
												"expression": {
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1463,
														"name": "uniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "5059:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1470,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5121:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_WallyToken_$1892",
																			"typeString": "contract WallyToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_WallyToken_$1892",
																			"typeString": "contract WallyToken"
																		}
																	],
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5113:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1468,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5113:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5113:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1472,
																"name": "weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "5128:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1465,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "5093:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1464,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "5075:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1281_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5075:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$1281",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5102:10:10",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1280,
															"src": "5075:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5075:58:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5059:74:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "5059:74:10"
											},
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1476,
														"name": "maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "5249:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5263:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5249:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "5249:15:10"
											}
										]
									},
									"documentation": {
										"id": 1405,
										"nodeType": "StructuredDocumentation",
										"src": "3469:474:10",
										"text": " @dev Constructor\n  1) Mints the entire supply to the deployer (msg.sender).\n  2) Sets up roles so that only the DAO address has ADMIN_ROLE.\n  3) Creates a Uniswap V2 pair for (TWG / WETH).\n  4) Leaves the deployer with NO admin privileges by default, fulfilling the requirement \n     that the DAO is the sole admin from the start.\n \n @param _uniswapV2Router Address of the Uniswap V2 router (e.g., 0x7a250d563...)"
									},
									"id": 1481,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "57616c6c7920546f6b656e",
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3992:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_25a3b5375a93e1e2d0517fce195e398e821d4cfd337e215c13a81e93744bc054",
														"typeString": "literal_string \"Wally Token\""
													},
													"value": "Wally Token"
												},
												{
													"hexValue": "545747",
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4007:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_49a2d7f7bfa71920fb9c558db4d991968448efb326b833b9774ba1a076e05946",
														"typeString": "literal_string \"TWG\""
													},
													"value": "TWG"
												}
											],
											"id": 1412,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1409,
												"name": "ERC20",
												"nameLocations": [
													"3986:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1095,
												"src": "3986:5:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3986:27:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "_uniswapV2Router",
												"nameLocation": "3968:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "3960:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3960:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3959:26:10"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4014:0:10"
									},
									"scope": 1892,
									"src": "3948:1350:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "5542:34:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1492,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "5558:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "5562:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1491,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "5552:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5552:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "5552:17:10"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1488,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1331,
													"src": "5529:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1489,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1487,
												"name": "onlyRole",
												"nameLocations": [
													"5520:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5520:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5520:21:10"
										}
									],
									"name": "mint",
									"nameLocation": "5478:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5491:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "5483:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5503:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "5495:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5495:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5482:28:10"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5542:0:10"
									},
									"scope": 1892,
									"src": "5469:107:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "5643:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1506,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "5659:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5659:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1508,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "5673:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1505,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "5653:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5653:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "5653:27:10"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1502,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1336,
													"src": "5630:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1503,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1501,
												"name": "onlyRole",
												"nameLocations": [
													"5621:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5621:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5621:21:10"
										}
									],
									"name": "burn",
									"nameLocation": "5591:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5604:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "5596:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5596:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5595:16:10"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5643:0:10"
									},
									"scope": 1892,
									"src": "5582:105:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "6103:274:10",
										"statements": [
											{
												"expression": {
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1521,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "6113:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1522,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "6130:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6113:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "6113:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1525,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "6243:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1526,
														"name": "sniperProtectionEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "6255:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6243:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1534,
												"nodeType": "IfStatement",
												"src": "6239:92:10",
												"trueBody": {
													"id": 1533,
													"nodeType": "Block",
													"src": "6280:51:10",
													"statements": [
														{
															"expression": {
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1528,
																	"name": "launchBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "6294:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1529,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6308:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6314:6:10",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "6308:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6294:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1532,
															"nodeType": "ExpressionStatement",
															"src": "6294:26:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1536,
															"name": "_enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "6361:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1535,
														"name": "TradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "6346:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6346:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "EmitStatement",
												"src": "6341:29:10"
											}
										]
									},
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "5861:165:10",
										"text": " @dev Enables or disables trading. If enabling, records the `launchBlock` \n      for anti-sniping logic if `sniperProtectionEnabled` is true."
									},
									"functionSelector": "c2e5ec04",
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1518,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1326,
													"src": "6091:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1519,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1517,
												"name": "onlyRole",
												"nameLocations": [
													"6082:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6082:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6082:20:10"
										}
									],
									"name": "setTradingEnabled",
									"nameLocation": "6040:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "6063:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "6058:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6058:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6057:15:10"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6103:0:10"
									},
									"scope": 1892,
									"src": "6031:346:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "6597:149:10",
										"statements": [
											{
												"expression": {
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1551,
														"name": "sniperProtectionEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "6607:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1552,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1543,
														"src": "6633:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6607:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "6607:34:10"
											},
											{
												"expression": {
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1555,
														"name": "snipeBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "6651:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1556,
														"name": "_snipeBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "6665:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6651:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "6651:26:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1560,
															"name": "_enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "6716:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1561,
															"name": "_snipeBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "6726:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1559,
														"name": "SniperProtectionUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "6692:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6692:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1563,
												"nodeType": "EmitStatement",
												"src": "6687:52:10"
											}
										]
									},
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "6383:93:10",
										"text": " @dev Turn sniper protection on or off, and set how many blocks to protect."
									},
									"functionSelector": "89900603",
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1548,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1326,
													"src": "6581:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1547,
												"name": "onlyRole",
												"nameLocations": [
													"6572:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6572:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6572:20:10"
										}
									],
									"name": "setSniperProtection",
									"nameLocation": "6490:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "6515:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "6510:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6510:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "_snipeBlocks",
												"nameLocation": "6533:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "6525:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6525:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6509:37:10"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6597:0:10"
									},
									"scope": 1892,
									"src": "6481:265:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "6965:136:10",
										"statements": [
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1576,
														"name": "cooldownEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "6975:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1577,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "6993:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6975:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "6975:26:10"
											},
											{
												"expression": {
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1580,
														"name": "cooldownTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "7011:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1581,
														"name": "_cooldownTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "7026:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7011:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "7011:28:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1585,
															"name": "_enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "7070:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1586,
															"name": "_cooldownTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "7080:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1584,
														"name": "CooldownUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "7054:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7054:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1588,
												"nodeType": "EmitStatement",
												"src": "7049:45:10"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "6752:93:10",
										"text": " @dev Toggle cooldown enforcement and set the cooldown duration in seconds."
									},
									"functionSelector": "48fca59d",
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1573,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1326,
													"src": "6949:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1574,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1572,
												"name": "onlyRole",
												"nameLocations": [
													"6940:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6940:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6940:20:10"
										}
									],
									"name": "setCooldownConfig",
									"nameLocation": "6859:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "6882:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "6877:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6877:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "_cooldownTime",
												"nameLocation": "6900:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "6892:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6876:38:10"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6965:0:10"
									},
									"scope": 1892,
									"src": "6850:251:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "7367:101:10",
										"statements": [
											{
												"expression": {
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1600,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "7377:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1602,
														"indexExpression": {
															"id": 1601,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "7387:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7377:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1603,
														"name": "isBlacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "7398:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7377:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "7377:34:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1607,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "7438:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1608,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "7447:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1606,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "7426:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7426:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1610,
												"nodeType": "EmitStatement",
												"src": "7421:40:10"
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1597,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1326,
													"src": "7351:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1598,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1596,
												"name": "onlyRole",
												"nameLocations": [
													"7342:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "7342:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7342:20:10"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "7267:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7288:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "7280:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7280:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "isBlacklisted",
												"nameLocation": "7302:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "7297:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1593,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7297:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7279:37:10"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7367:0:10"
									},
									"scope": 1892,
									"src": "7258:210:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "7550:90:10",
										"statements": [
											{
												"expression": {
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1620,
														"name": "maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "7560:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1621,
														"name": "_maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "7574:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7560:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "7560:26:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1625,
															"name": "_maxTxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "7620:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1624,
														"name": "MaxTxAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "7601:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7601:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "EmitStatement",
												"src": "7596:37:10"
											}
										]
									},
									"functionSelector": "ec28438a",
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1617,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1326,
													"src": "7538:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1618,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1616,
												"name": "onlyRole",
												"nameLocations": [
													"7529:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "7529:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7529:20:10"
										}
									],
									"name": "setMaxTxAmount",
									"nameLocation": "7483:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "_maxTxAmount",
												"nameLocation": "7506:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "7498:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7498:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7497:22:10"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7550:0:10"
									},
									"scope": 1892,
									"src": "7474:166:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "8322:425:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1657,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8417:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WallyToken_$1892",
																		"typeString": "contract WallyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WallyToken_$1892",
																		"typeString": "contract WallyToken"
																	}
																],
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8409:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1655,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8409:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8409:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1661,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "8432:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1314",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1314",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8424:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1659,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8424:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8424:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1663,
															"name": "tokenAmountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "8450:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															986,
															1046
														],
														"referencedDeclaration": 986,
														"src": "8400:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8400:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "8400:64:10"
											},
											{
												"expression": {
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1666,
																"name": "amountToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1648,
																"src": "8476:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1667,
																"name": "amountETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1650,
																"src": "8489:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1668,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1652,
																"src": "8500:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1669,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "8475:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1677,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "8606:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_WallyToken_$1892",
																			"typeString": "contract WallyToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_WallyToken_$1892",
																			"typeString": "contract WallyToken"
																		}
																	],
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8598:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1675,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8598:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8598:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1679,
																"name": "tokenAmountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "8625:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1680,
																"name": "tokenAmountMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "8652:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1681,
																"name": "ethAmountMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "8680:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1682,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "8706:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1683,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "8722:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1670,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "8513:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1314",
																		"typeString": "contract IUniswapV2Router02"
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8529:15:10",
																"memberName": "addLiquidityETH",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1313,
																"src": "8513:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
																}
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"expression": {
																		"id": 1672,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8565:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8569:5:10",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "8565:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "8513:71:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8513:227:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"src": "8475:265:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "8475:265:10"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "7804:180:10",
										"text": " @dev Add liquidity (TWG / ETH) on Uniswap. Must transfer `tokenAmountIn` to\n      this contract first, or do it in a two-transaction flow from a front-end."
									},
									"functionSelector": "f6f1e306",
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1643,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1642,
												"name": "nonReentrant",
												"nameLocations": [
													"8200:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "8200:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8200:12:10"
										},
										{
											"arguments": [
												{
													"id": 1645,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1326,
													"src": "8230:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1646,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1644,
												"name": "onlyRole",
												"nameLocations": [
													"8221:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "8221:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8221:20:10"
										}
									],
									"name": "addLiquidityETH",
									"nameLocation": "7998:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8031:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8023:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8023:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "tokenAmountIn",
												"nameLocation": "8051:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8043:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8043:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "tokenAmountMin",
												"nameLocation": "8082:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8074:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8074:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "ethAmountMin",
												"nameLocation": "8114:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8106:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8106:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "8144:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8136:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8136:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8013:145:10"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "8267:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8259:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8259:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "8288:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8280:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8280:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "8307:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8299:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8258:59:10"
									},
									"scope": 1892,
									"src": "7989:758:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "9299:1933:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9384:16:10",
															"subExpression": {
																"baseExpression": {
																	"id": 1699,
																	"name": "blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "9385:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1701,
																"indexExpression": {
																	"id": 1700,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "9395:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9385:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57616c6c79546f6b656e3a2053656e64657220626c61636b6c6973746564",
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9402:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77e58901921160a029805327a8c6233a9cb53589e825c22d86bff7123a61ffca",
																"typeString": "literal_string \"WallyToken: Sender blacklisted\""
															},
															"value": "WallyToken: Sender blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77e58901921160a029805327a8c6233a9cb53589e825c22d86bff7123a61ffca",
																"typeString": "literal_string \"WallyToken: Sender blacklisted\""
															}
														],
														"id": 1698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9376:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9376:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "9376:59:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9453:14:10",
															"subExpression": {
																"baseExpression": {
																	"id": 1707,
																	"name": "blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "9454:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1709,
																"indexExpression": {
																	"id": 1708,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1693,
																	"src": "9464:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9454:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57616c6c79546f6b656e3a20526563697069656e7420626c61636b6c6973746564",
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9471:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c71141ddd9fedb411cbf2263647ad0814342563bf3615ea0f959a0a988a97f7",
																"typeString": "literal_string \"WallyToken: Recipient blacklisted\""
															},
															"value": "WallyToken: Recipient blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c71141ddd9fedb411cbf2263647ad0814342563bf3615ea0f959a0a988a97f7",
																"typeString": "literal_string \"WallyToken: Recipient blacklisted\""
															}
														],
														"id": 1706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9445:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9445:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "9445:62:10"
											},
											{
												"condition": {
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9589:15:10",
													"subExpression": {
														"id": 1714,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "9590:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1734,
												"nodeType": "IfStatement",
												"src": "9585:176:10",
												"trueBody": {
													"id": 1733,
													"nodeType": "Block",
													"src": "9606:155:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "9624:26:10",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1717,
																				"name": "ADMIN_ROLE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1326,
																				"src": "9633:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 1718,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1691,
																				"src": "9645:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1716,
																			"name": "hasRole",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 80,
																			"src": "9625:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (bytes32,address) view returns (bool)"
																			}
																		},
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9625:25:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "9654:24:10",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1722,
																				"name": "ADMIN_ROLE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1326,
																				"src": "9663:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 1723,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1693,
																				"src": "9675:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1721,
																			"name": "hasRole",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 80,
																			"src": "9655:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (bytes32,address) view returns (bool)"
																			}
																		},
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9655:23:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9624:54:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1732,
															"nodeType": "IfStatement",
															"src": "9620:131:10",
															"trueBody": {
																"id": 1731,
																"nodeType": "Block",
																"src": "9680:71:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "57616c6c79546f6b656e3a2054726164696e672064697361626c6564",
																					"id": 1728,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9705:30:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_bc0e1f442355c38ee74b9103cb66e8d7fd081a61fcb0ce59b63e4b160a2a6d3d",
																						"typeString": "literal_string \"WallyToken: Trading disabled\""
																					},
																					"value": "WallyToken: Trading disabled"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_bc0e1f442355c38ee74b9103cb66e8d7fd081a61fcb0ce59b63e4b160a2a6d3d",
																						"typeString": "literal_string \"WallyToken: Trading disabled\""
																					}
																				],
																				"id": 1727,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "9698:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9698:38:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1730,
																		"nodeType": "ExpressionStatement",
																		"src": "9698:38:10"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1735,
															"name": "maxTxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "9811:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9825:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9811:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1738,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "9830:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1739,
															"name": "maxTxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "9839:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9830:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9811:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1747,
												"nodeType": "IfStatement",
												"src": "9807:111:10",
												"trueBody": {
													"id": 1746,
													"nodeType": "Block",
													"src": "9852:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "57616c6c79546f6b656e3a2045786365656473206d61785478416d6f756e74",
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9873:33:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4172a326be153b9a971b7bfdbab038725b2616163f74d8665b613836abe28586",
																			"typeString": "literal_string \"WallyToken: Exceeds maxTxAmount\""
																		},
																		"value": "WallyToken: Exceeds maxTxAmount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_4172a326be153b9a971b7bfdbab038725b2616163f74d8665b613836abe28586",
																			"typeString": "literal_string \"WallyToken: Exceeds maxTxAmount\""
																		}
																	],
																	"id": 1742,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9866:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9866:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1745,
															"nodeType": "ExpressionStatement",
															"src": "9866:41:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1748,
																"name": "sniperProtectionEnabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "10090:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1749,
																"name": "tradingEnabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "10129:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10090:53:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1751,
																"name": "launchBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "10159:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10173:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10159:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "10090:84:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1755,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10190:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10196:6:10",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "10190:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1757,
																		"name": "launchBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "10207:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1758,
																		"name": "snipeBlocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "10221:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10207:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1760,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10206:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10190:43:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10090:143:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1773,
												"nodeType": "IfStatement",
												"src": "10073:434:10",
												"trueBody": {
													"id": 1772,
													"nodeType": "Block",
													"src": "10244:263:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1763,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "10401:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1764,
																	"name": "uniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "10409:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10401:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1771,
															"nodeType": "IfStatement",
															"src": "10397:100:10",
															"trueBody": {
																"id": 1770,
																"nodeType": "Block",
																"src": "10424:73:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "57616c6c79546f6b656e3a20536e697065722062757920626c6f636b6564",
																					"id": 1767,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10449:32:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_eabf0a9e182fb2f3ef924d95073679b74129f73b7fe81595683e30be74f89395",
																						"typeString": "literal_string \"WallyToken: Sniper buy blocked\""
																					},
																					"value": "WallyToken: Sniper buy blocked"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_eabf0a9e182fb2f3ef924d95073679b74129f73b7fe81595683e30be74f89395",
																						"typeString": "literal_string \"WallyToken: Sniper buy blocked\""
																					}
																				],
																				"id": 1766,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "10442:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10442:40:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1769,
																		"nodeType": "ExpressionStatement",
																		"src": "10442:40:10"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"id": 1774,
													"name": "cooldownEnabled",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1371,
													"src": "10673:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1819,
												"nodeType": "IfStatement",
												"src": "10669:556:10",
												"trueBody": {
													"id": 1818,
													"nodeType": "Block",
													"src": "10690:535:10",
													"statements": [
														{
															"assignments": [
																1776
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1776,
																	"mutability": "mutable",
																	"name": "isExempt",
																	"nameLocation": "10764:8:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1818,
																	"src": "10759:13:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1775,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "10759:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1794,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1778,
																					"name": "ADMIN_ROLE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1326,
																					"src": "10783:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 1779,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1691,
																					"src": "10795:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1777,
																				"name": "hasRole",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "10775:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																					"typeString": "function (bytes32,address) view returns (bool)"
																				}
																			},
																			"id": 1780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10775:25:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1782,
																					"name": "ADMIN_ROLE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1326,
																					"src": "10828:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 1783,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1693,
																					"src": "10840:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1781,
																				"name": "hasRole",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "10820:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																					"typeString": "function (bytes32,address) view returns (bool)"
																				}
																			},
																			"id": 1784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10820:23:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "10775:68:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1786,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "10863:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1787,
																			"name": "uniswapV2Pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1351,
																			"src": "10871:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "10863:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "10775:109:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1790,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "10904:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1791,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1351,
																		"src": "10910:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "10904:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "10775:148:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10759:164:10"
														},
														{
															"condition": {
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "10954:9:10",
																"subExpression": {
																	"id": 1795,
																	"name": "isExempt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1776,
																	"src": "10955:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1817,
															"nodeType": "IfStatement",
															"src": "10950:265:10",
															"trueBody": {
																"id": 1816,
																"nodeType": "Block",
																"src": "10965:250:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1798,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "11012:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1799,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11018:9:10",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "11012:15:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1804,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 1800,
																								"name": "lastTxTimestamp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1378,
																								"src": "11031:15:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 1802,
																							"indexExpression": {
																								"id": 1801,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1691,
																								"src": "11047:4:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "11031:21:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 1803,
																							"name": "cooldownTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1374,
																							"src": "11055:12:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11031:36:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11012:55:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "57616c6c79546f6b656e3a204d757374207761697420666f7220636f6f6c646f776e",
																					"id": 1806,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11089:36:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e17782564d6d0267e4ae50f6ba58126406558ceb213f0b651ebb185cc7455199",
																						"typeString": "literal_string \"WallyToken: Must wait for cooldown\""
																					},
																					"value": "WallyToken: Must wait for cooldown"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_e17782564d6d0267e4ae50f6ba58126406558ceb213f0b651ebb185cc7455199",
																						"typeString": "literal_string \"WallyToken: Must wait for cooldown\""
																					}
																				],
																				"id": 1797,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "10983:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10983:160:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1808,
																		"nodeType": "ExpressionStatement",
																		"src": "10983:160:10"
																	},
																	{
																		"expression": {
																			"id": 1814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1809,
																					"name": "lastTxTimestamp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1378,
																					"src": "11161:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1811,
																				"indexExpression": {
																					"id": 1810,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1691,
																					"src": "11177:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "11161:21:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1812,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "11185:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11191:9:10",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "11185:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11161:39:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1815,
																		"nodeType": "ExpressionStatement",
																		"src": "11161:39:10"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "8915:268:10",
										"text": " @dev Hook to enforce:\n  1) Trading toggle restrictions\n  2) Blacklist checks\n  3) Max transaction limit\n  4) Sniper protection (blocks initial sniping within `snipeBlocks` of enabling)\n  5) Optional per-address cooldown"
									},
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "9197:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9235:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "9227:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9227:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9257:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "9249:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9249:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9277:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "9269:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9269:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9217:72:10"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9299:0:10"
									},
									"scope": 1892,
									"src": "9188:2044:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "11519:108:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1834,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "11537:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11551:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11543:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1835,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11543:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11543:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11537:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642027746f27",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11555:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436",
																"typeString": "literal_string \"Invalid 'to'\""
															},
															"value": "Invalid 'to'"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436",
																"typeString": "literal_string \"Invalid 'to'\""
															}
														],
														"id": 1833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11529:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11529:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "11529:41:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1847,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "11609:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1848,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "11613:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1844,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "11586:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1843,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "11580:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$1095_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11580:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1095",
																"typeString": "contract ERC20"
															}
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11600:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "11580:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11580:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1850,
												"nodeType": "ExpressionStatement",
												"src": "11580:40:10"
											}
										]
									},
									"functionSelector": "b37fd190",
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1830,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1326,
													"src": "11503:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1829,
												"name": "onlyRole",
												"nameLocations": [
													"11494:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "11494:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "11494:20:10"
										}
									],
									"name": "rescueTokens",
									"nameLocation": "11406:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "11427:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "11419:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11419:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11449:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "11441:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11441:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11465:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "11457:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11457:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11418:50:10"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11519:0:10"
									},
									"scope": 1892,
									"src": "11397:230:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "11738:162:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1863,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "11756:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11770:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11762:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1864,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11762:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11762:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11756:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642027746f27",
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11774:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436",
																"typeString": "literal_string \"Invalid 'to'\""
															},
															"value": "Invalid 'to'"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_159197de639a69fdbdcd70b064a0cab3dc7748351e850014f40f67de0511d436",
																"typeString": "literal_string \"Invalid 'to'\""
															}
														],
														"id": 1862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11748:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11748:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1871,
												"nodeType": "ExpressionStatement",
												"src": "11748:41:10"
											},
											{
												"assignments": [
													1873,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1873,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "11805:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1886,
														"src": "11800:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1872,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11800:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1880,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11841:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1874,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "11818:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11821:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "11818:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1876,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "11833:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11818:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11818:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11799:45:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1882,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "11862:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455448207472616e73666572206661696c6564",
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11871:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																"typeString": "literal_string \"ETH transfer failed\""
															},
															"value": "ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																"typeString": "literal_string \"ETH transfer failed\""
															}
														],
														"id": 1881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11854:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11854:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "11854:39:10"
											}
										]
									},
									"functionSelector": "099a04e5",
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1859,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1326,
													"src": "11722:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1860,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1858,
												"name": "onlyRole",
												"nameLocations": [
													"11713:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "11713:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "11713:20:10"
										}
									],
									"name": "rescueETH",
									"nameLocation": "11642:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11668:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "11652:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11652:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11680:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "11672:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11672:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11651:36:10"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11738:0:10"
									},
									"scope": 1892,
									"src": "11633:267:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "11951:2:10",
										"statements": []
									},
									"id": 1891,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11931:2:10"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11951:0:10"
									},
									"scope": 1892,
									"src": "11924:29:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1893,
							"src": "1423:10532:10",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								317,
								326,
								335,
								1107,
								1116,
								1382,
								1388,
								1392,
								1398,
								1404
							]
						}
					],
					"src": "32:11923:10"
				},
				"id": 10
			}
		}
	}
}