{
	"id": "73152b938fc04a85ff72be4dabf12def",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"abi",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/WallyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/* -----------------------------------------------------\n * Custom Errors\n * ---------------------------------------------------- */\nerror TradingDisabled();\nerror BlacklistedSender();\nerror BlacklistedRecipient();\nerror ExceedsMaxTx();\nerror SniperBuyBlocked();\nerror MustWaitCooldown();\nerror ApproveNonZero();\n\ninterface IUniswapV2Factory {\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n}\ninterface IUniswapV2Router02 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    )\n        external\n        payable\n        returns (uint amountToken, uint amountETH, uint liquidity);\n}\n\n/**\n * @title WallyToken\n * @dev Zero-tax ERC20. Uses AccessControl for admin. Anti-sniping logic, front-running approve fix, etc.\n */\ncontract WallyToken is ERC20, AccessControl, ReentrancyGuard {\n    bytes32 private constant _ADMIN_ROLE  = keccak256(\"ADMIN_ROLE\");\n    bytes32 private constant _MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 private constant _BURNER_ROLE = keccak256(\"BURNER_ROLE\");\n\n    uint256 private constant _INITIAL_SUPPLY = 20e9 * 1e18; \n\n    address private immutable _daoAddress;\n\n    IUniswapV2Router02 private _uniswapV2Router;\n    address private _uniswapV2Pair;\n\n    struct UserData {\n        bool blacklisted;\n        uint256 lastTx;\n    }\n    mapping(address user => UserData) private _userData;\n\n    bool private _tradingEnabled;\n    bool private _sniperProtectionEnabled;\n    uint256 private _snipeTime = 30;       \n    uint256 private _launchTimestamp;\n\n    bool private _cooldownEnabled;\n    uint256 private _cooldownTime = 30;    \n\n    uint256 private _maxTxAmount; \n\n    event TradingEnabledSet(bool indexed enabled);\n    event SniperProtectionSet(bool indexed enabled, uint256 indexed timeSeconds);\n    event CooldownSet(bool indexed enabled, uint256 indexed timeSeconds);\n    event MaxTxAmountSet(uint256 indexed newMaxTx);\n    event UserBlacklistedSet(address indexed user, bool indexed isBlacklisted);\n    event TokensRescued(address indexed token, uint256 amount, address indexed to);\n    event LiquidityAddRequested(address indexed admin, address indexed to, uint256 tokenAmountIn, uint256 ethAmount);\n    event LiquidityAdded(address indexed to, uint256 tokenAmount, uint256 ethAmount, uint256 liquidity);\n    event Minted(address indexed to, uint256 amount);\n    event Burned(address indexed from, uint256 amount);\n    event ReceivedEther(address indexed from, uint256 amount);\n\n    constructor(address uniswapV2Router_, address daoAddress_)\n        payable\n        ERC20(\"Wally Token\", \"TWG\")\n    {\n        require(uniswapV2Router_ != address(0), \"Zero router\");\n        require(daoAddress_ != address(0), \"Zero DAO\");\n\n        _daoAddress = daoAddress_;\n\n        _mint(msg.sender, _INITIAL_SUPPLY);\n\n        _grantRole(_ADMIN_ROLE, _daoAddress);\n        _setRoleAdmin(_MINTER_ROLE, _ADMIN_ROLE);\n        _setRoleAdmin(_BURNER_ROLE, _ADMIN_ROLE);\n\n        IUniswapV2Router02 router = IUniswapV2Router02(uniswapV2Router_);\n        _uniswapV2Router = router;\n        address factory = router.factory();\n        address weth = router.WETH();\n\n        address self_ = address(this);\n        _uniswapV2Pair = IUniswapV2Factory(factory).createPair(self_, weth);\n\n        _maxTxAmount = 0;\n        _tradingEnabled = false;\n        _sniperProtectionEnabled = false;\n        _cooldownEnabled = false;\n    }\n\n    /**\n     * @dev Approve fix for front-running (H001).\n     */\n    function approve(address spender, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        uint256 current = allowance(msg.sender, spender);\n        // Must zero out old allowance before setting new, or revert\n        if (current != 0 && amount != 0) {\n            revert ApproveNonZero();\n        }\n        return super.approve(spender, amount);\n    }\n\n    // Force partial allowance changes to revert\n    function increaseAllowance(address /*spender*/, uint256 /*addedValue*/)\n        public\n        virtual\n        returns (bool)\n    {\n        revert(\"Use approve() to set to 0 first\");\n    }\n    function decreaseAllowance(address /*spender*/, uint256 /*subtractedValue*/)\n        public\n        virtual\n        returns (bool)\n    {\n        revert(\"Use approve() to set to 0 first\");\n    }\n\n    // Mint & Burn\n    function mint(address to, uint256 amount) external onlyRole(_MINTER_ROLE) {\n        _mint(to, amount);\n        emit Minted(to, amount);\n    }\n\n    function burn(uint256 amount) external onlyRole(_BURNER_ROLE) {\n        _burn(_msgSender(), amount);\n        emit Burned(_msgSender(), amount);\n    }\n\n    // Setters\n    function setTradingEnabled(bool enabled)\n        external\n        nonReentrant\n        onlyRole(_ADMIN_ROLE)\n    {\n        if (_tradingEnabled != enabled) {\n            _tradingEnabled = enabled;\n            emit TradingEnabledSet(enabled);\n            if (enabled && _sniperProtectionEnabled) {\n                _launchTimestamp = block.timestamp; \n            }\n        }\n    }\n\n    function setSniperProtection(bool enabled, uint256 timeSeconds)\n        external\n        nonReentrant\n        onlyRole(_ADMIN_ROLE)\n    {\n        if (_sniperProtectionEnabled != enabled) {\n            _sniperProtectionEnabled = enabled;\n        }\n        if (_snipeTime != timeSeconds) {\n            _snipeTime = timeSeconds;\n        }\n        emit SniperProtectionSet(enabled, timeSeconds);\n    }\n\n    function setCooldownConfig(bool enabled, uint256 cooldownSec)\n        external\n        nonReentrant\n        onlyRole(_ADMIN_ROLE)\n    {\n        if (_cooldownEnabled != enabled) {\n            _cooldownEnabled = enabled;\n        }\n        if (_cooldownTime != cooldownSec) {\n            _cooldownTime = cooldownSec;\n        }\n        emit CooldownSet(enabled, cooldownSec);\n    }\n\n    function setMaxTxAmount(uint256 maxTx)\n        external\n        nonReentrant\n        onlyRole(_ADMIN_ROLE)\n    {\n        if (_maxTxAmount != maxTx) {\n            _maxTxAmount = maxTx;\n            emit MaxTxAmountSet(maxTx);\n        }\n    }\n\n    function setBlacklist(address user, bool blacklisted_)\n        external\n        nonReentrant\n        onlyRole(_ADMIN_ROLE)\n    {\n        UserData storage data = _userData[user];\n        if (data.blacklisted != blacklisted_) {\n            data.blacklisted = blacklisted_;\n            emit UserBlacklistedSet(user, blacklisted_);\n        }\n    }\n\n    // Public getters\n    function daoAddress() external view returns (address) {\n        return _daoAddress;\n    }\n    function uniswapV2Router() external view returns (address) {\n        return address(_uniswapV2Router);\n    }\n    function uniswapV2Pair() external view returns (address) {\n        return _uniswapV2Pair;\n    }\n    function tradingEnabled() external view returns (bool) {\n        return _tradingEnabled;\n    }\n    function sniperProtectionEnabled() external view returns (bool) {\n        return _sniperProtectionEnabled;\n    }\n    function snipeTime() external view returns (uint256) {\n        return _snipeTime;\n    }\n    function launchTimestamp() external view returns (uint256) {\n        return _launchTimestamp;\n    }\n    function cooldownEnabled() external view returns (bool) {\n        return _cooldownEnabled;\n    }\n    function cooldownTime() external view returns (uint256) {\n        return _cooldownTime;\n    }\n    function maxTxAmount() external view returns (uint256) {\n        return _maxTxAmount;\n    }\n    function isBlacklisted(address user) external view returns (bool) {\n        return _userData[user].blacklisted;\n    }\n\n    // Add Liquidity\n    function addLiquidityETH(\n        address to,\n        uint256 tokenAmountIn,\n        uint256 tokenAmountMin,\n        uint256 ethAmountMin,\n        uint256 deadline\n    )\n        external\n        payable\n        nonReentrant\n        onlyRole(_ADMIN_ROLE)\n        returns (uint256 amountToken, uint256 amountETH, uint256 liquidity)\n    {\n        emit LiquidityAddRequested(msg.sender, to, tokenAmountIn, msg.value);\n\n        address self_ = address(this);\n        IUniswapV2Router02 router = _uniswapV2Router;\n\n        _approve(self_, address(router), tokenAmountIn);\n\n        (amountToken, amountETH, liquidity) = router.addLiquidityETH{value: msg.value}(\n            self_,\n            tokenAmountIn,\n            tokenAmountMin,\n            ethAmountMin,\n            to,\n            deadline\n        );\n\n        emit LiquidityAdded(to, amountToken, amountETH, liquidity);\n        return (amountToken, amountETH, liquidity);\n    }\n\n    /**\n     * @dev Hook to enforce anti-bot checks before any non-mint/non-burn transfer.\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n        internal\n        virtual\n    {\n        // Only apply checks if normal transfer\n        if (from != address(0) && to != address(0) && amount != 0) {\n            UserData storage senderData = _userData[from];\n            UserData storage recipientData = _userData[to];\n\n            if (senderData.blacklisted) revert BlacklistedSender();\n            if (recipientData.blacklisted) revert BlacklistedRecipient();\n\n            bool tradingActive = _tradingEnabled;\n            if (!tradingActive) {\n                bool fromIsAdmin = hasRole(_ADMIN_ROLE, from);\n                bool toIsAdmin   = hasRole(_ADMIN_ROLE, to);\n                if (!fromIsAdmin && !toIsAdmin) {\n                    revert TradingDisabled();\n                }\n            }\n\n            uint256 localMaxTx = _maxTxAmount;\n            if (localMaxTx != 0 && amount > localMaxTx) {\n                revert ExceedsMaxTx();\n            }\n\n            bool sniperOn = _sniperProtectionEnabled;\n            if (\n                sniperOn &&\n                tradingActive &&\n                _launchTimestamp != 0 &&\n                block.timestamp <= (_launchTimestamp + _snipeTime)\n            ) {\n                // \"buy\" from Uniswap pair\n                if (from == _uniswapV2Pair) {\n                    revert SniperBuyBlocked();\n                }\n            }\n\n            bool cooldownOn = _cooldownEnabled;\n            if (cooldownOn) {\n                bool fromIsAdmin_ = hasRole(_ADMIN_ROLE, from);\n                bool toIsAdmin_   = hasRole(_ADMIN_ROLE, to);\n\n                // If neither side is admin and it's not a direct swap from/to Uniswap, enforce cooldown\n                if (!fromIsAdmin_ && !toIsAdmin_ && from != _uniswapV2Pair && to != _uniswapV2Pair) {\n                    uint256 lastTx = senderData.lastTx;\n                    if (block.timestamp < (lastTx + _cooldownTime)) {\n                        revert MustWaitCooldown();\n                    }\n                    senderData.lastTx = block.timestamp;\n                }\n            }\n        }\n        _beforeTokenTransfer(from, to, amount);\n    }\n\n    // Rescue\n    function rescueTokens(address tokenAddress, uint256 amount, address to)\n        external\n        nonReentrant\n        onlyRole(_ADMIN_ROLE)\n    {\n        require(to != address(0), \"Zero 'to'\");\n        IERC20(tokenAddress).transfer(to, amount);\n        emit TokensRescued(tokenAddress, amount, to);\n    }\n\n    function rescueETH(address payable to, uint256 amount)\n        external\n        payable\n        nonReentrant\n        onlyRole(_ADMIN_ROLE)\n    {\n        require(to != address(0), \"Zero 'to'\");\n        emit TokensRescued(address(0), amount, to);\n\n        (bool success, ) = to.call{value: amount}(\"\");\n        require(success, \"ETH fail\");\n    }\n\n    receive() external payable {\n        emit ReceivedEther(msg.sender, msg.value);\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 603,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 609,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 611,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 613,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 615,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WallyToken.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"WallyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "uniswapV2Router_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "daoAddress_",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveNonZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "timeSeconds",
									"type": "uint256"
								}
							],
							"name": "CooldownSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "LiquidityAddRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "newMaxTx",
									"type": "uint256"
								}
							],
							"name": "MaxTxAmountSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ReceivedEther",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "timeSeconds",
									"type": "uint256"
								}
							],
							"name": "SniperProtectionSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "TokensRescued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "TradingEnabledSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "isBlacklisted",
									"type": "bool"
								}
							],
							"name": "UserBlacklistedSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmountMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ethAmountMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldownEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldownTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "daoAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "launchTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTxAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "blacklisted_",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "cooldownSec",
									"type": "uint256"
								}
							],
							"name": "setCooldownConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxTx",
									"type": "uint256"
								}
							],
							"name": "setMaxTxAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "timeSeconds",
									"type": "uint256"
								}
							],
							"name": "setSniperProtection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "setTradingEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snipeTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sniperProtectionEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"evm": {
						"assembly": "    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0xa0\n  dup1\n  0x40\n  mstore\n  0x40\n  dup2\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  swap2\n  tag_4\n  dup3\n  dup6\n  tag_1\n  jump\t// in\ntag_4:\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_61\n  jumpi\n  tag_7\n  0x20\n  tag_8\n  dup4\n  tag_2\n  jump\t// in\ntag_8:\n  swap3\n  add\n  tag_2\n  jump\t// in\ntag_7:\n  swap1\n  mload(0x40)\n  swap2\n  tag_9\n  0x40\n  dup5\n  tag_1\n  jump\t// in\ntag_9:\n  0x0b\n  dup4\n  mstore\n  shl(0xa9, 0x2bb0b6363c902a37b5b2b7)\n  0x20\n  dup5\n  add\n  mstore\n  mload(0x40)\n  swap2\n  tag_10\n  0x40\n  dup5\n  tag_1\n  jump\t// in\ntag_10:\n  0x03\n  dup4\n  mstore\n  shl(0xe8, 0x545747)\n  0x20\n  dup5\n  add\n  mstore\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_24\n  jumpi\n  sload(0x03)\n  0x01\n  dup2\n  dup2\n  shr\n  swap2\n  and\n  dup1\n  iszero\n  tag_13\n  jumpi\ntag_14:\n  0x20\n  dup3\n  lt\n  eq\n  tag_28\n  jumpi\n  0x1f\n  dup2\n  gt\n  tag_17\n  jumpi\ntag_18:\n  pop\n  0x20\n  swap5\n  0x1f\n  dup3\n  gt\n  0x01\n  eq\n  tag_19\n  jumpi\n  swap5\n  dup2\n  swap3\n  swap4\n  swap5\n  swap6\n  0x00\n  swap3\n  tag_21\n  jumpi\ntag_22:\n  pop\n  pop\n  dup2\n  0x01\n  shl\n  swap2\n  not(0x00)\n  swap1\n  0x03\n  shl\n  shr\n  not\n  and\n  or\n  0x03\n  sstore\ntag_23:\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_24\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  sload\n  0x01\n  dup2\n  dup2\n  shr\n  swap2\n  and\n  dup1\n  iszero\n  tag_26\n  jumpi\ntag_27:\n  0x20\n  dup3\n  lt\n  eq\n  tag_28\n  jumpi\n  0x1f\n  dup2\n  gt\n  tag_30\n  jumpi\ntag_31:\n  pop\n  0x20\n  0x1f\n  dup3\n  gt\n  0x01\n  eq\n  tag_32\n  jumpi\n  dup2\n  swap3\n  swap4\n  swap5\n  0x00\n  swap3\n  tag_34\n  jumpi\ntag_35:\n  pop\n  pop\n  dup2\n  0x01\n  shl\n  swap2\n  not(0x00)\n  swap1\n  0x03\n  shl\n  shr\n  not\n  and\n  or\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  sstore\ntag_36:\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x06\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  sstore\n    /* \"contracts/WallyToken.sol\":1952:1954  30 */\n  0x1e\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x0b\n  dup2\n  swap1\n  sstore\n    /* \"contracts/WallyToken.sol\":2073:2075  30 */\n  0x0e\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"contracts/WallyToken.sol\":3075:3105  uniswapV2Router_ != address(0) */\n  dup2\n  iszero\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  tag_37\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n    /* \"contracts/WallyToken.sol\":3139:3164  daoAddress_ != address(0) */\n  iszero\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  tag_39\n  jumpi\n    /* \"contracts/WallyToken.sol\":3188:3213  _daoAddress = daoAddress_ */\n  0x80\n  mstore\n    /* \"contracts/WallyToken.sol\":3230:3240  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  0x02\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  sload\n    /* \"contracts/WallyToken.sol\":1561:1572  20e9 * 1e18 */\n  0x409f9cbc7c4a04c220000000\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup2\n  add\n  dup1\n  swap2\n  gt\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  0x02\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  sstore\n    /* \"contracts/WallyToken.sol\":3230:3240  msg.sender */\n  caller\n  0x00\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mstore\n  mstore(0x20, 0x00)\n  keccak256(0x00, 0x40)\n    /* \"contracts/WallyToken.sol\":1561:1572  20e9 * 1e18 */\n  0x409f9cbc7c4a04c220000000\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup2\n  sload\n  add\n  swap1\n  sstore\n  mload(0x40)\n    /* \"contracts/WallyToken.sol\":1561:1572  20e9 * 1e18 */\n  0x409f9cbc7c4a04c220000000\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup2\n  mstore\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n    /* \"contracts/WallyToken.sol\":3230:3240  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  swap4\n  log3\n    /* \"contracts/WallyToken.sol\":3188:3213  _daoAddress = daoAddress_ */\n  0x80\n    /* \"contracts/WallyToken.sol\":1348:1371  keccak256(\"ADMIN_ROLE\") */\n  mload\n    /* \"contracts/WallyToken.sol\":3269:3305  _grantRole(_ADMIN_ROLE, _daoAddress) */\n  tag_45\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  and\n    /* \"contracts/WallyToken.sol\":3269:3305  _grantRole(_ADMIN_ROLE, _daoAddress) */\n  tag_3\n  jump\t// in\ntag_45:\n  pop\n    /* \"contracts/WallyToken.sol\":1417:1441  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n  0x00\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup2\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n  0x05\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0x15a28d26fa1bf736cf7edc9922607171ccb09c3c73b808e7772a3013e068a523\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup1\n  sload\n  mload(0x00)\n  codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  swap2\n  dup3\n  swap1\n  sstore\n    /* \"contracts/WallyToken.sol\":1348:1371  keccak256(\"ADMIN_ROLE\") */\n  swap1\n  swap3\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  swap1\n  swap2\n  mload(0x00)\n  codecopy(0x00, data_0cc6bfbb777b5ba8a5fa65e7400d0765a2fbd8cfce940c84f5480427bf0c914d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  swap1\n  dup1\n  log4\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n  0x00\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup2\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n  0x05\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0x847f481f687befb06ed3511f1a8dcef57e83007c0147ae5047583d7056170938\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup1\n  sload\n  mload(0x00)\n  codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  swap2\n  dup3\n  swap1\n  sstore\n    /* \"contracts/WallyToken.sol\":1348:1371  keccak256(\"ADMIN_ROLE\") */\n  swap1\n  swap3\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  swap1\n  swap2\n  mload(0x00)\n  codecopy(0x00, data_0cc6bfbb777b5ba8a5fa65e7400d0765a2fbd8cfce940c84f5480427bf0c914d, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  swap1\n  dup1\n  log4\n    /* \"contracts/WallyToken.sol\":3490:3515  _uniswapV2Router = router */\n  0x07\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mload(0x40)\n  shl(0xe0, 0xc45a0155)\n    /* \"contracts/WallyToken.sol\":3543:3559  router.factory() */\n  dup2\n  mstore\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  swap1\n  0x20\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup2\n  dup5\n    /* \"contracts/WallyToken.sol\":3543:3559  router.factory() */\n  gas\n  staticcall\n  swap2\n  dup3\n  iszero\n  tag_54\n  jumpi\n  0x00\n  swap3\n  tag_48\n  jumpi\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\ntag_49:\n  pop\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  swap2\n  mload(0x40)\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  swap3\n  dup4\n  dup1\n  swap3\n  shl(0xe3, 0x15ab88c9)\n    /* \"contracts/WallyToken.sol\":3584:3597  router.WETH() */\n  dup3\n  mstore\n  gas\n  staticcall\n  swap1\n  dup2\n  iszero\n  tag_54\n  jumpi\n  0x00\n  swap2\n  tag_52\n  jumpi\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\ntag_53:\n  pop\n  mload(0x40)\n  shl(0xe1, 0x64e329cb)\n    /* \"contracts/WallyToken.sol\":3664:3714  IUniswapV2Factory(factory).createPair(self_, weth) */\n  dup2\n  mstore\n    /* \"contracts/WallyToken.sol\":3632:3636  this */\n  address\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":3664:3714  IUniswapV2Factory(factory).createPair(self_, weth) */\n  dup3\n  add\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  swap2\n  dup3\n  and\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  0x24\n  dup3\n  add\n  mstore\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  swap2\n  0x20\n  swap2\n  dup4\n  swap2\n    /* \"contracts/WallyToken.sol\":3664:3714  IUniswapV2Factory(factory).createPair(self_, weth) */\n  0x44\n  swap2\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup4\n  swap2\n  0x00\n  swap2\n  and\n    /* \"contracts/WallyToken.sol\":3664:3714  IUniswapV2Factory(factory).createPair(self_, weth) */\n  gas\n  call\n  swap1\n  dup2\n  iszero\n  tag_54\n  jumpi\n  0x00\n  swap2\n  tag_56\n  jumpi\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\ntag_57:\n  pop\n    /* \"contracts/WallyToken.sol\":3647:3714  _uniswapV2Pair = IUniswapV2Factory(factory).createPair(self_, weth) */\n  0x08\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  swap3\n  swap1\n  swap3\n  and\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x00\n    /* \"contracts/WallyToken.sol\":3725:3741  _maxTxAmount = 0 */\n  0x0f\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  sstore\n    /* \"contracts/WallyToken.sol\":3751:3774  _tradingEnabled = false */\n  0x0a\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  dup1\n  sload\n  not(0xffff)\n  and\n  swap1\n  sstore\n    /* \"contracts/WallyToken.sol\":3826:3850  _cooldownEnabled = false */\n  0x0d\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"contracts/WallyToken.sol\":3188:3213  _daoAddress = daoAddress_ */\n  0x80\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mload\n  dup2\n  assignImmutable(\"0xd4585d973f6cb05f7dca9ebe127c2460285bc70f09a7025a97fbb5c7cafe081b\")\n  return\n    /* \"contracts/WallyToken.sol\":3664:3714  IUniswapV2Factory(factory).createPair(self_, weth) */\ntag_56:\n  swap1\n  pop\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n    /* \"contracts/WallyToken.sol\":3664:3714  IUniswapV2Factory(factory).createPair(self_, weth) */\n  dup2\n  returndatasize\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n    /* \"contracts/WallyToken.sol\":3664:3714  IUniswapV2Factory(factory).createPair(self_, weth) */\n  gt\n  tag_58\n  jumpi\ntag_59:\n  dup2\n  tag_60\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n    /* \"contracts/WallyToken.sol\":3664:3714  IUniswapV2Factory(factory).createPair(self_, weth) */\n  swap4\n  dup4\n  tag_1\n  jump\t// in\ntag_60:\n  dup2\n  add\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  sub\n  slt\n  tag_61\n  jumpi\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  tag_63\n  swap1\n  tag_2\n  jump\t// in\ntag_63:\n    /* \"contracts/WallyToken.sol\":3664:3714  IUniswapV2Factory(factory).createPair(self_, weth) */\n  0x00\n  jump(tag_57)\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\ntag_61:\n  0x00\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup1\n  revert\n    /* \"contracts/WallyToken.sol\":3664:3714  IUniswapV2Factory(factory).createPair(self_, weth) */\ntag_58:\n  returndatasize\n  swap2\n  pop\n  jump(tag_59)\ntag_54:\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mload(0x40)\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  returndatasize\n  0x00\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\n    /* \"contracts/WallyToken.sol\":3584:3597  router.WETH() */\ntag_52:\n  swap1\n  pop\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n    /* \"contracts/WallyToken.sol\":3584:3597  router.WETH() */\n  dup2\n  returndatasize\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n    /* \"contracts/WallyToken.sol\":3584:3597  router.WETH() */\n  gt\n  tag_64\n  jumpi\ntag_65:\n  dup2\n  tag_66\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n    /* \"contracts/WallyToken.sol\":3584:3597  router.WETH() */\n  swap4\n  dup4\n  tag_1\n  jump\t// in\ntag_66:\n  dup2\n  add\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  sub\n  slt\n  tag_61\n  jumpi\n  0x00\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  swap2\n    /* \"contracts/WallyToken.sol\":3664:3714  IUniswapV2Factory(factory).createPair(self_, weth) */\n  0x44\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  tag_69\n  0x20\n  swap4\n  tag_2\n  jump\t// in\ntag_69:\n    /* \"contracts/WallyToken.sol\":3584:3597  router.WETH() */\n  swap3\n  pop\n  pop\n  swap2\n  jump(tag_53)\ntag_64:\n  returndatasize\n  swap2\n  pop\n  jump(tag_65)\n    /* \"contracts/WallyToken.sol\":3543:3559  router.factory() */\ntag_48:\n  swap1\n  swap2\n  pop\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n    /* \"contracts/WallyToken.sol\":3543:3559  router.factory() */\n  dup2\n  returndatasize\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n    /* \"contracts/WallyToken.sol\":3543:3559  router.factory() */\n  gt\n  tag_70\n  jumpi\ntag_71:\n  dup2\n  tag_72\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n    /* \"contracts/WallyToken.sol\":3543:3559  router.factory() */\n  swap4\n  dup4\n  tag_1\n  jump\t// in\ntag_72:\n  dup2\n  add\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  sub\n  slt\n  tag_61\n  jumpi\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x20\n  tag_75\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  swap3\n  tag_2\n  jump\t// in\ntag_75:\n    /* \"contracts/WallyToken.sol\":3543:3559  router.factory() */\n  swap3\n  swap2\n  pop\n  jump(tag_49)\ntag_70:\n  returndatasize\n  swap2\n  pop\n  jump(tag_71)\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\ntag_43:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  0x11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mstore\n  revert(0x00, 0x24)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mstore(0x00, shl(0xe0, 0xec442f05))\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  mstore\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x24\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  revert\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\ntag_39:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup3\n  add\n  mstore\n  0x08\n  0x24\n  dup3\n  add\n  mstore\n  shl(0xc0, 0x5a65726f2044414f)\n  0x44\n  dup3\n  add\n  mstore\n  0x64\n  swap1\n  revert\ntag_37:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup3\n  add\n  mstore\n  0x0b\n  0x24\n  dup3\n  add\n  mstore\n  shl(0xa9, 0x2d32b937903937baba32b9)\n  0x44\n  dup3\n  add\n  mstore\n  0x64\n  swap1\n  revert\ntag_34:\n  add\n  mload\n  swap1\n  pop\n  0x00\n  dup1\n  jump(tag_35)\ntag_32:\n  not(0x1f)\n  dup3\n  and\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n  0x00\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mstore\n  dup1\n  0x00\n  keccak256\n  swap2\n  0x00\ntag_76:\n  dup2\n  dup2\n  lt\n  tag_77\n  jumpi\n  pop\n  swap6\n  dup4\n  0x01\n  swap6\n  swap7\n  swap8\n  lt\n  tag_79\n  jumpi\ntag_80:\n  pop\n  pop\n  pop\n  dup2\n  shl\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  sstore\n  jump(tag_36)\ntag_79:\n  add\n  mload\n  not(0x00)\n  0xf8\n  dup5\n  0x03\n  shl\n  and\n  shr\n  not\n  and\n  swap1\n  sstore\n  0x00\n  dup1\n  dup1\n  jump(tag_80)\ntag_77:\n  swap2\n  swap3\n  0x20\n  0x01\n  dup2\n  swap3\n  dup7\n  dup12\n  add\n  mload\n  dup2\n  sstore\n  add\n  swap5\n  add\n  swap3\n  add\n  jump(tag_76)\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n  0x00\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mstore\n  0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n  0x1f\n  dup4\n  add\n  0x05\n  shr\n  dup2\n  add\n  swap2\n  0x20\n  dup5\n  lt\n  tag_81\n  jumpi\ntag_82:\n  0x1f\n  add\n  0x05\n  shr\n  add\n  swap1\ntag_83:\n  dup2\n  dup2\n  lt\n  tag_84\n  jumpi\n  pop\n  jump(tag_31)\ntag_84:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_83)\ntag_81:\n  swap1\n  swap2\n  pop\n  dup2\n  swap1\n  jump(tag_82)\ntag_28:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  0x22\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mstore\n  revert(0x00, 0x24)\ntag_26:\n  swap1\n  0x7f\n  and\n  swap1\n  jump(tag_27)\ntag_24:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  0x41\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  0x04\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mstore\n  revert(0x00, 0x24)\ntag_21:\n  add\n  mload\n  swap1\n  pop\n  0x00\n  dup1\n  jump(tag_22)\ntag_19:\n  not(0x1f)\n  dup3\n  and\n  swap6\n  mstore(0x00, 0x03)\n  dup1\n  0x00\n  keccak256\n  swap2\n  0x00\ntag_86:\n  dup9\n  dup2\n  lt\n  tag_87\n  jumpi\n  pop\n  dup4\n  0x01\n  swap6\n  swap7\n  swap8\n  swap9\n  lt\n  tag_89\n  jumpi\ntag_90:\n  pop\n  pop\n  pop\n  dup2\n  shl\n  add\n  0x03\n  sstore\n  jump(tag_23)\ntag_89:\n  add\n  mload\n  not(0x00)\n  0xf8\n  dup5\n  0x03\n  shl\n  and\n  shr\n  not\n  and\n  swap1\n  sstore\n  0x00\n  dup1\n  dup1\n  jump(tag_90)\ntag_87:\n  swap2\n  swap3\n  0x20\n  0x01\n  dup2\n  swap3\n  dup7\n  dup6\n  add\n  mload\n  dup2\n  sstore\n  add\n  swap5\n  add\n  swap3\n  add\n  jump(tag_86)\ntag_17:\n  mstore(0x00, 0x03)\n  0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n  0x1f\n  dup4\n  add\n  0x05\n  shr\n  dup2\n  add\n  swap2\n  0x20\n  dup5\n  lt\n  tag_91\n  jumpi\ntag_92:\n  0x1f\n  add\n  0x05\n  shr\n  add\n  swap1\ntag_93:\n  dup2\n  dup2\n  lt\n  tag_94\n  jumpi\n  pop\n  jump(tag_18)\ntag_94:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_93)\ntag_91:\n  swap1\n  swap2\n  pop\n  dup2\n  swap1\n  jump(tag_92)\ntag_13:\n  swap1\n  0x7f\n  and\n  swap1\n  jump(tag_14)\ntag_1:\n  0x1f\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_24\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_61\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_3:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_3d62345ca25dbcf5b90cd3caf078ba6fbc74987b189717c4d0a39b417756bdb3, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_100\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_3d62345ca25dbcf5b90cd3caf078ba6fbc74987b189717c4d0a39b417756bdb3, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x01\n    /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  swap1\n  mload(0x00)\n  codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n    /* \"contracts/WallyToken.sol\":1348:1371  keccak256(\"ADMIN_ROLE\") */\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  swap1\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_100:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n    /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  jump\t// out\nstop\ndata_0cc6bfbb777b5ba8a5fa65e7400d0765a2fbd8cfce940c84f5480427bf0c914d bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\ndata_3d62345ca25dbcf5b90cd3caf078ba6fbc74987b189717c4d0a39b417756bdb3 d8ef4509105c3edb0b04658b4528edc5ddd30ea5a81e623a2623c88db1eb54b6\ndata_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n\nsub_0: assembly {\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_17, iszero(lt(calldatasize, 0x04)))\n    tag_18:\n      pop\n      jumpi(tag_19, iszero(calldatasize))\n      0x00\n      dup1\n      revert\n    tag_19:\n      mload(0x40)\n        /* \"contracts/WallyToken.sol\":12009:12018  msg.value */\n      callvalue\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup2\n      mstore\n        /* \"contracts/WallyToken.sol\":11983:12019  ReceivedEther(msg.sender, msg.value) */\n      0xa419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf1\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyToken.sol\":11997:12007  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":11983:12019  ReceivedEther(msg.sender, msg.value) */\n      swap3\n      log2\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      stop\n    tag_17:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_21\n      jumpi\n      pop\n      dup1\n      0x06fdde03\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x099a04e5\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x1694505e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x2131c68c\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x2618f214\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_77\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x48fca59d\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x49bd5a5e\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x4ada218b\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x65cf7c9b\n      eq\n      tag_61\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_63\n      jumpi\n      dup1\n      0x89900603\n      eq\n      tag_65\n      jumpi\n      dup1\n      0x8c0b5e22\n      eq\n      tag_67\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_69\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_71\n      jumpi\n      dup1\n      0x963472f9\n      eq\n      tag_73\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_75\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_77\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_79\n      jumpi\n      dup1\n      0xa985ceef\n      eq\n      tag_81\n      jumpi\n      dup1\n      0xb319c6b7\n      eq\n      tag_83\n      jumpi\n      dup1\n      0xb37fd190\n      eq\n      tag_85\n      jumpi\n      dup1\n      0xc2e5ec04\n      eq\n      tag_87\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_89\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_91\n      jumpi\n      dup1\n      0xec28438a\n      eq\n      tag_93\n      jumpi\n      dup1\n      0xf6f1e306\n      eq\n      tag_95\n      jumpi\n      0xfe575a87\n      eq\n      tag_97\n      jumpi\n      0x00\n      jump(tag_18)\n    tag_97:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_103\n      tag_2\n      jump\t// in\n    tag_103:\n      and\n      0x00\n      mstore\n        /* \"contracts/WallyToken.sol\":7991:8000  _userData */\n      0x09\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_101:\n      0x00\n      dup1\n      revert\n    tag_95:\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0xa0))\n      tag_106\n      tag_2\n      jump\t// in\n    tag_106:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_107\n      tag_10\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_108\n      tag_11\n      jump\t// in\n    tag_108:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      dup1\n      mload(0x40)\n      dup4\n      dup2\n      mstore\n        /* \"contracts/WallyToken.sol\":8454:8463  msg.value */\n      callvalue\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/WallyToken.sol\":8401:8464  LiquidityAddRequested(msg.sender, to, tokenAmountIn, msg.value) */\n      0x407e9458c121455467ad277a21812c883f5d67ee0020a7b7a3ea0007a6639183\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"contracts/WallyToken.sol\":8423:8433  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":8401:8464  LiquidityAddRequested(msg.sender, to, tokenAmountIn, msg.value) */\n      swap3\n      log3\n        /* \"contracts/WallyToken.sol\":8542:8558  _uniswapV2Router */\n      0x07\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      0x60\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      tag_109\n        /* \"contracts/WallyToken.sol\":8499:8503  this */\n      dup2\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup6\n        /* \"contracts/WallyToken.sol\":8499:8503  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      tag_16\n      jump\t// in\n    tag_109:\n        /* \"contracts/WallyToken.sol\":8665:8853  router.addLiquidityETH{value: msg.value}(... */\n      0xc4\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      dup1\n      swap6\n      dup2\n      swap4\n      shl(0xe0, 0xf305d719)\n        /* \"contracts/WallyToken.sol\":8665:8853  router.addLiquidityETH{value: msg.value}(... */\n      dup4\n      mstore\n        /* \"contracts/WallyToken.sol\":8499:8503  this */\n      address\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyToken.sol\":8665:8853  router.addLiquidityETH{value: msg.value}(... */\n      dup5\n      add\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup4\n      add\n      mstore\n      calldataload(0x44)\n      0x44\n      dup4\n      add\n      mstore\n      calldataload(0x64)\n      0x64\n      dup4\n      add\n      mstore\n      dup6\n      0x84\n      dup4\n      add\n      mstore\n      calldataload(0x84)\n      0xa4\n      dup4\n      add\n      mstore\n        /* \"contracts/WallyToken.sol\":8454:8463  msg.value */\n      callvalue\n        /* \"contracts/WallyToken.sol\":8665:8853  router.addLiquidityETH{value: msg.value}(... */\n      swap1\n      gas\n      call\n      dup1\n      iszero\n      tag_110\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n      swap2\n      0x00\n      swap4\n      0x00\n        /* \"contracts/WallyToken.sol\":8665:8853  router.addLiquidityETH{value: msg.value}(... */\n      swap3\n      tag_112\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_113:\n      pop\n      swap1\n      tag_114\n      swap2\n        /* \"contracts/WallyToken.sol\":8869:8922  LiquidityAdded(to, amountToken, amountETH, liquidity) */\n      0x64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n        /* \"contracts/WallyToken.sol\":8869:8922  LiquidityAdded(to, amountToken, amountETH, liquidity) */\n      dup1\n      tag_115\n      dup6\n      dup10\n      dup10\n      dup5\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x40\n      swap2\n      swap5\n      swap4\n      swap3\n      0x60\n      dup3\n      add\n      swap6\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"contracts/WallyToken.sol\":8869:8922  LiquidityAdded(to, amountToken, amountETH, liquidity) */\n    tag_115:\n      sub\n      swap1\n      log2\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      0x06\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n      mload(0x40)\n      swap4\n      dup5\n      swap4\n      dup5\n      0x40\n      swap2\n      swap5\n      swap4\n      swap3\n      0x60\n      dup3\n      add\n      swap6\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n    tag_114:\n      sub\n      swap1\n      return\n        /* \"contracts/WallyToken.sol\":8665:8853  router.addLiquidityETH{value: msg.value}(... */\n    tag_112:\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x60\n        /* \"contracts/WallyToken.sol\":8665:8853  router.addLiquidityETH{value: msg.value}(... */\n      dup2\n      returndatasize\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x60\n        /* \"contracts/WallyToken.sol\":8665:8853  router.addLiquidityETH{value: msg.value}(... */\n      gt\n      tag_116\n      jumpi\n    tag_117:\n      dup2\n      tag_118\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x60\n        /* \"contracts/WallyToken.sol\":8665:8853  router.addLiquidityETH{value: msg.value}(... */\n      swap4\n      dup4\n      tag_7\n      jump\t// in\n    tag_118:\n      dup2\n      add\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sub\n      slt\n      tag_101\n      jumpi\n      tag_114\n      dup2\n      mload\n      swap3\n      0x40\n      0x20\n      dup5\n      add\n      mload\n      swap4\n      add\n      mload\n        /* \"contracts/WallyToken.sol\":8665:8853  router.addLiquidityETH{value: msg.value}(... */\n      swap4\n      swap3\n      swap4\n      swap2\n      jump(tag_113)\n    tag_116:\n      returndatasize\n      swap2\n      pop\n      jump(tag_117)\n    tag_110:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_93:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_125\n      tag_10\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_126\n      tag_11\n      jump\t// in\n    tag_126:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"contracts/WallyToken.sol\":6403:6415  _maxTxAmount */\n      0x0f\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyToken.sol\":6403:6424  _maxTxAmount != maxTx */\n      sub\n        /* \"contracts/WallyToken.sol\":6399:6511  if (_maxTxAmount != maxTx) {... */\n      tag_127\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_128:\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      0x06\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n      stop\n        /* \"contracts/WallyToken.sol\":6399:6511  if (_maxTxAmount != maxTx) {... */\n    tag_127:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"contracts/WallyToken.sol\":6403:6415  _maxTxAmount */\n      0x0f\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyToken.sol\":6479:6500  MaxTxAmountSet(maxTx) */\n      0xd6a912222a539eff01eb7e23cd954e57c4ae962622948839fefbc46b0ffe914a\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyToken.sol\":6479:6500  MaxTxAmountSet(maxTx) */\n      dup1\n      log2\n        /* \"contracts/WallyToken.sol\":6399:6511  if (_maxTxAmount != maxTx) {... */\n      dup1\n      jump(tag_128)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_91:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n      tag_133\n      tag_2\n      jump\t// in\n    tag_133:\n      tag_134\n      tag_3\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      swap5\n      swap1\n      swap4\n      and\n      dup3\n      mstore\n      swap3\n      dup4\n      mstore\n      dup2\n      swap1\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_89:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_139\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_140\n      tag_3\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_142\n      dup3\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_12\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_15\n      jump\t// in\n    tag_139:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      stop\n    tag_87:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x20))\n      tag_147\n      tag_4\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_148\n      tag_10\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_149\n      tag_11\n      jump\t// in\n    tag_149:\n        /* \"contracts/WallyToken.sol\":5235:5250  _tradingEnabled */\n      0x0a\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      dup2\n      iszero\n      iszero\n      swap1\n      dup2\n      0xff\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/WallyToken.sol\":5235:5261  _tradingEnabled != enabled */\n      sub\n        /* \"contracts/WallyToken.sol\":5231:5480  if (_tradingEnabled != enabled) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      0x06\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n      stop\n        /* \"contracts/WallyToken.sol\":5231:5480  if (_tradingEnabled != enabled) {... */\n    tag_150:\n      not(0xff)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      and\n      0xff\n      dup3\n      and\n      or\n        /* \"contracts/WallyToken.sol\":5235:5250  _tradingEnabled */\n      0x0a\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup2\n      swap1\n      sstore\n      swap1\n        /* \"contracts/WallyToken.sol\":5321:5347  TradingEnabledSet(enabled) */\n      0x6e552ceee9488e9332de4530eb91788e818d00e6ccfb1f2968cb4325924e0611\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n      dup1\n        /* \"contracts/WallyToken.sol\":5321:5347  TradingEnabledSet(enabled) */\n      log2\n        /* \"contracts/WallyToken.sol\":5365:5400  enabled && _sniperProtectionEnabled */\n      dup2\n      tag_152\n      jumpi\n        /* \"contracts/WallyToken.sol\":5231:5480  if (_tradingEnabled != enabled) {... */\n    tag_153:\n        /* \"contracts/WallyToken.sol\":5361:5470  if (enabled && _sniperProtectionEnabled) {... */\n      pop\n      tag_154\n      jumpi\n        /* \"contracts/WallyToken.sol\":5231:5480  if (_tradingEnabled != enabled) {... */\n    tag_155:\n      dup1\n      dup1\n      dup1\n      jump(tag_128)\n        /* \"contracts/WallyToken.sol\":5361:5470  if (enabled && _sniperProtectionEnabled) {... */\n    tag_154:\n        /* \"contracts/WallyToken.sol\":5439:5454  block.timestamp */\n      timestamp\n        /* \"contracts/WallyToken.sol\":5420:5454  _launchTimestamp = block.timestamp */\n      0x0c\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyToken.sol\":5361:5470  if (enabled && _sniperProtectionEnabled) {... */\n      jump(tag_155)\n        /* \"contracts/WallyToken.sol\":5365:5400  enabled && _sniperProtectionEnabled */\n    tag_152:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0xff\n      swap2\n      pop\n      0x08\n      shr\n      and\n        /* \"contracts/WallyToken.sol\":5365:5400  enabled && _sniperProtectionEnabled */\n      dup2\n      jump(tag_153)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_85:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x60))\n      tag_160\n      tag_2\n      jump\t// in\n    tag_160:\n      calldataload(0x44)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap2\n      calldataload(0x24)\n      swap2\n      dup4\n      swap1\n      sub\n      tag_101\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_163\n      tag_10\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_164\n      tag_11\n      jump\t// in\n    tag_164:\n        /* \"contracts/WallyToken.sol\":11435:11473  require(to != address(0), \"Zero 'to'\") */\n      tag_165\n        /* \"contracts/WallyToken.sol\":11443:11459  to != address(0) */\n      dup4\n      iszero\n      iszero\n        /* \"contracts/WallyToken.sol\":11435:11473  require(to != address(0), \"Zero 'to'\") */\n      tag_8\n      jump\t// in\n    tag_165:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap1\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/WallyToken.sol\":11483:11524  IERC20(tokenAddress).transfer(to, amount) */\n      dup2\n      mstore\n      dup4\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyToken.sol\":11483:11524  IERC20(tokenAddress).transfer(to, amount) */\n      dup3\n      add\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n      dup2\n      0x24\n      dup3\n      add\n      mstore\n      0x20\n        /* \"contracts/WallyToken.sol\":11483:11524  IERC20(tokenAddress).transfer(to, amount) */\n      dup2\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x44\n        /* \"contracts/WallyToken.sol\":11483:11524  IERC20(tokenAddress).transfer(to, amount) */\n      dup2\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyToken.sol\":11483:11524  IERC20(tokenAddress).transfer(to, amount) */\n      dup8\n      gas\n      call\n      dup1\n      iszero\n      tag_110\n      jumpi\n      tag_168\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_169:\n      pop\n      0x20\n        /* \"contracts/WallyToken.sol\":11539:11578  TokensRescued(tokenAddress, amount, to) */\n      0xfb475a842bad10d3800b61bd1a92e716051afba979b124b583bd99a2d1d7bfd5\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      swap2\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyToken.sol\":11539:11578  TokensRescued(tokenAddress, amount, to) */\n      log3\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      0x06\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n      stop\n        /* \"contracts/WallyToken.sol\":11483:11524  IERC20(tokenAddress).transfer(to, amount) */\n    tag_168:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyToken.sol\":11483:11524  IERC20(tokenAddress).transfer(to, amount) */\n      dup2\n      returndatasize\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyToken.sol\":11483:11524  IERC20(tokenAddress).transfer(to, amount) */\n      gt\n      tag_170\n      jumpi\n    tag_171:\n      dup2\n      tag_172\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyToken.sol\":11483:11524  IERC20(tokenAddress).transfer(to, amount) */\n      swap4\n      dup4\n      tag_7\n      jump\t// in\n    tag_172:\n      dup2\n      add\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sub\n      slt\n      tag_101\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_101\n      jumpi\n      pop\n      0x20\n        /* \"contracts/WallyToken.sol\":11483:11524  IERC20(tokenAddress).transfer(to, amount) */\n      jump(tag_169)\n    tag_170:\n      returndatasize\n      swap2\n      pop\n      jump(tag_171)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_83:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyToken.sol\":7787:7800  _cooldownTime */\n      0x0e\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_81:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      0xff\n        /* \"contracts/WallyToken.sol\":7686:7702  _cooldownEnabled */\n      0x0d\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_79:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      tag_189\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      tag_190\n      tag_2\n      jump\t// in\n    tag_190:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      swap1\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      tag_13\n      jump\t// in\n    tag_189:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      mload(0x40)\n      0x01\n      dup2\n      mstore\n      return\n    tag_77:\n      tag_5\n      jump\t// in\n    tag_75:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_73:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      0xff\n        /* \"contracts/WallyToken.sol\":7381:7405  _sniperProtectionEnabled */\n      0x0a\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      0x08\n      shr\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_71:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      0x00\n      sload(0x04)\n      dup1\n      0x01\n      shr\n      swap1\n      0x01\n      dup2\n      and\n      dup1\n      iszero\n      tag_203\n      jumpi\n    tag_204:\n      0x20\n      dup4\n      lt\n      dup2\n      eq\n      tag_205\n      jumpi\n      dup3\n      dup6\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_207\n      jumpi\n      pop\n      0x01\n      eq\n      tag_209\n      jumpi\n    tag_210:\n      tag_114\n      dup4\n      tag_212\n      dup2\n      dup6\n      sub\n      dup3\n      tag_7\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_1\n      jump\t// in\n    tag_209:\n      swap2\n      swap1\n      pop\n      mstore(0x00, 0x04)\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n      swap2\n      0x00\n      swap1\n    tag_213:\n      dup1\n      dup3\n      lt\n      tag_214\n      jumpi\n      pop\n      swap1\n      swap2\n      pop\n      dup2\n      add\n      0x20\n      add\n      tag_212\n      jump(tag_210)\n    tag_214:\n      swap2\n      swap3\n      0x01\n      dup2\n      0x20\n      swap3\n      sload\n      dup4\n      dup6\n      dup9\n      add\n      add\n      mstore\n      add\n      swap2\n      add\n      swap1\n      swap3\n      swap2\n      jump(tag_213)\n    tag_207:\n      not(0xff)\n      and\n      0x20\n      dup1\n      dup7\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      iszero\n      iszero\n      0x05\n      shl\n      dup5\n      add\n      swap1\n      swap2\n      add\n      swap2\n      pop\n      tag_212\n      swap1\n      pop\n      jump(tag_210)\n    tag_205:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_203:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_204)\n    tag_69:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n      tag_220\n      tag_3\n      jump\t// in\n    tag_220:\n      mstore(0x00, calldataload(0x04))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap1\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_67:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyToken.sol\":7884:7896  _maxTxAmount */\n      0x0f\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_65:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n      tag_229\n      tag_4\n      jump\t// in\n    tag_229:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_230\n      tag_10\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_231\n      tag_11\n      jump\t// in\n    tag_231:\n        /* \"contracts/WallyToken.sol\":5642:5666  _sniperProtectionEnabled */\n      0x0a\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      0xff\n      dup3\n      0x08\n      shr\n      and\n      iszero\n      iszero\n        /* \"contracts/WallyToken.sol\":5642:5677  _sniperProtectionEnabled != enabled */\n      sub\n        /* \"contracts/WallyToken.sol\":5638:5738  if (_sniperProtectionEnabled != enabled) {... */\n      tag_232\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_233:\n      pop\n      dup2\n        /* \"contracts/WallyToken.sol\":5751:5761  _snipeTime */\n      0x0b\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyToken.sol\":5751:5776  _snipeTime != timeSeconds */\n      sub\n        /* \"contracts/WallyToken.sol\":5747:5827  if (_snipeTime != timeSeconds) {... */\n      tag_234\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_235:\n        /* \"contracts/WallyToken.sol\":5841:5882  SniperProtectionSet(enabled, timeSeconds) */\n      0x5d394a4e9bd564f1a587773e5dbd3099a9e7b2fb0ecb2dbe1808ad21e9dc943e\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyToken.sol\":5841:5882  SniperProtectionSet(enabled, timeSeconds) */\n      dup1\n      log3\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      0x06\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n      stop\n        /* \"contracts/WallyToken.sol\":5747:5827  if (_snipeTime != timeSeconds) {... */\n    tag_234:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup2\n        /* \"contracts/WallyToken.sol\":5751:5761  _snipeTime */\n      0x0b\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyToken.sol\":5747:5827  if (_snipeTime != timeSeconds) {... */\n      jump(tag_235)\n        /* \"contracts/WallyToken.sol\":5638:5738  if (_sniperProtectionEnabled != enabled) {... */\n    tag_232:\n      not(0xff00)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      and\n      0x08\n      dup3\n      swap1\n      shl\n      0xff00\n      and\n      or\n        /* \"contracts/WallyToken.sol\":5642:5666  _sniperProtectionEnabled */\n      0x0a\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyToken.sol\":5638:5738  if (_sniperProtectionEnabled != enabled) {... */\n      dup3\n      jump(tag_233)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_63:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_240\n      tag_2\n      jump\t// in\n    tag_240:\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_61:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyToken.sol\":7585:7601  _launchTimestamp */\n      0x0c\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_59:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      0xff\n        /* \"contracts/WallyToken.sol\":7273:7288  _tradingEnabled */\n      0x0a\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_57:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/WallyToken.sol\":7175:7189  _uniswapV2Pair */\n      0x08\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_55:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n      tag_257\n      tag_4\n      jump\t// in\n    tag_257:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_258\n      tag_10\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_259\n      tag_11\n      jump\t// in\n    tag_259:\n        /* \"contracts/WallyToken.sol\":6043:6059  _cooldownEnabled */\n      0x0d\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      0xff\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/WallyToken.sol\":6043:6070  _cooldownEnabled != enabled */\n      sub\n        /* \"contracts/WallyToken.sol\":6039:6123  if (_cooldownEnabled != enabled) {... */\n      tag_260\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_261:\n      pop\n      dup2\n        /* \"contracts/WallyToken.sol\":6136:6149  _cooldownTime */\n      0x0e\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyToken.sol\":6136:6164  _cooldownTime != cooldownSec */\n      sub\n        /* \"contracts/WallyToken.sol\":6132:6218  if (_cooldownTime != cooldownSec) {... */\n      tag_262\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_263:\n        /* \"contracts/WallyToken.sol\":6232:6265  CooldownSet(enabled, cooldownSec) */\n      0x7bc6854ea2dd87a130378b485fb91a0eb3056211ee9b85cb67fabef030c07350\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyToken.sol\":6232:6265  CooldownSet(enabled, cooldownSec) */\n      dup1\n      log3\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      0x06\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n      stop\n        /* \"contracts/WallyToken.sol\":6132:6218  if (_cooldownTime != cooldownSec) {... */\n    tag_262:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup2\n        /* \"contracts/WallyToken.sol\":6136:6149  _cooldownTime */\n      0x0e\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyToken.sol\":6132:6218  if (_cooldownTime != cooldownSec) {... */\n      jump(tag_263)\n        /* \"contracts/WallyToken.sol\":6039:6123  if (_cooldownEnabled != enabled) {... */\n    tag_260:\n      not(0xff)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      and\n      0xff\n      dup3\n      and\n      or\n        /* \"contracts/WallyToken.sol\":6043:6059  _cooldownEnabled */\n      0x0d\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyToken.sol\":6039:6123  if (_cooldownEnabled != enabled) {... */\n      dup3\n      jump(tag_261)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_53:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x847f481f687befb06ed3511f1a8dcef57e83007c0147ae5047583d7056170937)\n      0x40\n      swap1\n      keccak256\n      sload\n      calldataload(0x04)\n      swap1\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      dup1\n      sload(keccak256(0x00, 0x40))\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      sub\n      keccak256(0x00, 0x40)\n      sstore\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      0x02\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      0x02\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n      0x00\n      mload(0x40)\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      swap3\n      log3\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyToken.sol\":5052:5080  Burned(_msgSender(), amount) */\n      0x696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":5052:5080  Burned(_msgSender(), amount) */\n      swap3\n      log2\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      shl(0xe2, 0x391434e3)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x04\n      mstore\n      0x24\n      mstore\n      0x44\n      mstore\n      0x64\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      shl(0xe1, 0x4b637e8f)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mstore\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x04\n      mstore\n        /* \"contracts/WallyToken.sol\":1487:1511  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x24\n      mstore\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_51:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n      tag_278\n      tag_2\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x15a28d26fa1bf736cf7edc9922607171ccb09c3c73b808e7772a3013e068a522)\n      0x40\n      swap1\n      keccak256\n      sload\n      calldataload(0x24)\n      swap2\n      swap1\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_279\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      0x02\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      dup2\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_283\n      jumpi\n        /* \"contracts/WallyToken.sol\":4907:4925  Minted(to, amount) */\n      0x30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      swap2\n      0x20\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      0x02\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n      dup4\n      0x00\n      mstore\n      0x00\n      dup3\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      add\n      swap1\n      sstore\n      dup4\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup5\n      mload(0x40)\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      log3\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WallyToken.sol\":4907:4925  Minted(to, amount) */\n      log2\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      stop\n    tag_283:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      shl(0xe0, 0xec442f05)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mstore\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x04\n      mstore\n        /* \"contracts/WallyToken.sol\":1417:1441  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x24\n      mstore\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_47:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n      tag_289\n      tag_3\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_139\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_15\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      shl(0xe1, 0x334bd919)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mstore\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_45:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_43:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_139\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_302\n      tag_3\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_303\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_142\n      dup3\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n    tag_303:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_14\n      jump\t// in\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_41:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyToken.sol\":7487:7497  _snipeTime */\n      0x0b\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_39:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_313\n      mstore(0x00, calldataload(0x04))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_313:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_37:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x60))\n      tag_318\n      tag_2\n      jump\t// in\n    tag_318:\n      tag_319\n      tag_3\n      jump\t// in\n    tag_319:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n      swap3\n      calldataload(0x44)\n      swap3\n      swap2\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      tag_320\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      pop\n      tag_189\n      swap4\n      pop\n      tag_13\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      dup4\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      tag_189\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      swap5\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      dup4\n      keccak256(0x00, 0x40)\n      swap2\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      dup5\n      jump(tag_321)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      shl(0xe1, 0x4a1406b1)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mstore\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      shl(0xe0, 0xe602df05)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mstore\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      dup4\n      swap1\n      shl(0xe1, 0x7dc7a0d9)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x04\n      mstore\n      0x24\n      mstore\n      0x44\n      mstore\n      0x64\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      revert\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_35:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n        /* \"contracts/WallyToken.sol\":6965:6976  _daoAddress */\n      immutable(\"0xd4585d973f6cb05f7dca9ebe127c2460285bc70f09a7025a97fbb5c7cafe081b\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_33:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      0x02\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_31:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/WallyToken.sol\":7072:7088  _uniswapV2Router */\n      0x07\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_29:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n      tag_345\n      tag_2\n      jump\t// in\n    tag_345:\n      calldataload(0x24)\n      swap1\n      dup2\n      iszero\n      iszero\n      dup1\n      swap3\n      sub\n      tag_101\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_348\n      tag_10\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_349\n      tag_11\n      jump\t// in\n    tag_349:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/WallyToken.sol\":6684:6693  _userData */\n      0x09\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0xff\n      and\n      iszero\n      iszero\n        /* \"contracts/WallyToken.sol\":6713:6745  data.blacklisted != blacklisted_ */\n      dup4\n      swap1\n      sub\n        /* \"contracts/WallyToken.sol\":6709:6860  if (data.blacklisted != blacklisted_) {... */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      0x06\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n      stop\n        /* \"contracts/WallyToken.sol\":6709:6860  if (data.blacklisted != blacklisted_) {... */\n    tag_350:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      not(0xff)\n      dup2\n      sload\n      and\n      0xff\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/WallyToken.sol\":6811:6849  UserBlacklistedSet(user, blacklisted_) */\n      0xa534e7c418f24c958af1e861a7af8c6ece8f5204eb8c33685ae7e16a1c2ada42\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyToken.sol\":6811:6849  UserBlacklistedSet(user, blacklisted_) */\n      dup1\n      log3\n        /* \"contracts/WallyToken.sol\":6709:6860  if (data.blacklisted != blacklisted_) {... */\n      dup1\n      dup1\n      dup1\n      jump(tag_128)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_27:\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_101\n      jumpi\n      0x00\n      dup1\n      dup1\n      dup1\n      swap4\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_356\n      tag_10\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_357\n      tag_11\n      jump\t// in\n    tag_357:\n        /* \"contracts/WallyToken.sol\":11744:11782  require(to != address(0), \"Zero 'to'\") */\n      tag_358\n        /* \"contracts/WallyToken.sol\":11752:11768  to != address(0) */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/WallyToken.sol\":11744:11782  require(to != address(0), \"Zero 'to'\") */\n      tag_8\n      jump\t// in\n    tag_358:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup1\n      dup4\n        /* \"contracts/WallyToken.sol\":11797:11834  TokensRescued(address(0), amount, to) */\n      0xfb475a842bad10d3800b61bd1a92e716051afba979b124b583bd99a2d1d7bfd5\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      mload(0x40)\n      dup7\n      dup2\n      mstore\n        /* \"contracts/WallyToken.sol\":11797:11834  TokensRescued(address(0), amount, to) */\n      log3\n        /* \"contracts/WallyToken.sol\":11864:11890  to.call{value: amount}(\"\") */\n      gas\n      call\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      jumpi(tag_359, iszero(returndatasize))\n      returndatasize\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_361\n      jumpi\n      mload(0x40)\n      swap1\n      tag_363\n      0x1f\n      dup3\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup4\n      tag_7\n      jump\t// in\n    tag_363:\n      dup2\n      mstore\n      0x00\n      0x20\n      returndatasize\n      swap3\n      add\n      returndatacopy\n    tag_364:\n      iszero\n      tag_365\n      jumpi\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      0x06\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n      stop\n    tag_365:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x08\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xc2, 0x1155120819985a5b)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_361:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_359:\n      jump(tag_364)\n    tag_25:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n      tag_371\n      tag_2\n      jump\t// in\n    tag_371:\n      calldataload(0x24)\n        /* \"contracts/WallyToken.sol\":4092:4102  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/WallyToken.sol\":4195:4207  current != 0 */\n      iszero\n      iszero\n        /* \"contracts/WallyToken.sol\":4195:4222  current != 0 && amount != 0 */\n      dup1\n      tag_372\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_373:\n        /* \"contracts/WallyToken.sol\":4191:4272  if (current != 0 && amount != 0) {... */\n      tag_374\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      tag_189\n        /* \"contracts/WallyToken.sol\":4092:4102  msg.sender */\n      swap2\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      tag_16\n      jump\t// in\n        /* \"contracts/WallyToken.sol\":4191:4272  if (current != 0 && amount != 0) {... */\n    tag_374:\n        /* \"contracts/WallyToken.sol\":4245:4261  ApproveNonZero() */\n      shl(0xe0, 0x2279cc21)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyToken.sol\":4245:4261  ApproveNonZero() */\n      mstore\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyToken.sol\":4245:4261  ApproveNonZero() */\n      revert\n        /* \"contracts/WallyToken.sol\":4195:4222  current != 0 && amount != 0 */\n    tag_372:\n        /* \"contracts/WallyToken.sol\":4211:4222  amount != 0 */\n      pop\n      dup1\n      iszero\n      iszero\n        /* \"contracts/WallyToken.sol\":4195:4222  current != 0 && amount != 0 */\n      jump(tag_373)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_23:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n      dup1\n      0x01\n      shr\n      swap1\n      0x01\n      dup2\n      and\n      dup1\n      iszero\n      tag_381\n      jumpi\n    tag_382:\n      0x20\n      dup4\n      lt\n      dup2\n      eq\n      tag_205\n      jumpi\n      dup3\n      dup6\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_207\n      jumpi\n      pop\n      0x01\n      eq\n      tag_387\n      jumpi\n      tag_114\n      dup4\n      tag_212\n      dup2\n      dup6\n      sub\n      dup3\n      tag_7\n      jump\t// in\n    tag_387:\n      swap2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n      swap2\n      0x00\n      swap1\n    tag_391:\n      dup1\n      dup3\n      lt\n      tag_392\n      jumpi\n      pop\n      swap1\n      swap2\n      pop\n      dup2\n      add\n      0x20\n      add\n      tag_212\n      jump(tag_210)\n    tag_392:\n      swap2\n      swap3\n      0x01\n      dup2\n      0x20\n      swap3\n      sload\n      dup4\n      dup6\n      dup9\n      add\n      add\n      mstore\n      add\n      swap2\n      add\n      swap1\n      swap3\n      swap2\n      jump(tag_391)\n    tag_381:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_382)\n    tag_21:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      shl(0xe0, 0xffffffff)\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_101\n      jumpi\n      0x20\n      swap2\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_400\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_401:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_400:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup4\n      jump(tag_401)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_1:\n      0x20\n      0x40\n      swap3\n      dup2\n      dup4\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      dup3\n      dup7\n      add\n      mstore\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_2:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_101\n      jumpi\n      jump\t// out\n    tag_3:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_101\n      jumpi\n      jump\t// out\n    tag_4:\n      calldataload(0x04)\n      swap1\n      dup2\n      iszero\n      iszero\n      dup3\n      sub\n      tag_101\n      jumpi\n      jump\t// out\n    tag_5:\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x40))\n      tag_412\n      tag_2\n      jump\t// in\n    tag_412:\n      pop\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"contracts/WallyToken.sol\":4520:4561  revert(\"Use approve() to set to 0 first\") */\n      dup2\n      mstore\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      0x04\n        /* \"contracts/WallyToken.sol\":4520:4561  revert(\"Use approve() to set to 0 first\") */\n      dup3\n      add\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x55736520617070726f7665282920746f2073657420746f203020666972737400\n      0x44\n      dup3\n      add\n      mstore\n        /* \"contracts/WallyToken.sol\":4520:4561  revert(\"Use approve() to set to 0 first\") */\n      0x64\n      swap1\n      revert\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n    tag_7:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_361\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_8:\n      iszero\n      tag_415\n      jumpi\n      jump\t// out\n    tag_415:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x09\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb8, 0x5a65726f2027746f27)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x06\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_417\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x06\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_417:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xd8ef4509105c3edb0b04658b4528edc5ddd30ea5a81e623a2623c88db1eb54b6)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_419\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_419:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore(0x00, shl(0xe0, 0xe2517d3f))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyToken.sol\":1348:1371  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x24\n      mstore\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_12:\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_421\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_421:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore(0x00, shl(0xe0, 0xe2517d3f))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      mstore\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_13:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_270\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      and\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_281\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      tag_427\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      swap3\n      0x20\n      swap3\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup5\n      mstore\n      sub\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      keccak256\n      sstore\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup3\n      mstore\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      keccak256\n      dup2\n      dup2\n      sload\n      add\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_427:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      dup3\n      shl(0xe2, 0x391434e3)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mstore\n      0x04\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      mstore\n      0x44\n      mstore\n      0x64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_14:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_429\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_429:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      pop\n      pop\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_15:\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_429\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_16:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_325\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      and\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup3\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_327\n      jumpi\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      swap2\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      dup3\n      mstore\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"contracts/WallyToken.sol\":1241:12028  contract WallyToken is ERC20, AccessControl, ReentrancyGuard {... */\n      keccak256\n      dup6\n      0x00\n      mstore\n      dup3\n      mstore\n      dup1\n      keccak256(0x00, 0x40)\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202f3bdc56a83b87774368eb14d04af7beaf83758e6ea7217f4fe226e9d039491764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_grantRole": {
									"entryPoint": 1866,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a080604052604081611ebe803803809161001a8285610713565b83398101031261041057610039602061003283610736565b9201610736565b9060405191610049604084610713565b600b83526a2bb0b6363c902a37b5b2b760a91b602084015260405191610070604084610713565b600383526254574760e81b602084015283516001600160401b03811161062457600354600181811c91168015610709575b602082101461060657601f81116106a6575b50602094601f8211600114610643579481929394955f92610638575b50508160011b915f199060031b1c1916176003555b82516001600160401b03811161062457600454600181811c9116801561061a575b602082101461060657601f81116105a3575b506020601f821160011461054057819293945f92610535575b50508160011b915f199060031b1c1916176004555b6001600655601e600b819055600e556001600160a01b0316908115610502576001600160a01b038116156104d25760805233156104bf576002546b409f9cbc7c4a04c22000000081018091116104ab57600255335f525f60205260405f206b409f9cbc7c4a04c22000000081540190556040516b409f9cbc7c4a04c22000000081525f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a3608051610203906001600160a01b031661074a565b507f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a65f81815260056020527f15a28d26fa1bf736cf7edc9922607171ccb09c3c73b808e7772a3013e068a52380545f516020611e9e5f395f51905f5291829055909290915f516020611e5e5f395f51905f529080a47f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8485f81815260056020527f847f481f687befb06ed3511f1a8dcef57e83007c0147ae5047583d705617093880545f516020611e9e5f395f51905f5291829055909290915f516020611e5e5f395f51905f529080a4600780546001600160a01b0319168217905560405163c45a015560e01b815290602082600481845afa91821561041c575f9261046a575b506020600491604051928380926315ab88c960e31b82525afa90811561041c575f91610427575b506040516364e329cb60e11b81523060048201526001600160a01b03918216602482015291602091839160449183915f91165af190811561041c575f916103de575b50600880546001600160a01b0319166001600160a01b03929092169190911790555f600f55600a805461ffff19169055600d805460ff1916905560405161167b90816107e3823960805181610e980152f35b90506020813d602011610414575b816103f960209383610713565b810103126104105761040a90610736565b5f61038c565b5f80fd5b3d91506103ec565b6040513d5f823e3d90fd5b90506020813d602011610462575b8161044260209383610713565b81010312610410575f916044610459602093610736565b9250509161034a565b3d9150610435565b9091506020813d6020116104a3575b8161048660209383610713565b8101031261041057602061049b600492610736565b929150610323565b3d9150610479565b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b60405162461bcd60e51b81526020600482015260086024820152675a65726f2044414f60c01b6044820152606490fd5b60405162461bcd60e51b815260206004820152600b60248201526a2d32b937903937baba32b960a91b6044820152606490fd5b015190505f80610130565b601f1982169060045f52805f20915f5b81811061058b57509583600195969710610573575b505050811b01600455610145565b01515f1960f88460031b161c191690555f8080610565565b9192602060018192868b015181550194019201610550565b60045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106105fc575b601f0160051c01905b8181106105f15750610117565b5f81556001016105e4565b90915081906105db565b634e487b7160e01b5f52602260045260245ffd5b90607f1690610105565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100cf565b601f1982169560035f52805f20915f5b88811061068e57508360019596979810610676575b505050811b016003556100e4565b01515f1960f88460031b161c191690555f8080610668565b91926020600181928685015181550194019201610653565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106106ff575b601f0160051c01905b8181106106f457506100b3565b5f81556001016106e7565b90915081906106de565b90607f16906100a1565b601f909101601f19168101906001600160401b0382119082101761062457604052565b51906001600160a01b038216820361041057565b6001600160a01b0381165f9081525f516020611e7e5f395f51905f52602052604090205460ff166107dd576001600160a01b03165f8181525f516020611e7e5f395f51905f5260205260408120805460ff191660011790553391905f516020611e9e5f395f51905f52907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b505f9056fe6080806040526004361015610048575b50361561001a575f80fd5b6040513481527fa419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf160203392a2005b5f3560e01c90816301ffc9a7146111cb5750806306fdde0314611110578063095ea7b3146110a7578063099a04e514610fa7578063153b0d1e14610f0c5780631694505e14610ee457806318160ddd14610ec75780632131c68c14610e8357806323b872dd14610da4578063248a9ca314610d715780632618f21414610d545780632f2ff15d14610d16578063313ce56714610cfb57806336568abe14610cb757806339509351146106cf57806340c10f1914610b7c57806342966c6814610a4457806348fca59d146109b257806349bd5a5e1461098a5780634ada218b1461096857806365cf7c9b1461094b57806370a082311461091457806389900603146108795780638c0b5e221461085c57806391d148541461081357806395d89b4114610713578063963472f9146106ee578063a217fddf146106d4578063a457c2d7146106cf578063a9059cbb1461069e578063a985ceef1461067c578063b319c6b71461065f578063b37fd1901461056d578063c2e5ec04146104cc578063d547741f14610487578063dd62ed3e14610437578063ec28438a146103d4578063f6f1e306146102425763fe575a8714610201575f61000f565b3461023e57602036600319011261023e576001600160a01b03610222611248565b165f526009602052602060ff60405f2054166040519015158152f35b5f80fd5b60a036600319011261023e57610256611248565b6024359061026261133c565b61026a611392565b60018060a01b0316806040518381523460208201527f407e9458c121455467ad277a21812c883f5d67ee0020a7b7a3ea0007a663918360403392a36007546001600160a01b0316916060906102c08185306115e2565b60c46040518095819363f305d71960e01b835230600484015260248301526044356044830152606435606483015285608483015260843560a483015234905af180156103c9575f915f935f92610382575b509061037e917f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e60405180610359858989846040919493926060820195825260208201520152565b0390a26001600655604051938493846040919493926060820195825260208201520152565b0390f35b92509250506060813d6060116103c1575b816103a0606093836112e2565b8101031261023e5761037e8151926040602084015193015193929391610311565b3d9150610393565b6040513d5f823e3d90fd5b3461023e57602036600319011261023e576004356103f061133c565b6103f8611392565b80600f5403610409575b6001600655005b80600f557fd6a912222a539eff01eb7e23cd954e57c4ae962622948839fefbc46b0ffe914a5f80a280610402565b3461023e57604036600319011261023e57610450611248565b61045861125e565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b3461023e57604036600319011261023e576104ca6004356104a661125e565b906104c56104c0825f526005602052600160405f20015490565b611401565b61155e565b005b3461023e57602036600319011261023e576104e5611274565b6104ed61133c565b6104f5611392565b600a54811515908160ff821615150361050f576001600655005b60ff191660ff821617600a819055907f6e552ceee9488e9332de4530eb91788e818d00e6ccfb1f2968cb4325924e06115f80a28161055f575b50610556575b808080610402565b42600c5561054e565b60ff915060081c1681610548565b3461023e57606036600319011261023e57610586611248565b6044356001600160a01b038116916024359183900361023e576105a761133c565b6105af611392565b6105ba831515611304565b60018060a01b03169060405163a9059cbb60e01b81528360048201528160248201526020816044815f875af180156103c957610624575b5060207ffb475a842bad10d3800b61bd1a92e716051afba979b124b583bd99a2d1d7bfd591604051908152a36001600655005b6020813d602011610657575b8161063d602093836112e2565b8101031261023e5751801515810361023e575060206105f1565b3d9150610630565b3461023e575f36600319011261023e576020600e54604051908152f35b3461023e575f36600319011261023e57602060ff600d54166040519015158152f35b3461023e57604036600319011261023e576106c46106ba611248565b602435903361143b565b602060405160018152f35b611283565b3461023e575f36600319011261023e5760206040515f8152f35b3461023e575f36600319011261023e57602060ff600a5460081c166040519015158152f35b3461023e575f36600319011261023e576040515f6004548060011c90600181168015610809575b6020831081146107f5578285529081156107d15750600114610773575b61037e83610767818503826112e2565b6040519182918261121e565b91905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b915f905b8082106107b757509091508101602001610767610757565b91926001816020925483858801015201910190929161079f565b60ff191660208086019190915291151560051b840190910191506107679050610757565b634e487b7160e01b5f52602260045260245ffd5b91607f169161073a565b3461023e57604036600319011261023e5761082c61125e565b6004355f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b3461023e575f36600319011261023e576020600f54604051908152f35b3461023e57604036600319011261023e57610892611274565b6024359061089e61133c565b6108a6611392565b600a54901515908160ff8260081c161515036108fc575b5081600b54036108f3575b7f5d394a4e9bd564f1a587773e5dbd3099a9e7b2fb0ecb2dbe1808ad21e9dc943e5f80a36001600655005b81600b556108c8565b61ff001916600882901b61ff001617600a55826108bd565b3461023e57602036600319011261023e576001600160a01b03610935611248565b165f525f602052602060405f2054604051908152f35b3461023e575f36600319011261023e576020600c54604051908152f35b3461023e575f36600319011261023e57602060ff600a54166040519015158152f35b3461023e575f36600319011261023e576008546040516001600160a01b039091168152602090f35b3461023e57604036600319011261023e576109cb611274565b602435906109d761133c565b6109df611392565b600d54901515908160ff8216151503610a32575b5081600e5403610a29575b7f7bc6854ea2dd87a130378b485fb91a0eb3056211ee9b85cb67fabef030c073505f80a36001600655005b81600e556109fe565b60ff191660ff821617600d55826109f3565b3461023e57602036600319011261023e57335f9081527f847f481f687befb06ed3511f1a8dcef57e83007c0147ae5047583d705617093760205260409020546004359060ff1615610b45573315610b3257335f525f6020528060405f2054818110610b1957335f525f6020520360405f205580600254036002555f6040518281527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a36040519081527f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df760203392a2005b63391434e360e21b5f523360045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b63e2517d3f60e01b5f52336004527f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84860245260445ffd5b3461023e57604036600319011261023e57610b95611248565b335f9081527f15a28d26fa1bf736cf7edc9922607171ccb09c3c73b808e7772a3013e068a5226020526040902054602435919060ff1615610c80576001600160a01b0316908115610c6d57600254818101809111610c59577f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe91602091600255835f525f825260405f20818154019055835f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051858152a3604051908152a2005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b63e2517d3f60e01b5f52336004527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660245260445ffd5b3461023e57604036600319011261023e57610cd061125e565b336001600160a01b03821603610cec576104ca9060043561155e565b63334bd91960e11b5f5260045ffd5b3461023e575f36600319011261023e57602060405160128152f35b3461023e57604036600319011261023e576104ca600435610d3561125e565b90610d4f6104c0825f526005602052600160405f20015490565b6114d2565b3461023e575f36600319011261023e576020600b54604051908152f35b3461023e57602036600319011261023e576020610d9c6004355f526005602052600160405f20015490565b604051908152f35b3461023e57606036600319011261023e57610dbd611248565b610dc561125e565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f198110610e03575b506106c4935061143b565b838110610e68578415610e55573315610e42576106c4945f52600160205260405f2060018060a01b0333165f526020528360405f209103905584610df8565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b3461023e575f36600319011261023e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461023e575f36600319011261023e576020600254604051908152f35b3461023e575f36600319011261023e576007546040516001600160a01b039091168152602090f35b3461023e57604036600319011261023e57610f25611248565b6024359081151580920361023e57610f3b61133c565b610f43611392565b6001600160a01b03165f818152600960205260409020805460ff161515839003610f6e576001600655005b60ff1981541660ff84161790557fa534e7c418f24c958af1e861a7af8c6ece8f5204eb8c33685ae7e16a1c2ada425f80a3808080610402565b604036600319011261023e576004356001600160a01b0381169081900361023e575f8080809360243590610fd961133c565b610fe1611392565b610fec811515611304565b80837ffb475a842bad10d3800b61bd1a92e716051afba979b124b583bd99a2d1d7bfd56020604051868152a35af13d156110a2573d67ffffffffffffffff811161108e5760405190611048601f8201601f1916602001836112e2565b81525f60203d92013e5b1561105e576001600655005b60405162461bcd60e51b81526020600482015260086024820152671155120819985a5b60c21b6044820152606490fd5b634e487b7160e01b5f52604160045260245ffd5b611052565b3461023e57604036600319011261023e576110c0611248565b602435335f52600160205260405f2060018060a01b0383165f5260205260405f2054151580611107575b6110f8576106c491336115e2565b632279cc2160e01b5f5260045ffd5b508015156110ea565b3461023e575f36600319011261023e576040515f6003548060011c906001811680156111c1575b6020831081146107f5578285529081156107d157506001146111635761037e83610767818503826112e2565b91905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f905b8082106111a757509091508101602001610767610757565b91926001816020925483858801015201910190929161118f565b91607f1691611137565b3461023e57602036600319011261023e576004359063ffffffff60e01b821680920361023e57602091637965db0b60e01b811490811561120d575b5015158152f35b6301ffc9a760e01b14905083611206565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361023e57565b602435906001600160a01b038216820361023e57565b60043590811515820361023e57565b3461023e57604036600319011261023e5761129c611248565b5060405162461bcd60e51b815260206004820152601f60248201527f55736520617070726f7665282920746f2073657420746f2030206669727374006044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761108e57604052565b1561130b57565b60405162461bcd60e51b81526020600482015260096024820152685a65726f2027746f2760b81b6044820152606490fd5b60026006541461134d576002600655565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b335f9081527fd8ef4509105c3edb0b04658b4528edc5ddd30ea5a81e623a2623c88db1eb54b6602052604090205460ff16156113ca57565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b5f81815260056020908152604080832033845290915290205460ff16156114255750565b63e2517d3f60e01b5f523360045260245260445ffd5b6001600160a01b0316908115610b32576001600160a01b0316918215610c6d57815f525f60205260405f20548181106114b957817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b5f8181526005602090815260408083206001600160a01b038616845290915290205460ff16611558575f8181526005602090815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f8181526005602090815260408083206001600160a01b038616845290915290205460ff1615611558575f8181526005602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6001600160a01b0316908115610e55576001600160a01b0316918215610e425760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a356fea26469706673582212202f3bdc56a83b87774368eb14d04af7beaf83758e6ea7217f4fe226e9d039491764736f6c634300081c0033bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ffd8ef4509105c3edb0b04658b4528edc5ddd30ea5a81e623a2623c88db1eb54b6a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
							"opcodes": "PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 PUSH2 0x1EBE DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1A DUP3 DUP6 PUSH2 0x713 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x410 JUMPI PUSH2 0x39 PUSH1 0x20 PUSH2 0x32 DUP4 PUSH2 0x736 JUMP JUMPDEST SWAP3 ADD PUSH2 0x736 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x49 PUSH1 0x40 DUP5 PUSH2 0x713 JUMP JUMPDEST PUSH1 0xB DUP4 MSTORE PUSH11 0x2BB0B6363C902A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x70 PUSH1 0x40 DUP5 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x3 DUP4 MSTORE PUSH3 0x545747 PUSH1 0xE8 SHL PUSH1 0x20 DUP5 ADD MSTORE DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x624 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x709 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x606 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x6A6 JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x643 JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH0 SWAP3 PUSH2 0x638 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x624 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x61A JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x606 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x5A3 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x540 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH0 SWAP3 PUSH2 0x535 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x1E PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0xE SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x502 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x80 MSTORE CALLER ISZERO PUSH2 0x4BF JUMPI PUSH1 0x2 SLOAD PUSH12 0x409F9CBC7C4A04C220000000 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x4AB JUMPI PUSH1 0x2 SSTORE CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH12 0x409F9CBC7C4A04C220000000 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH12 0x409F9CBC7C4A04C220000000 DUP2 MSTORE PUSH0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x80 MLOAD PUSH2 0x203 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x74A JUMP JUMPDEST POP PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH32 0x15A28D26FA1BF736CF7EDC9922607171CCB09C3C73B808E7772A3013E068A523 DUP1 SLOAD PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1E9E PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 DUP3 SWAP1 SSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1E5E PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 DUP1 LOG4 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH32 0x847F481F687BEFB06ED3511F1A8DCEF57E83007C0147AE5047583D7056170938 DUP1 SLOAD PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1E9E PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 DUP3 SWAP1 SSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1E5E PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 DUP1 LOG4 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x41C JUMPI PUSH0 SWAP3 PUSH2 0x46A JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x41C JUMPI PUSH0 SWAP2 PUSH2 0x427 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x64E329CB PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x41C JUMPI PUSH0 SWAP2 PUSH2 0x3DE JUMPI JUMPDEST POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 PUSH1 0xF SSTORE PUSH1 0xA DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x167B SWAP1 DUP2 PUSH2 0x7E3 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0xE98 ADD MSTORE RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x414 JUMPI JUMPDEST DUP2 PUSH2 0x3F9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x713 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x410 JUMPI PUSH2 0x40A SWAP1 PUSH2 0x736 JUMP JUMPDEST PUSH0 PUSH2 0x38C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x462 JUMPI JUMPDEST DUP2 PUSH2 0x442 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x713 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x410 JUMPI PUSH0 SWAP2 PUSH1 0x44 PUSH2 0x459 PUSH1 0x20 SWAP4 PUSH2 0x736 JUMP JUMPDEST SWAP3 POP POP SWAP2 PUSH2 0x34A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x435 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4A3 JUMPI JUMPDEST DUP2 PUSH2 0x486 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x713 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x410 JUMPI PUSH1 0x20 PUSH2 0x49B PUSH1 0x4 SWAP3 PUSH2 0x736 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x323 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x479 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x5A65726F2044414F PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2D32B937903937BABA32B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH1 0x4 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x58B JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x573 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x145 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x565 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x550 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x5FC JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x5F1 JUMPI POP PUSH2 0x117 JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5E4 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x105 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0xCF JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x3 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x68E JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x676 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xE4 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x668 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x653 JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x6FF JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x6F4 JUMPI POP PUSH2 0xB3 JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x6E7 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x6DE JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x624 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x410 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1E7E PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7DD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1E7E PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1E9E PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x48 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xA419615BC8FDA4C87663805EE2A3597A6D71C1D476911D9892F340D965BC7BF1 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x11CB JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A7 JUMPI DUP1 PUSH4 0x99A04E5 EQ PUSH2 0xFA7 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0xF0C JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0xEE4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEC7 JUMPI DUP1 PUSH4 0x2131C68C EQ PUSH2 0xE83 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDA4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xD71 JUMPI DUP1 PUSH4 0x2618F214 EQ PUSH2 0xD54 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xD16 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xCFB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xCB7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xB7C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0xA44 JUMPI DUP1 PUSH4 0x48FCA59D EQ PUSH2 0x9B2 JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x98A JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x968 JUMPI DUP1 PUSH4 0x65CF7C9B EQ PUSH2 0x94B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x914 JUMPI DUP1 PUSH4 0x89900603 EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x85C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x813 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0x963472F9 EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6D4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x69E JUMPI DUP1 PUSH4 0xA985CEEF EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0xB319C6B7 EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0xB37FD190 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xC2E5EC04 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xF6F1E306 EQ PUSH2 0x242 JUMPI PUSH4 0xFE575A87 EQ PUSH2 0x201 JUMPI PUSH0 PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x222 PUSH2 0x1248 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x256 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x262 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x26A PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x407E9458C121455467AD277A21812C883F5D67EE0020A7B7A3EA0007A6639183 PUSH1 0x40 CALLER SWAP3 LOG3 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x60 SWAP1 PUSH2 0x2C0 DUP2 DUP6 ADDRESS PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0xC4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0xF305D719 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE DUP6 PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH0 SWAP2 PUSH0 SWAP4 PUSH0 SWAP3 PUSH2 0x382 JUMPI JUMPDEST POP SWAP1 PUSH2 0x37E SWAP2 PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E PUSH1 0x40 MLOAD DUP1 PUSH2 0x359 DUP6 DUP10 DUP10 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP3 POP SWAP3 POP POP PUSH1 0x60 DUP2 RETURNDATASIZE PUSH1 0x60 GT PUSH2 0x3C1 JUMPI JUMPDEST DUP2 PUSH2 0x3A0 PUSH1 0x60 SWAP4 DUP4 PUSH2 0x12E2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23E JUMPI PUSH2 0x37E DUP2 MLOAD SWAP3 PUSH1 0x40 PUSH1 0x20 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP4 SWAP3 SWAP4 SWAP2 PUSH2 0x311 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3F0 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x3F8 PUSH2 0x1392 JUMP JUMPDEST DUP1 PUSH1 0xF SLOAD SUB PUSH2 0x409 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST DUP1 PUSH1 0xF SSTORE PUSH32 0xD6A912222A539EFF01EB7E23CD954E57C4AE962622948839FEFBC46B0FFE914A PUSH0 DUP1 LOG2 DUP1 PUSH2 0x402 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x450 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x458 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x4CA PUSH1 0x4 CALLDATALOAD PUSH2 0x4A6 PUSH2 0x125E JUMP JUMPDEST SWAP1 PUSH2 0x4C5 PUSH2 0x4C0 DUP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x4E5 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x133C JUMP JUMPDEST PUSH2 0x4F5 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH1 0xFF DUP3 AND ISZERO ISZERO SUB PUSH2 0x50F JUMPI PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xFF DUP3 AND OR PUSH1 0xA DUP2 SWAP1 SSTORE SWAP1 PUSH32 0x6E552CEEE9488E9332DE4530EB91788E818D00E6CCFB1F2968CB4325924E0611 PUSH0 DUP1 LOG2 DUP2 PUSH2 0x55F JUMPI JUMPDEST POP PUSH2 0x556 JUMPI JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x402 JUMP JUMPDEST TIMESTAMP PUSH1 0xC SSTORE PUSH2 0x54E JUMP JUMPDEST PUSH1 0xFF SWAP2 POP PUSH1 0x8 SHR AND DUP2 PUSH2 0x548 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x586 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 DUP4 SWAP1 SUB PUSH2 0x23E JUMPI PUSH2 0x5A7 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x5AF PUSH2 0x1392 JUMP JUMPDEST PUSH2 0x5BA DUP4 ISZERO ISZERO PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH2 0x624 JUMPI JUMPDEST POP PUSH1 0x20 PUSH32 0xFB475A842BAD10D3800B61BD1A92E716051AFBA979B124B583BD99A2D1D7BFD5 SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x657 JUMPI JUMPDEST DUP2 PUSH2 0x63D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x12E2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23E JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x23E JUMPI POP PUSH1 0x20 PUSH2 0x5F1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x630 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x6C4 PUSH2 0x6BA PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x143B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1283 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xA SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x809 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x7F5 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x7D1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x773 JUMPI JUMPDEST PUSH2 0x37E DUP4 PUSH2 0x767 DUP2 DUP6 SUB DUP3 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x121E JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x4 PUSH0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x7B7 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x767 PUSH2 0x757 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x79F JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x767 SWAP1 POP PUSH2 0x757 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x73A JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x82C PUSH2 0x125E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x892 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x89E PUSH2 0x133C JUMP JUMPDEST PUSH2 0x8A6 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 ISZERO ISZERO SWAP1 DUP2 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND ISZERO ISZERO SUB PUSH2 0x8FC JUMPI JUMPDEST POP DUP2 PUSH1 0xB SLOAD SUB PUSH2 0x8F3 JUMPI JUMPDEST PUSH32 0x5D394A4E9BD564F1A587773E5DBD3099A9E7B2FB0ECB2DBE1808AD21E9DC943E PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST DUP2 PUSH1 0xB SSTORE PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0xFF00 NOT AND PUSH1 0x8 DUP3 SWAP1 SHL PUSH2 0xFF00 AND OR PUSH1 0xA SSTORE DUP3 PUSH2 0x8BD JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x935 PUSH2 0x1248 JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x9CB PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x9D7 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x9DF PUSH2 0x1392 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 ISZERO ISZERO SWAP1 DUP2 PUSH1 0xFF DUP3 AND ISZERO ISZERO SUB PUSH2 0xA32 JUMPI JUMPDEST POP DUP2 PUSH1 0xE SLOAD SUB PUSH2 0xA29 JUMPI JUMPDEST PUSH32 0x7BC6854EA2DD87A130378B485FB91A0EB3056211EE9B85CB67FABEF030C07350 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST DUP2 PUSH1 0xE SSTORE PUSH2 0x9FE JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xFF DUP3 AND OR PUSH1 0xD SSTORE DUP3 PUSH2 0x9F3 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x847F481F687BEFB06ED3511F1A8DCEF57E83007C0147AE5047583D7056170937 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB45 JUMPI CALLER ISZERO PUSH2 0xB32 JUMPI CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xB19 JUMPI CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0xB95 PUSH2 0x1248 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x15A28D26FA1BF736CF7EDC9922607171CCB09C3C73B808E7772A3013E068A522 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xC80 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xC6D JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xC59 JUMPI PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x2 SSTORE DUP4 PUSH0 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE DUP4 PUSH0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0xCD0 PUSH2 0x125E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xCEC JUMPI PUSH2 0x4CA SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x155E JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x4CA PUSH1 0x4 CALLDATALOAD PUSH2 0xD35 PUSH2 0x125E JUMP JUMPDEST SWAP1 PUSH2 0xD4F PUSH2 0x4C0 DUP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14D2 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH2 0xD9C PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0xDBD PUSH2 0x1248 JUMP JUMPDEST PUSH2 0xDC5 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH0 NOT DUP2 LT PUSH2 0xE03 JUMPI JUMPDEST POP PUSH2 0x6C4 SWAP4 POP PUSH2 0x143B JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0xE68 JUMPI DUP5 ISZERO PUSH2 0xE55 JUMPI CALLER ISZERO PUSH2 0xE42 JUMPI PUSH2 0x6C4 SWAP5 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0xDF8 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0xF25 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x23E JUMPI PUSH2 0xF3B PUSH2 0x133C JUMP JUMPDEST PUSH2 0xF43 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP4 SWAP1 SUB PUSH2 0xF6E JUMPI PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH32 0xA534E7C418F24C958AF1E861A7AF8C6ECE8F5204EB8C33685AE7E16A1C2ADA42 PUSH0 DUP1 LOG3 DUP1 DUP1 DUP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x23E JUMPI PUSH0 DUP1 DUP1 DUP1 SWAP4 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xFD9 PUSH2 0x133C JUMP JUMPDEST PUSH2 0xFE1 PUSH2 0x1392 JUMP JUMPDEST PUSH2 0xFEC DUP2 ISZERO ISZERO PUSH2 0x1304 JUMP JUMPDEST DUP1 DUP4 PUSH32 0xFB475A842BAD10D3800B61BD1A92E716051AFBA979B124B583BD99A2D1D7BFD5 PUSH1 0x20 PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE LOG3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x10A2 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x108E JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1048 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0x12E2 JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x105E JUMPI PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x1155120819985A5B PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1052 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x10C0 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD CALLER PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0x1107 JUMPI JUMPDEST PUSH2 0x10F8 JUMPI PUSH2 0x6C4 SWAP2 CALLER PUSH2 0x15E2 JUMP JUMPDEST PUSH4 0x2279CC21 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x10EA JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x11C1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x7F5 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x7D1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1163 JUMPI PUSH2 0x37E DUP4 PUSH2 0x767 DUP2 DUP6 SUB DUP3 PUSH2 0x12E2 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x11A7 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x767 PUSH2 0x757 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x118F JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1137 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x23E JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x120D JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23E JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23E JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x23E JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x129C PUSH2 0x1248 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736520617070726F7665282920746F2073657420746F203020666972737400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x108E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x130B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x5A65726F2027746F27 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x134D JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xD8EF4509105C3EDB0B04658B4528EDC5DDD30EA5A81E623A2623C88DB1EB54B6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13CA JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1425 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xB32 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xC6D JUMPI DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x14B9 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1558 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1558 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xE55 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xE42 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F EXTCODESIZE 0xDC JUMP 0xA8 EXTCODESIZE DUP8 PUSH24 0x4368EB14D04AF7BEAF83758E6EA7217F4FE226E9D0394917 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER 0xBD PUSH26 0xB86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E12 SWAP16 SIGNEXTEND STOP SELFDESTRUCT 0xD8 0xEF GASLIMIT MULMOD LT TLOAD RETURNDATACOPY 0xDB SIGNEXTEND DIV PUSH6 0x8B4528EDC5DD 0xD3 0xE 0xA5 0xA8 0x1E PUSH3 0x3A2623 0xC8 DUP14 0xB1 0xEB SLOAD 0xB6 LOG4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0x0 ",
							"sourceMap": "1241:10787:10:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1241:10787:10;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1241:10787:10;;;;;;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1241:10787:10;;;;1690:17:4;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;;;;1690:17:4;1241:10787:10;;;1821:22:3;1241:10787:10;1952:2;1241:10787;;;;2073:2;1241:10787;-1:-1:-1;;;;;1241:10787:10;;3075:30;;1241:10787;;-1:-1:-1;;;;;1241:10787:10;;3139:25;1241:10787;;3188:25;;3230:10;7528:21:4;7524:91;;6233:21;1241:10787:10;1561:11;1241:10787;;;;;;;6233:21:4;1241:10787:10;3230:10;-1:-1:-1;1241:10787:10;-1:-1:-1;1241:10787:10;;;-1:-1:-1;1241:10787:10;1561:11;1241:10787;;;;;;;1561:11;1241:10787;;-1:-1:-1;7083:25:4;1241:10787:10;3230:10;7083:25:4;;3188::10;1348:23;3269:36;;-1:-1:-1;;;;;1241:10787:10;3269:36;:::i;:::-;-1:-1:-1;1417:24:10;-1:-1:-1;1241:10787:10;;;3901:6:0;1241:10787:10;;3901:22:0;1241:10787:10;;-1:-1:-1;;;;;;;;;;;1241:10787:10;;;;1348:23;;1241:10787;;-1:-1:-1;;;;;;;;;;;5886:52:0;-1:-1:-1;5886:52:0;1487:24:10;-1:-1:-1;1241:10787:10;;;3901:6:0;1241:10787:10;;3901:22:0;1241:10787:10;;-1:-1:-1;;;;;;;;;;;1241:10787:10;;;;1348:23;;1241:10787;;-1:-1:-1;;;;;;;;;;;5886:52:0;-1:-1:-1;5886:52:0;3490:25:10;1487:24;;-1:-1:-1;;;;;;1487:24:10;;;;;1241:10787;;-1:-1:-1;;;3543:16:10;;1241:10787;;;1690:17:4;1241:10787:10;;3543:16;;;;;;;-1:-1:-1;3543:16:10;;;1241:10787;;;1690:17:4;1241:10787:10;;;1487:24;;;;;;;3584:13;;;;;;;;;-1:-1:-1;3584:13:10;;;1241:10787;-1:-1:-1;1241:10787:10;;-1:-1:-1;;;3664:50:10;;3632:4;1690:17:4;3664:50:10;;1487:24;-1:-1:-1;;;;;1241:10787:10;;;1487:24;;;;1241:10787;;;;;3664:50;;1241:10787;;-1:-1:-1;;1241:10787:10;3664:50;;;;;;;-1:-1:-1;3664:50:10;;;1241:10787;-1:-1:-1;3647:67:10;1487:24;;-1:-1:-1;;;;;;1487:24:10;-1:-1:-1;;;;;1241:10787:10;;;;1487:24;;;;;;-1:-1:-1;3725:16:10;1241:10787;3751:23;1487:24;;-1:-1:-1;;1487:24:10;;;3826;1487;;-1:-1:-1;;1487:24:10;;;1241:10787;;;;;;;;3188:25;1241:10787;;;;;;3664:50;;;1241:10787;3664:50;;1241:10787;3664:50;;;;;;1241:10787;3664:50;;;:::i;:::-;;;1487:24;;;;1241:10787;;;:::i;:::-;3664:50;;;1487:24;-1:-1:-1;1241:10787:10;;3664:50;;;-1:-1:-1;3664:50:10;;;1241:10787;;1487:24;-1:-1:-1;1487:24:10;;;;;3584:13;;;1241:10787;3584:13;;1241:10787;3584:13;;;;;;1241:10787;3584:13;;;:::i;:::-;;;1487:24;;;;-1:-1:-1;1241:10787:10;3664:50;1241:10787;;;;:::i;:::-;3584:13;;;;;;;;;-1:-1:-1;3584:13:10;;3543:16;;;;1241:10787;3543:16;;1241:10787;3543:16;;;;;;1241:10787;3543:16;;;:::i;:::-;;;1487:24;;;;1241:10787;;1690:17:4;1241:10787:10;;:::i;:::-;3543:16;;;;;;;;-1:-1:-1;3543:16:10;;1241:10787;;;;-1:-1:-1;1241:10787:10;;1690:17:4;1241:10787:10;;-1:-1:-1;1241:10787:10;7524:91:4;7572:32;;;-1:-1:-1;7572:32:4;-1:-1:-1;1690:17:4;1487:24:10;1241:10787;-1:-1:-1;7572:32:4;1241:10787:10;;;-1:-1:-1;;;1241:10787:10;;;1690:17:4;1241:10787:10;;;;;;;;-1:-1:-1;;;1241:10787:10;;;;;;;;;;-1:-1:-1;;;1241:10787:10;;;1690:17:4;1241:10787:10;;;;;;;;-1:-1:-1;;;1241:10787:10;;;;;;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;;1690:17:4;-1:-1:-1;1241:10787:10;;-1:-1:-1;1241:10787:10;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;1690:17:4;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:17:4;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;-1:-1:-1;1241:10787:10;;1690:17:4;1241:10787:10;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;-1:-1:-1;1241:10787:10;;1690:17:4;1241:10787:10;;-1:-1:-1;1241:10787:10;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;;;-1:-1:-1;1241:10787:10;;-1:-1:-1;1241:10787:10;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1241:10787:10;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;1241:10787:10;;;;;;-1:-1:-1;;;;;;;;;;;1241:10787:10;;;;;;;;;;-1:-1:-1;;;;;1241:10787:10;;;;;-1:-1:-1;;;;;;;;;;;1241:10787:10;;;;;1487:24;;-1:-1:-1;;1487:24:10;1241:10787;1487:24;;;735:10:7;;1241:10787:10;-1:-1:-1;;;;;;;;;;;1348:23:10;6370:40:0;;1241:10787:10;6370:40:0;6347:4;6424:11;:::o;6272:217::-;6466:12;1241:10787:10;6466:12:0;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_14171": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"external_fun_increaseAllowance": {
									"entryPoint": 4739,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 4834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_approve": {
									"entryPoint": 5602,
									"id": 1046,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 5121,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_14166": {
									"entryPoint": 5010,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_getRoleAdmin": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 5330,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 4924,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revokeRole": {
									"entryPoint": 5470,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_transfer": {
									"entryPoint": 5179,
									"id": 825,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"require_helper_stringliteral_feae": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"1355": [
									{
										"length": 32,
										"start": 3736
									}
								]
							},
							"linkReferences": {},
							"object": "6080806040526004361015610048575b50361561001a575f80fd5b6040513481527fa419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf160203392a2005b5f3560e01c90816301ffc9a7146111cb5750806306fdde0314611110578063095ea7b3146110a7578063099a04e514610fa7578063153b0d1e14610f0c5780631694505e14610ee457806318160ddd14610ec75780632131c68c14610e8357806323b872dd14610da4578063248a9ca314610d715780632618f21414610d545780632f2ff15d14610d16578063313ce56714610cfb57806336568abe14610cb757806339509351146106cf57806340c10f1914610b7c57806342966c6814610a4457806348fca59d146109b257806349bd5a5e1461098a5780634ada218b1461096857806365cf7c9b1461094b57806370a082311461091457806389900603146108795780638c0b5e221461085c57806391d148541461081357806395d89b4114610713578063963472f9146106ee578063a217fddf146106d4578063a457c2d7146106cf578063a9059cbb1461069e578063a985ceef1461067c578063b319c6b71461065f578063b37fd1901461056d578063c2e5ec04146104cc578063d547741f14610487578063dd62ed3e14610437578063ec28438a146103d4578063f6f1e306146102425763fe575a8714610201575f61000f565b3461023e57602036600319011261023e576001600160a01b03610222611248565b165f526009602052602060ff60405f2054166040519015158152f35b5f80fd5b60a036600319011261023e57610256611248565b6024359061026261133c565b61026a611392565b60018060a01b0316806040518381523460208201527f407e9458c121455467ad277a21812c883f5d67ee0020a7b7a3ea0007a663918360403392a36007546001600160a01b0316916060906102c08185306115e2565b60c46040518095819363f305d71960e01b835230600484015260248301526044356044830152606435606483015285608483015260843560a483015234905af180156103c9575f915f935f92610382575b509061037e917f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e60405180610359858989846040919493926060820195825260208201520152565b0390a26001600655604051938493846040919493926060820195825260208201520152565b0390f35b92509250506060813d6060116103c1575b816103a0606093836112e2565b8101031261023e5761037e8151926040602084015193015193929391610311565b3d9150610393565b6040513d5f823e3d90fd5b3461023e57602036600319011261023e576004356103f061133c565b6103f8611392565b80600f5403610409575b6001600655005b80600f557fd6a912222a539eff01eb7e23cd954e57c4ae962622948839fefbc46b0ffe914a5f80a280610402565b3461023e57604036600319011261023e57610450611248565b61045861125e565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b3461023e57604036600319011261023e576104ca6004356104a661125e565b906104c56104c0825f526005602052600160405f20015490565b611401565b61155e565b005b3461023e57602036600319011261023e576104e5611274565b6104ed61133c565b6104f5611392565b600a54811515908160ff821615150361050f576001600655005b60ff191660ff821617600a819055907f6e552ceee9488e9332de4530eb91788e818d00e6ccfb1f2968cb4325924e06115f80a28161055f575b50610556575b808080610402565b42600c5561054e565b60ff915060081c1681610548565b3461023e57606036600319011261023e57610586611248565b6044356001600160a01b038116916024359183900361023e576105a761133c565b6105af611392565b6105ba831515611304565b60018060a01b03169060405163a9059cbb60e01b81528360048201528160248201526020816044815f875af180156103c957610624575b5060207ffb475a842bad10d3800b61bd1a92e716051afba979b124b583bd99a2d1d7bfd591604051908152a36001600655005b6020813d602011610657575b8161063d602093836112e2565b8101031261023e5751801515810361023e575060206105f1565b3d9150610630565b3461023e575f36600319011261023e576020600e54604051908152f35b3461023e575f36600319011261023e57602060ff600d54166040519015158152f35b3461023e57604036600319011261023e576106c46106ba611248565b602435903361143b565b602060405160018152f35b611283565b3461023e575f36600319011261023e5760206040515f8152f35b3461023e575f36600319011261023e57602060ff600a5460081c166040519015158152f35b3461023e575f36600319011261023e576040515f6004548060011c90600181168015610809575b6020831081146107f5578285529081156107d15750600114610773575b61037e83610767818503826112e2565b6040519182918261121e565b91905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b915f905b8082106107b757509091508101602001610767610757565b91926001816020925483858801015201910190929161079f565b60ff191660208086019190915291151560051b840190910191506107679050610757565b634e487b7160e01b5f52602260045260245ffd5b91607f169161073a565b3461023e57604036600319011261023e5761082c61125e565b6004355f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b3461023e575f36600319011261023e576020600f54604051908152f35b3461023e57604036600319011261023e57610892611274565b6024359061089e61133c565b6108a6611392565b600a54901515908160ff8260081c161515036108fc575b5081600b54036108f3575b7f5d394a4e9bd564f1a587773e5dbd3099a9e7b2fb0ecb2dbe1808ad21e9dc943e5f80a36001600655005b81600b556108c8565b61ff001916600882901b61ff001617600a55826108bd565b3461023e57602036600319011261023e576001600160a01b03610935611248565b165f525f602052602060405f2054604051908152f35b3461023e575f36600319011261023e576020600c54604051908152f35b3461023e575f36600319011261023e57602060ff600a54166040519015158152f35b3461023e575f36600319011261023e576008546040516001600160a01b039091168152602090f35b3461023e57604036600319011261023e576109cb611274565b602435906109d761133c565b6109df611392565b600d54901515908160ff8216151503610a32575b5081600e5403610a29575b7f7bc6854ea2dd87a130378b485fb91a0eb3056211ee9b85cb67fabef030c073505f80a36001600655005b81600e556109fe565b60ff191660ff821617600d55826109f3565b3461023e57602036600319011261023e57335f9081527f847f481f687befb06ed3511f1a8dcef57e83007c0147ae5047583d705617093760205260409020546004359060ff1615610b45573315610b3257335f525f6020528060405f2054818110610b1957335f525f6020520360405f205580600254036002555f6040518281527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a36040519081527f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df760203392a2005b63391434e360e21b5f523360045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b63e2517d3f60e01b5f52336004527f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84860245260445ffd5b3461023e57604036600319011261023e57610b95611248565b335f9081527f15a28d26fa1bf736cf7edc9922607171ccb09c3c73b808e7772a3013e068a5226020526040902054602435919060ff1615610c80576001600160a01b0316908115610c6d57600254818101809111610c59577f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe91602091600255835f525f825260405f20818154019055835f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051858152a3604051908152a2005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b63e2517d3f60e01b5f52336004527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660245260445ffd5b3461023e57604036600319011261023e57610cd061125e565b336001600160a01b03821603610cec576104ca9060043561155e565b63334bd91960e11b5f5260045ffd5b3461023e575f36600319011261023e57602060405160128152f35b3461023e57604036600319011261023e576104ca600435610d3561125e565b90610d4f6104c0825f526005602052600160405f20015490565b6114d2565b3461023e575f36600319011261023e576020600b54604051908152f35b3461023e57602036600319011261023e576020610d9c6004355f526005602052600160405f20015490565b604051908152f35b3461023e57606036600319011261023e57610dbd611248565b610dc561125e565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f198110610e03575b506106c4935061143b565b838110610e68578415610e55573315610e42576106c4945f52600160205260405f2060018060a01b0333165f526020528360405f209103905584610df8565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b3461023e575f36600319011261023e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461023e575f36600319011261023e576020600254604051908152f35b3461023e575f36600319011261023e576007546040516001600160a01b039091168152602090f35b3461023e57604036600319011261023e57610f25611248565b6024359081151580920361023e57610f3b61133c565b610f43611392565b6001600160a01b03165f818152600960205260409020805460ff161515839003610f6e576001600655005b60ff1981541660ff84161790557fa534e7c418f24c958af1e861a7af8c6ece8f5204eb8c33685ae7e16a1c2ada425f80a3808080610402565b604036600319011261023e576004356001600160a01b0381169081900361023e575f8080809360243590610fd961133c565b610fe1611392565b610fec811515611304565b80837ffb475a842bad10d3800b61bd1a92e716051afba979b124b583bd99a2d1d7bfd56020604051868152a35af13d156110a2573d67ffffffffffffffff811161108e5760405190611048601f8201601f1916602001836112e2565b81525f60203d92013e5b1561105e576001600655005b60405162461bcd60e51b81526020600482015260086024820152671155120819985a5b60c21b6044820152606490fd5b634e487b7160e01b5f52604160045260245ffd5b611052565b3461023e57604036600319011261023e576110c0611248565b602435335f52600160205260405f2060018060a01b0383165f5260205260405f2054151580611107575b6110f8576106c491336115e2565b632279cc2160e01b5f5260045ffd5b508015156110ea565b3461023e575f36600319011261023e576040515f6003548060011c906001811680156111c1575b6020831081146107f5578285529081156107d157506001146111635761037e83610767818503826112e2565b91905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f905b8082106111a757509091508101602001610767610757565b91926001816020925483858801015201910190929161118f565b91607f1691611137565b3461023e57602036600319011261023e576004359063ffffffff60e01b821680920361023e57602091637965db0b60e01b811490811561120d575b5015158152f35b6301ffc9a760e01b14905083611206565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361023e57565b602435906001600160a01b038216820361023e57565b60043590811515820361023e57565b3461023e57604036600319011261023e5761129c611248565b5060405162461bcd60e51b815260206004820152601f60248201527f55736520617070726f7665282920746f2073657420746f2030206669727374006044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761108e57604052565b1561130b57565b60405162461bcd60e51b81526020600482015260096024820152685a65726f2027746f2760b81b6044820152606490fd5b60026006541461134d576002600655565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b335f9081527fd8ef4509105c3edb0b04658b4528edc5ddd30ea5a81e623a2623c88db1eb54b6602052604090205460ff16156113ca57565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b5f81815260056020908152604080832033845290915290205460ff16156114255750565b63e2517d3f60e01b5f523360045260245260445ffd5b6001600160a01b0316908115610b32576001600160a01b0316918215610c6d57815f525f60205260405f20548181106114b957817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b5f8181526005602090815260408083206001600160a01b038616845290915290205460ff16611558575f8181526005602090815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f8181526005602090815260408083206001600160a01b038616845290915290205460ff1615611558575f8181526005602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6001600160a01b0316908115610e55576001600160a01b0316918215610e425760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a356fea26469706673582212202f3bdc56a83b87774368eb14d04af7beaf83758e6ea7217f4fe226e9d039491764736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x48 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xA419615BC8FDA4C87663805EE2A3597A6D71C1D476911D9892F340D965BC7BF1 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x11CB JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A7 JUMPI DUP1 PUSH4 0x99A04E5 EQ PUSH2 0xFA7 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0xF0C JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0xEE4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEC7 JUMPI DUP1 PUSH4 0x2131C68C EQ PUSH2 0xE83 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDA4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xD71 JUMPI DUP1 PUSH4 0x2618F214 EQ PUSH2 0xD54 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xD16 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xCFB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xCB7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xB7C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0xA44 JUMPI DUP1 PUSH4 0x48FCA59D EQ PUSH2 0x9B2 JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x98A JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x968 JUMPI DUP1 PUSH4 0x65CF7C9B EQ PUSH2 0x94B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x914 JUMPI DUP1 PUSH4 0x89900603 EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x85C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x813 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0x963472F9 EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6D4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x69E JUMPI DUP1 PUSH4 0xA985CEEF EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0xB319C6B7 EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0xB37FD190 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xC2E5EC04 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xF6F1E306 EQ PUSH2 0x242 JUMPI PUSH4 0xFE575A87 EQ PUSH2 0x201 JUMPI PUSH0 PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x222 PUSH2 0x1248 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x256 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x262 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x26A PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x407E9458C121455467AD277A21812C883F5D67EE0020A7B7A3EA0007A6639183 PUSH1 0x40 CALLER SWAP3 LOG3 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x60 SWAP1 PUSH2 0x2C0 DUP2 DUP6 ADDRESS PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0xC4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0xF305D719 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE DUP6 PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH0 SWAP2 PUSH0 SWAP4 PUSH0 SWAP3 PUSH2 0x382 JUMPI JUMPDEST POP SWAP1 PUSH2 0x37E SWAP2 PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E PUSH1 0x40 MLOAD DUP1 PUSH2 0x359 DUP6 DUP10 DUP10 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP3 POP SWAP3 POP POP PUSH1 0x60 DUP2 RETURNDATASIZE PUSH1 0x60 GT PUSH2 0x3C1 JUMPI JUMPDEST DUP2 PUSH2 0x3A0 PUSH1 0x60 SWAP4 DUP4 PUSH2 0x12E2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23E JUMPI PUSH2 0x37E DUP2 MLOAD SWAP3 PUSH1 0x40 PUSH1 0x20 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP4 SWAP3 SWAP4 SWAP2 PUSH2 0x311 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3F0 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x3F8 PUSH2 0x1392 JUMP JUMPDEST DUP1 PUSH1 0xF SLOAD SUB PUSH2 0x409 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST DUP1 PUSH1 0xF SSTORE PUSH32 0xD6A912222A539EFF01EB7E23CD954E57C4AE962622948839FEFBC46B0FFE914A PUSH0 DUP1 LOG2 DUP1 PUSH2 0x402 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x450 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x458 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x4CA PUSH1 0x4 CALLDATALOAD PUSH2 0x4A6 PUSH2 0x125E JUMP JUMPDEST SWAP1 PUSH2 0x4C5 PUSH2 0x4C0 DUP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x4E5 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x133C JUMP JUMPDEST PUSH2 0x4F5 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH1 0xFF DUP3 AND ISZERO ISZERO SUB PUSH2 0x50F JUMPI PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xFF DUP3 AND OR PUSH1 0xA DUP2 SWAP1 SSTORE SWAP1 PUSH32 0x6E552CEEE9488E9332DE4530EB91788E818D00E6CCFB1F2968CB4325924E0611 PUSH0 DUP1 LOG2 DUP2 PUSH2 0x55F JUMPI JUMPDEST POP PUSH2 0x556 JUMPI JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x402 JUMP JUMPDEST TIMESTAMP PUSH1 0xC SSTORE PUSH2 0x54E JUMP JUMPDEST PUSH1 0xFF SWAP2 POP PUSH1 0x8 SHR AND DUP2 PUSH2 0x548 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x586 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 DUP4 SWAP1 SUB PUSH2 0x23E JUMPI PUSH2 0x5A7 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x5AF PUSH2 0x1392 JUMP JUMPDEST PUSH2 0x5BA DUP4 ISZERO ISZERO PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH2 0x624 JUMPI JUMPDEST POP PUSH1 0x20 PUSH32 0xFB475A842BAD10D3800B61BD1A92E716051AFBA979B124B583BD99A2D1D7BFD5 SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x657 JUMPI JUMPDEST DUP2 PUSH2 0x63D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x12E2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23E JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x23E JUMPI POP PUSH1 0x20 PUSH2 0x5F1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x630 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x6C4 PUSH2 0x6BA PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x143B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1283 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xA SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x809 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x7F5 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x7D1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x773 JUMPI JUMPDEST PUSH2 0x37E DUP4 PUSH2 0x767 DUP2 DUP6 SUB DUP3 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x121E JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x4 PUSH0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x7B7 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x767 PUSH2 0x757 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x79F JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x767 SWAP1 POP PUSH2 0x757 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x73A JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x82C PUSH2 0x125E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x892 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x89E PUSH2 0x133C JUMP JUMPDEST PUSH2 0x8A6 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 ISZERO ISZERO SWAP1 DUP2 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND ISZERO ISZERO SUB PUSH2 0x8FC JUMPI JUMPDEST POP DUP2 PUSH1 0xB SLOAD SUB PUSH2 0x8F3 JUMPI JUMPDEST PUSH32 0x5D394A4E9BD564F1A587773E5DBD3099A9E7B2FB0ECB2DBE1808AD21E9DC943E PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST DUP2 PUSH1 0xB SSTORE PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0xFF00 NOT AND PUSH1 0x8 DUP3 SWAP1 SHL PUSH2 0xFF00 AND OR PUSH1 0xA SSTORE DUP3 PUSH2 0x8BD JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x935 PUSH2 0x1248 JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xA SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x9CB PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x9D7 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x9DF PUSH2 0x1392 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 ISZERO ISZERO SWAP1 DUP2 PUSH1 0xFF DUP3 AND ISZERO ISZERO SUB PUSH2 0xA32 JUMPI JUMPDEST POP DUP2 PUSH1 0xE SLOAD SUB PUSH2 0xA29 JUMPI JUMPDEST PUSH32 0x7BC6854EA2DD87A130378B485FB91A0EB3056211EE9B85CB67FABEF030C07350 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST DUP2 PUSH1 0xE SSTORE PUSH2 0x9FE JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xFF DUP3 AND OR PUSH1 0xD SSTORE DUP3 PUSH2 0x9F3 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x847F481F687BEFB06ED3511F1A8DCEF57E83007C0147AE5047583D7056170937 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB45 JUMPI CALLER ISZERO PUSH2 0xB32 JUMPI CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xB19 JUMPI CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0xB95 PUSH2 0x1248 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x15A28D26FA1BF736CF7EDC9922607171CCB09C3C73B808E7772A3013E068A522 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xC80 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xC6D JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xC59 JUMPI PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x2 SSTORE DUP4 PUSH0 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE DUP4 PUSH0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0xCD0 PUSH2 0x125E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xCEC JUMPI PUSH2 0x4CA SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x155E JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x4CA PUSH1 0x4 CALLDATALOAD PUSH2 0xD35 PUSH2 0x125E JUMP JUMPDEST SWAP1 PUSH2 0xD4F PUSH2 0x4C0 DUP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14D2 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH2 0xD9C PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0xDBD PUSH2 0x1248 JUMP JUMPDEST PUSH2 0xDC5 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH0 NOT DUP2 LT PUSH2 0xE03 JUMPI JUMPDEST POP PUSH2 0x6C4 SWAP4 POP PUSH2 0x143B JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0xE68 JUMPI DUP5 ISZERO PUSH2 0xE55 JUMPI CALLER ISZERO PUSH2 0xE42 JUMPI PUSH2 0x6C4 SWAP5 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0xDF8 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0xF25 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x23E JUMPI PUSH2 0xF3B PUSH2 0x133C JUMP JUMPDEST PUSH2 0xF43 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP4 SWAP1 SUB PUSH2 0xF6E JUMPI PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH32 0xA534E7C418F24C958AF1E861A7AF8C6ECE8F5204EB8C33685AE7E16A1C2ADA42 PUSH0 DUP1 LOG3 DUP1 DUP1 DUP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x23E JUMPI PUSH0 DUP1 DUP1 DUP1 SWAP4 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xFD9 PUSH2 0x133C JUMP JUMPDEST PUSH2 0xFE1 PUSH2 0x1392 JUMP JUMPDEST PUSH2 0xFEC DUP2 ISZERO ISZERO PUSH2 0x1304 JUMP JUMPDEST DUP1 DUP4 PUSH32 0xFB475A842BAD10D3800B61BD1A92E716051AFBA979B124B583BD99A2D1D7BFD5 PUSH1 0x20 PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE LOG3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x10A2 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x108E JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1048 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0x12E2 JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x105E JUMPI PUSH1 0x1 PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x1155120819985A5B PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1052 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x10C0 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD CALLER PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0x1107 JUMPI JUMPDEST PUSH2 0x10F8 JUMPI PUSH2 0x6C4 SWAP2 CALLER PUSH2 0x15E2 JUMP JUMPDEST PUSH4 0x2279CC21 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x10EA JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x11C1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x7F5 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x7D1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1163 JUMPI PUSH2 0x37E DUP4 PUSH2 0x767 DUP2 DUP6 SUB DUP3 PUSH2 0x12E2 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x11A7 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x767 PUSH2 0x757 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x118F JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1137 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x23E JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x120D JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23E JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23E JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x23E JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH2 0x129C PUSH2 0x1248 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736520617070726F7665282920746F2073657420746F203020666972737400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x108E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x130B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x5A65726F2027746F27 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x134D JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xD8EF4509105C3EDB0B04658B4528EDC5DDD30EA5A81E623A2623C88DB1EB54B6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13CA JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1425 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xB32 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xC6D JUMPI DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x14B9 JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1558 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1558 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xE55 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xE42 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F EXTCODESIZE 0xDC JUMP 0xA8 EXTCODESIZE DUP8 PUSH24 0x4368EB14D04AF7BEAF83758E6EA7217F4FE226E9D0394917 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "1241:10787:10:-:0;;;;;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;;;12009:9;1241:10787;;11983:36;1241:10787;11997:10;11983:36;;1241:10787;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;-1:-1:-1;;;;;1241:10787:10;;:::i;:::-;;;;7991:9;1241:10787;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;;;2227:103:3;;;:::i;:::-;2475:4:0;;:::i;:::-;1241:10787:10;;;;;;;;;;;;8454:9;1241:10787;;;;8401:63;1241:10787;8423:10;8401:63;;8542:16;1241:10787;-1:-1:-1;;;;;1241:10787:10;;;;8842:4:4;8499::10;1241:10787;8499:4;8842::4;:::i;:::-;8665:188:10;1241:10787;;;;;;;;;8665:188;;8499:4;1241:10787;8665:188;;1241:10787;;;;;;;;;;;;;;;;;;;;;;;;;;;;8454:9;8665:188;;;;;;;1241:10787;;;;;8665:188;;;1241:10787;;;;;8869:53;1241:10787;;8869:53;;;;;;1241:10787;;;;;;;;;;;;;;;;;;8869:53;;;;1241:10787;2809:22:3;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8665:188;;;;;;1241:10787;8665:188;;1241:10787;8665:188;;;;;;1241:10787;8665:188;;;:::i;:::-;;;1241:10787;;;;;;;;;;;;;;;;8665:188;;;;;;;;;-1:-1:-1;8665:188:10;;;1241:10787;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;2227:103:3;;:::i;:::-;2475:4:0;;:::i;:::-;1241:10787:10;6403:12;1241:10787;6403:21;6399:112;;1241:10787;;2809:22:3;1241:10787:10;;6399:112;1241:10787;6403:12;1241:10787;6479:21;1241:10787;6479:21;;6399:112;;;1241:10787;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;4747:26:0;1241:10787:10;;;;:::i;:::-;4717:18:0;2475:4;4717:18;;-1:-1:-1;1241:10787:10;3901:6:0;1241:10787:10;;3901:22:0;1241:10787:10;-1:-1:-1;1241:10787:10;3901:22:0;1241:10787:10;3810:120:0;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;1241:10787:10;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;2227:103:3;;:::i;:::-;2475:4:0;;:::i;:::-;5235:15:10;1241:10787;;;;;;;;;;;5235:26;5231:249;;1716:1:3;2809:22;1241:10787:10;;5231:249;-1:-1:-1;;1241:10787:10;;;;;5235:15;1241:10787;;;;5321:26;1241:10787;;5321:26;5365:35;;;5231:249;5361:109;;;5231:249;;;;;;5361:109;5439:15;5420:34;1241:10787;5361:109;;5365:35;1241:10787;;;;;;5365:35;;;1241:10787;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;2227:103:3;;:::i;:::-;2475:4:0;;:::i;:::-;11435:38:10;11443:16;;;11435:38;:::i;:::-;1241:10787;;;;;;;;;;;;11483:41;;;1241:10787;11483:41;;1241:10787;;;;;;;11483:41;1241:10787;11483:41;1241:10787;11483:41;;;;;;;;;1241:10787;;;11539:39;1241:10787;;;;;;11539:39;1241:10787;2809:22:3;1241:10787:10;;11483:41;1241:10787;11483:41;;1241:10787;11483:41;;;;;;1241:10787;11483:41;;;:::i;:::-;;;1241:10787;;;;;;;;;;;;-1:-1:-1;1241:10787:10;11483:41;;;;;-1:-1:-1;11483:41:10;;1241:10787;;;;;;-1:-1:-1;;1241:10787:10;;;;;7787:13;1241:10787;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;7686:16;1241:10787;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;3459:5:4;1241:10787:10;;:::i;:::-;;;735:10:7;;3459:5:4;:::i;:::-;1241:10787:10;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1241:10787:10;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;7381:24;1241:10787;;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1241:10787:10;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1241:10787:10;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;;;;;2954:6:0;1241:10787:10;;;;;2954:29:0;1241:10787:10;;;;;;-1:-1:-1;1241:10787:10;;;;;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;7884:12;1241:10787;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;;;2227:103:3;;;:::i;:::-;2475:4:0;;:::i;:::-;5642:24:10;1241:10787;;;;;;;;;;;;;5642:35;5638:100;;1241:10787;;;5751:10;1241:10787;5751:25;5747:80;;1241:10787;5841:41;1241:10787;5841:41;;1241:10787;2809:22:3;1241:10787:10;;5747:80;1241:10787;5751:10;1241:10787;5747:80;;5638:100;-1:-1:-1;;1241:10787:10;;;;;;;;5642:24;1241:10787;5638:100;;;1241:10787;;;;;;-1:-1:-1;;1241:10787:10;;;;-1:-1:-1;;;;;1241:10787:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;7585:16;1241:10787;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;7273:15;1241:10787;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;7175:14;1241:10787;;;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;;;2227:103:3;;;:::i;:::-;2475:4:0;;:::i;:::-;6043:16:10;1241:10787;;;;;;;;;;;6043:27;6039:84;;1241:10787;;;6136:13;1241:10787;6136:28;6132:86;;1241:10787;6232:33;1241:10787;6232:33;;1241:10787;2809:22:3;1241:10787:10;;6132:86;1241:10787;6136:13;1241:10787;6132:86;;6039:84;-1:-1:-1;;1241:10787:10;;;;;6043:16;1241:10787;6039:84;;;1241:10787;;;;;;-1:-1:-1;;1241:10787:10;;;;735:10:7;1241:10787:10;;;;;;;;;;;;;;;;3519:23:0;3515:108;;735:10:7;8054:21:4;8050:89;;735:10:7;1241:10787:10;;;;;;;;;;6340:19:4;;;6336:115;;735:10:7;1241:10787:10;;;;;;;;;;;6810:21:4;1241:10787:10;;6810:21:4;1241:10787:10;;;;;;;7083:25:4;1241:10787:10;735:10:7;7083:25:4;;1241:10787:10;;;;;5052:28;1241:10787;735:10:7;5052:28:10;;1241:10787;6336:115:4;6386:50;;;1241:10787:10;6386:50:4;735:10:7;1241:10787:10;;;;;;;;6386:50:4;8050:89;8098:30;;;1241:10787:10;8098:30:4;1241:10787:10;;;;;8098:30:4;3515:108:0;3565:47;;;1241:10787:10;3565:47:0;735:10:7;1241:10787:10;;1487:24;1241:10787;;;;3565:47:0;1241:10787:10;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;735:10:7;1241:10787:10;;;;;;;;;;;;;;;;;3519:23:0;3515:108;;-1:-1:-1;;;;;1241:10787:10;;7528:21:4;;7524:91;;6233:21;1241:10787:10;;;;;;;;;4907:18;1241:10787;;;6233:21:4;1241:10787:10;;;;;;;;;;;;;;;;;;7083:25:4;1241:10787:10;;;;;;7083:25:4;1241:10787:10;;;;;4907:18;1241:10787;;;;;;;;;;;;;7524:91:4;7572:32;;;1241:10787:10;7572:32:4;1241:10787:10;;;;;7572:32:4;3515:108:0;3565:47;;;1241:10787:10;3565:47:0;735:10:7;1241:10787:10;;1417:24;1241:10787;;;;3565:47:0;1241:10787:10;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;735:10:7;-1:-1:-1;;;;;1241:10787:10;;5421:34:0;5417:102;;5529:37;1241:10787:10;;;5529:37:0;:::i;5417:102::-;5478:30;;;1241:10787:10;5478:30:0;1241:10787:10;;5478:30:0;1241:10787:10;;;;;;-1:-1:-1;;1241:10787:10;;;;;;;2780:2:4;1241:10787:10;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;4330:25:0;1241:10787:10;;;;:::i;:::-;4300:18:0;2475:4;4300:18;;-1:-1:-1;1241:10787:10;3901:6:0;1241:10787:10;;3901:22:0;1241:10787:10;-1:-1:-1;1241:10787:10;3901:22:0;1241:10787:10;3810:120:0;;2475:4;4330:25;:::i;1241:10787:10:-;;;;;;-1:-1:-1;;1241:10787:10;;;;;7487:10;1241:10787;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;;;-1:-1:-1;1241:10787:10;3901:6:0;1241:10787:10;;3901:22:0;1241:10787:10;-1:-1:-1;1241:10787:10;3901:22:0;1241:10787:10;3810:120:0;;1241:10787:10;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;;;;;735:10:7;1241:10787:10;;;;;;;;;;;;;;-1:-1:-1;;10580:36:4;;10576:309;;1241:10787:10;4986:5:4;;;;;:::i;10576:309::-;10636:24;;;10632:130;;9813:19;;9809:89;;735:10:7;9911:21:4;9907:90;;4986:5;1241:10787:10;;;;;;;;;;;;;;735:10:7;1241:10787:10;-1:-1:-1;1241:10787:10;;;;;-1:-1:-1;1241:10787:10;;;;;10576:309:4;;;9907:90;9955:31;;;1241:10787:10;9955:31:4;1241:10787:10;;;;;9955:31:4;9809:89;9855:32;;;1241:10787:10;9855:32:4;1241:10787:10;;;;;9855:32:4;10632:130;10687:60;;;;;1241:10787:10;10687:60:4;735:10:7;1241:10787:10;;;;;;;;10687:60:4;1241:10787:10;;;;;;-1:-1:-1;;1241:10787:10;;;;;;6965:11;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;2927:12:4;1241:10787:10;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;7072:16;1241:10787;;;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;;;;;;;;;;;;2227:103:3;;:::i;:::-;2475:4:0;;:::i;:::-;-1:-1:-1;;;;;1241:10787:10;;;;;6684:9;1241:10787;;;;;;;;;;;6713:32;;;6709:151;;1716:1:3;2809:22;1241:10787:10;;6709:151;1241:10787;;;;;;;;;;;6811:38;1241:10787;6811:38;;6709:151;;;;;1241:10787;;;-1:-1:-1;;1241:10787:10;;;;;;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;;;;;2227:103:3;;;:::i;:::-;2475:4:0;;:::i;:::-;11744:38:10;11752:16;;;11744:38;:::i;:::-;1241:10787;;11797:37;1241:10787;;;;;;11797:37;11864:26;;1241:10787;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;:::i;:::-;;;;;;;;;;;;;;2809:22:3;1241:10787:10;;;;;-1:-1:-1;;;1241:10787:10;;;;;;;;;;;;-1:-1:-1;;;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;;;4092:10;1241:10787;;;;;;;;;;;;;;;-1:-1:-1;1241:10787:10;;;;-1:-1:-1;1241:10787:10;;4195:12;;:27;;;1241:10787;4191:81;;8842:4:4;4092:10:10;;8842:4:4;:::i;4191:81:10:-;4245:16;;;1241:10787;4245:16;1241:10787;;4245:16;4195:27;4211:11;;;;4195:27;;1241:10787;;;;;;-1:-1:-1;;1241:10787:10;;;;;;;1856:5:4;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1856:5:4;1241:10787:10;;;;;;;;;;;;-1:-1:-1;1241:10787:10;;-1:-1:-1;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:0;;;:87;;;;1241:10787:10;;;;;;;2673:87:0;-1:-1:-1;;;862:40:8;;-1:-1:-1;2673:87:0;;;1241:10787:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;:::o;:::-;;;;-1:-1:-1;;;;;1241:10787:10;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1241:10787:10;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1241:10787:10;;;;;;:::i;:::-;-1:-1:-1;1241:10787:10;;-1:-1:-1;;;4520:41:10;;1241:10787;;4520:41;;1241:10787;;;;;;;;;;;4520:41;;;1241:10787;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1241:10787:10;;;;;;;;;;;;-1:-1:-1;;;1241:10787:10;;;;;;;2336:287:3;1759:1;2468:7;1241:10787:10;2468:19:3;1759:1;;;2468:7;1241:10787:10;2336:287:3:o;1759:1::-;1241:10787:10;;-1:-1:-1;;;1759:1:3;;;;;;;;;;;1241:10787:10;1759:1:3;1241:10787:10;;;1759:1:3;;;;3199:103:0;735:10:7;-1:-1:-1;1241:10787:10;;;;;;;;;;;;3519:23:0;3515:108;;3199:103::o;3515:108::-;3565:47;;;-1:-1:-1;3565:47:0;735:10:7;3565:47:0;1241:10787:10;1348:23;1241:10787;;;-1:-1:-1;3565:47:0;3199:103;-1:-1:-1;1241:10787:10;;;2954:6:0;1241:10787:10;;;;;;;;735:10:7;1241:10787:10;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;-1:-1:-1;3565:47:0;735:10:7;3565:47:0;1241:10787:10;;;;-1:-1:-1;3565:47:0;5393:300:4;-1:-1:-1;;;;;1241:10787:10;;5476:18:4;;5472:86;;-1:-1:-1;;;;;1241:10787:10;;5571:16:4;;5567:86;;1241:10787:10;5492:1:4;1241:10787:10;5492:1:4;1241:10787:10;;;5492:1:4;1241:10787:10;;6340:19:4;;;6336:115;;1241:10787:10;7083:25:4;1241:10787:10;;;;5492:1:4;1241:10787:10;5492:1:4;1241:10787:10;;;;5492:1:4;1241:10787:10;;;5492:1:4;1241:10787:10;5492:1:4;1241:10787:10;;;5492:1:4;1241:10787:10;;;;;;;;;;;;7083:25:4;5393:300::o;6336:115::-;6386:50;;;;5492:1;6386:50;;1241:10787:10;;;;;;5492:1:4;6386:50;6179:316:0;1241:10787:10;;;;2954:6:0;1241:10787:10;;;;;;;;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;;;;;;;;2954:6:0;1241:10787:10;;;;;;;;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;;;735:10:7;;1241:10787:10;;6370:40:0;;1241:10787:10;6370:40:0;6347:4;6424:11;:::o;6272:217::-;6466:12;;1241:10787:10;6466:12:0;:::o;6730:317::-;1241:10787:10;;;;2954:6:0;1241:10787:10;;;;;;;;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;;;;;;;;;2954:6:0;1241:10787:10;;;;;;;;-1:-1:-1;;;;;1241:10787:10;;;;;;;;;;;;;;;-1:-1:-1;;1241:10787:10;;;735:10:7;;1241:10787:10;;6922:40:0;;1241:10787:10;6922:40:0;1241:10787:10;6976:11:0;:::o;9701:432:4:-;-1:-1:-1;;;;;1241:10787:10;;9813:19:4;;9809:89;;-1:-1:-1;;;;;1241:10787:10;;9911:21:4;;9907:90;;1241:10787:10;10085:31:4;1241:10787:10;;9830:1:4;1241:10787:10;3657:11:4;1241:10787:10;;;9830:1:4;1241:10787:10;;-1:-1:-1;1241:10787:10;;;;;-1:-1:-1;1241:10787:10;;;;;;;10085:31:4;9701:432::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1151000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "746",
								"addLiquidityETH(address,uint256,uint256,uint256,uint256)": "infinite",
								"allowance(address,address)": "3343",
								"approve(address,uint256)": "26695",
								"balanceOf(address)": "2867",
								"burn(uint256)": "54462",
								"cooldownEnabled()": "2928",
								"cooldownTime()": "2938",
								"daoAddress()": "infinite",
								"decimals()": "417",
								"decreaseAllowance(address,uint256)": "920",
								"getRoleAdmin(bytes32)": "2540",
								"grantRole(bytes32,address)": "33519",
								"hasRole(bytes32,address)": "3013",
								"increaseAllowance(address,uint256)": "612",
								"isBlacklisted(address)": "3251",
								"launchTimestamp()": "2696",
								"maxTxAmount()": "2762",
								"mint(address,uint256)": "54485",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "29127",
								"rescueETH(address,uint256)": "infinite",
								"rescueTokens(address,uint256,address)": "infinite",
								"revokeRole(bytes32,address)": "34022",
								"setBlacklist(address,bool)": "76885",
								"setCooldownConfig(bool,uint256)": "82088",
								"setMaxTxAmount(uint256)": "57779",
								"setSniperProtection(bool,uint256)": "82213",
								"setTradingEnabled(bool)": "80010",
								"snipeTime()": "2476",
								"sniperProtectionEnabled()": "2846",
								"supportsInterface(bytes4)": "270",
								"symbol()": "infinite",
								"totalSupply()": "2388",
								"tradingEnabled()": "2686",
								"transfer(address,uint256)": "51392",
								"transferFrom(address,address,uint256)": "75633",
								"uniswapV2Pair()": "2676",
								"uniswapV2Router()": "2390"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1241,
									"end": 12028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1241,
									"end": 12028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2BB0B6363C902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "545747"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "14"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "18"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1952,
									"end": 1954,
									"name": "PUSH",
									"source": 10,
									"value": "1E"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2073,
									"end": 2075,
									"name": "PUSH",
									"source": 10,
									"value": "E"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3075,
									"end": 3105,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3075,
									"end": 3105,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3139,
									"end": 3164,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3188,
									"end": 3213,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3188,
									"end": 3213,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3230,
									"end": 3240,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1572,
									"name": "PUSH",
									"source": 10,
									"value": "409F9CBC7C4A04C220000000"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3230,
									"end": 3240,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1572,
									"name": "PUSH",
									"source": 10,
									"value": "409F9CBC7C4A04C220000000"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1572,
									"name": "PUSH",
									"source": 10,
									"value": "409F9CBC7C4A04C220000000"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3230,
									"end": 3240,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 3188,
									"end": 3213,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1348,
									"end": 1371,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3269,
									"end": 3305,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 3269,
									"end": 3305,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3269,
									"end": 3305,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3269,
									"end": 3305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3269,
									"end": 3305,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 3269,
									"end": 3305,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1417,
									"end": 1441,
									"name": "PUSH",
									"source": 10,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3907,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 0,
									"value": "15A28D26FA1BF736CF7EDC9922607171CCB09C3C73B808E7772A3013E068A523"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1348,
									"end": 1371,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1348,
									"end": 1371,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CC6BFBB777B5BA8A5FA65E7400D0765A2FBD8CFCE940C84F5480427BF0C914D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "PUSH",
									"source": 10,
									"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3907,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 0,
									"value": "847F481F687BEFB06ED3511F1A8DCEF57E83007C0147AE5047583D7056170938"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1348,
									"end": 1371,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1348,
									"end": 1371,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CC6BFBB777B5BA8A5FA65E7400D0765A2FBD8CFCE940C84F5480427BF0C914D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 3490,
									"end": 3515,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C45A0155"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "GAS",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "STATICCALL",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "PUSH",
									"source": 10,
									"value": "15AB88C9"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "PUSH",
									"source": 10,
									"value": "E3"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "GAS",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "STATICCALL",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "64E329CB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3632,
									"end": 3636,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "GAS",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "CALL",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3647,
									"end": 3714,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "AND",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3725,
									"end": 3741,
									"name": "PUSH",
									"source": 10,
									"value": "F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3751,
									"end": 3774,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3826,
									"end": 3850,
									"name": "PUSH",
									"source": 10,
									"value": "D"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 3188,
									"end": 3213,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "1355"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "RETURN",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3664,
									"end": 3714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1241,
									"end": 12028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "RETURNDATACOPY",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3584,
									"end": 3597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3664,
									"end": 3714,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1241,
									"end": 12028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 3584,
									"end": 3597,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3543,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1241,
									"end": 12028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 3543,
									"end": 3559,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F05"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5A65726F2044414F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2D32B937903937BABA32B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP12",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "3D62345CA25DBCF5B90CD3CAF078BA6FBC74987B189717C4D0A39B417756BDB3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "3D62345CA25DBCF5B90CD3CAF078BA6FBC74987B189717C4D0A39B417756BDB3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1511,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1348,
									"end": 1371,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 12028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f3bdc56a83b87774368eb14d04af7beaf83758e6ea7217f4fe226e9d039491764736f6c634300081c0033",
									".code": [
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12009,
											"end": 12018,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12019,
											"name": "PUSH",
											"source": 10,
											"value": "A419615BC8FDA4C87663805EE2A3597A6D71C1D476911D9892F340D965BC7BF1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11997,
											"end": 12007,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12019,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "99A04E5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "153B0D1E"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1694505E"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "2131C68C"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "2618F214"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "39509351"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "42966C68"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "48FCA59D"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "49BD5A5E"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4ADA218B"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "65CF7C9B"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "89900603"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "8C0B5E22"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "963472F9"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A457C2D7"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A985CEEF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "B319C6B7"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "B37FD190"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "C2E5EC04"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "EC28438A"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "F6F1E306"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FE575A87"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8000,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8454,
											"end": 8463,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8464,
											"name": "PUSH",
											"source": 10,
											"value": "407E9458C121455467AD277A21812C883F5D67EE0020A7B7A3EA0007A6639183"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8423,
											"end": 8433,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8464,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8464,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 8542,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 8499,
											"end": 8503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8499,
											"end": 8503,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 8842,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "PUSH",
											"source": 10,
											"value": "C4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "F305D719"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8499,
											"end": 8503,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8454,
											"end": 8463,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "PUSH",
											"source": 10,
											"value": "64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8922,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8665,
											"end": 8853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 8665,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6415,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6424,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 6399,
											"end": 6511,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6511,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 6399,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6415,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6500,
											"name": "PUSH",
											"source": 10,
											"value": "D6A912222A539EFF01EB7E23CD954E57C4AE962622948839FEFBC46B0FFE914A"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6500,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6500,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6511,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 6399,
											"end": 6511,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5261,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5347,
											"name": "PUSH",
											"source": 10,
											"value": "6E552CEEE9488E9332DE4530EB91788E818D00E6CCFB1F2968CB4325924E0611"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5347,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5365,
											"end": 5400,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5361,
											"end": 5470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5361,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5361,
											"end": 5470,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 5231,
											"end": 5480,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5361,
											"end": 5470,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5361,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5454,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 5420,
											"end": 5454,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5361,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5361,
											"end": 5470,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5400,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5365,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 5365,
											"end": 5400,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 11443,
											"end": 11459,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11443,
											"end": 11459,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11443,
											"end": 11459,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11435,
											"end": 11473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 11435,
											"end": 11473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11435,
											"end": 11473,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 11435,
											"end": 11473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11539,
											"end": 11578,
											"name": "PUSH",
											"source": 10,
											"value": "FB475A842BAD10D3800B61BD1A92E716051AFBA979B124B583BD99A2D1D7BFD5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11539,
											"end": 11578,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 11483,
											"end": 11524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7787,
											"end": 7800,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7686,
											"end": 7702,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3459,
											"end": 3464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7884,
											"end": 7896,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5666,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5677,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5638,
											"end": 5738,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5751,
											"end": 5761,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5751,
											"end": 5776,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5747,
											"end": 5827,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5841,
											"end": 5882,
											"name": "PUSH",
											"source": 10,
											"value": "5D394A4E9BD564F1A587773E5DBD3099A9E7B2FB0ECB2DBE1808AD21E9DC943E"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5841,
											"end": 5882,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5827,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5747,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5751,
											"end": 5761,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 5747,
											"end": 5827,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5738,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5638,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF00"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5666,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5738,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 5638,
											"end": 5738,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7585,
											"end": 7601,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7273,
											"end": 7288,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7189,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6059,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6070,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 6039,
											"end": 6123,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6136,
											"end": 6149,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6136,
											"end": 6164,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6132,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6132,
											"end": 6218,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6232,
											"end": 6265,
											"name": "PUSH",
											"source": 10,
											"value": "7BC6854EA2DD87A130378B485FB91A0EB3056211EE9B85CB67FABEF030C07350"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6265,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6232,
											"end": 6265,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 6132,
											"end": 6218,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6132,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6136,
											"end": 6149,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6132,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 6132,
											"end": 6218,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6123,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 6039,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6059,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 6039,
											"end": 6123,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "847F481F687BEFB06ED3511F1A8DCEF57E83007C0147AE5047583D7056170937"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5080,
											"name": "PUSH",
											"source": 10,
											"value": "696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5080,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5080,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "391434E3"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E2"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "4B637E8F"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "E1"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "PUSH",
											"source": 10,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "15A28D26FA1BF736CF7EDC9922607171CCB09C3C73B808E7772A3013E068A522"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4925,
											"name": "PUSH",
											"source": 10,
											"value": "30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4925,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F05"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1441,
											"name": "PUSH",
											"source": 10,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "334BD919"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7487,
											"end": 7497,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4986,
											"end": 4991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4A1406B1"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "E1"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF05"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "7DC7A0D9"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "E1"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6965,
											"end": 6976,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7088,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6684,
											"end": 6693,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6713,
											"end": 6745,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6713,
											"end": 6745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6713,
											"end": 6745,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 6709,
											"end": 6860,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6860,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 6709,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 6849,
											"name": "PUSH",
											"source": 10,
											"value": "A534E7C418F24C958AF1E861A7AF8C6ECE8F5204EB8C33685AE7E16A1C2ADA42"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6849,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 6849,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6860,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6860,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6860,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 6709,
											"end": 6860,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11744,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11744,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 11744,
											"end": 11782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11744,
											"end": 11782,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 11744,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11797,
											"end": 11834,
											"name": "PUSH",
											"source": 10,
											"value": "FB475A842BAD10D3800B61BD1A92E716051AFBA979B124B583BD99A2D1D7BFD5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11797,
											"end": 11834,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 11864,
											"end": 11890,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 11864,
											"end": 11890,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155120819985A5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4102,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4207,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4207,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4222,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4195,
											"end": 4222,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4191,
											"end": 4272,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4092,
											"end": 4102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4102,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 8842,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4272,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4191,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4245,
											"end": 4261,
											"name": "PUSH",
											"source": 10,
											"value": "2279CC21"
										},
										{
											"begin": 4245,
											"end": 4261,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4245,
											"end": 4261,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4261,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4222,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4195,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4222,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4222,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4222,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4195,
											"end": 4222,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4520,
											"end": 4561,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4520,
											"end": 4561,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4520,
											"end": 4561,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4520,
											"end": 4561,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "55736520617070726F7665282920746F2073657420746F203020666972737400"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4520,
											"end": 4561,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4520,
											"end": 4561,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4520,
											"end": 4561,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A65726F2027746F27"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "D8EF4509105C3EDB0B04658B4528EDC5DDD30EA5A81E623A2623C88DB1EB54B6"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1348,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "391434E3"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E2"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 12028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								},
								"0CC6BFBB777B5BA8A5FA65E7400D0765A2FBD8CFCE940C84F5480427BF0C914D": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
								"3D62345CA25DBCF5B90CD3CAF078BA6FBC74987B189717C4D0A39B417756BDB3": "d8ef4509105c3edb0b04658b4528edc5ddd30ea5a81e623a2623c88db1eb54b6",
								"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"addLiquidityETH(address,uint256,uint256,uint256,uint256)": "f6f1e306",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"cooldownEnabled()": "a985ceef",
							"cooldownTime()": "b319c6b7",
							"daoAddress()": "2131c68c",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"increaseAllowance(address,uint256)": "39509351",
							"isBlacklisted(address)": "fe575a87",
							"launchTimestamp()": "65cf7c9b",
							"maxTxAmount()": "8c0b5e22",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"rescueETH(address,uint256)": "099a04e5",
							"rescueTokens(address,uint256,address)": "b37fd190",
							"revokeRole(bytes32,address)": "d547741f",
							"setBlacklist(address,bool)": "153b0d1e",
							"setCooldownConfig(bool,uint256)": "48fca59d",
							"setMaxTxAmount(uint256)": "ec28438a",
							"setSniperProtection(bool,uint256)": "89900603",
							"setTradingEnabled(bool)": "c2e5ec04",
							"snipeTime()": "2618f214",
							"sniperProtectionEnabled()": "963472f9",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"tradingEnabled()": "4ada218b",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"uniswapV2Pair()": "49bd5a5e",
							"uniswapV2Router()": "1694505e"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 603,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 609,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 611,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 613,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 615,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 526,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1358,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_uniswapV2Router",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IUniswapV2Router02)1326"
							},
							{
								"astId": 1360,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_uniswapV2Pair",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1370,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_userData",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(UserData)1365_storage)"
							},
							{
								"astId": 1372,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_tradingEnabled",
								"offset": 0,
								"slot": "10",
								"type": "t_bool"
							},
							{
								"astId": 1374,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_sniperProtectionEnabled",
								"offset": 1,
								"slot": "10",
								"type": "t_bool"
							},
							{
								"astId": 1377,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_snipeTime",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1379,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_launchTimestamp",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1381,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_cooldownEnabled",
								"offset": 0,
								"slot": "13",
								"type": "t_bool"
							},
							{
								"astId": 1384,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_cooldownTime",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1386,
								"contract": "contracts/WallyToken.sol:WallyToken",
								"label": "_maxTxAmount",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IUniswapV2Router02)1326": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(UserData)1365_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct WallyToken.UserData)",
								"numberOfBytes": "32",
								"value": "t_struct(UserData)1365_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/WallyToken.sol:WallyToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/WallyToken.sol:WallyToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserData)1365_storage": {
								"encoding": "inplace",
								"label": "struct WallyToken.UserData",
								"members": [
									{
										"astId": 1362,
										"contract": "contracts/WallyToken.sol:WallyToken",
										"label": "blacklisted",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1364,
										"contract": "contracts/WallyToken.sol:WallyToken",
										"label": "lastTx",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1229
						],
						"ERC165": [
							1253
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1230,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1229,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1254,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1253,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1229,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1253,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1253,
								1265,
								378,
								1229
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1252
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1252,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1211,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1211,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							580
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 580,
							"linearizedBaseContracts": [
								580
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 521,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 519,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 520,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 524,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 522,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 523,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 525,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 529,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 530,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 534,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 580,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 540,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 541,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 545,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 550,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 555,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 556,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 580,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 580,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 575,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 573,
												"id": 577,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 580,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 581,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1229
						],
						"ERC20": [
							1095
						],
						"IERC20": [
							1173
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1199
						]
					},
					"id": 1096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1174,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 583,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1200,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 585,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1199,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1230,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 587,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1229,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 516,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 589,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 592,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1229,
										"src": "1133:7:4"
									},
									"id": 593,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 594,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "1142:6:4"
									},
									"id": 595,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 596,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1199,
										"src": "1150:14:4"
									},
									"id": 597,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 598,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:4"
									},
									"id": 599,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 591,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1095,
							"linearizedBaseContracts": [
								1095,
								420,
								1199,
								1173,
								1229
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 603,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 602,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 600,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 601,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 609,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 608,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 604,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 607,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 605,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 606,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 611,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 610,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 613,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 612,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 615,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 614,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 623,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 624,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 627,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 628,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 632,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 619,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 1095,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1186
									],
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 638,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 613,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 637,
												"id": 639,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 1095,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1192
									],
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 647,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 615,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 646,
												"id": 648,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 1095,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1198
									],
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 655,
												"id": 657,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 653,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 1095,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1122
									],
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 665,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 611,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 664,
												"id": 666,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 1095,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1130
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 676,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 678,
													"indexExpression": {
														"id": 677,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 675,
												"id": 679,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 1095,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1140
									],
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													692
												],
												"declarations": [
													{
														"constant": false,
														"id": 692,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 691,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 693,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 690,
												"id": 703,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 1095,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1150
									],
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 715,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 716,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 719,
													"indexExpression": {
														"id": 718,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 720,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 1095,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1160
									],
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 732,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 734,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															986,
															1046
														],
														"referencedDeclaration": 986,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 731,
												"id": 744,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 1095,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1172
									],
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 758,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 760,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 764,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 763,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 769,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 757,
												"id": 776,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 1095,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 795,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 794,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 800,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 804,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 817,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 816,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 810,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 809,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 815,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 1095,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 835,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 836,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																847
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 847,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 872,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 846,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 851,
															"initialValue": {
																"baseExpression": {
																	"id": 848,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 850,
																"indexExpression": {
																	"id": 849,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 852,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 853,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 862,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 861,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 856,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 828,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 857,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 858,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 832,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 855,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 860,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 871,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 863,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 865,
																			"indexExpression": {
																				"id": 864,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 866,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 867,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 870,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 841,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 842,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 874,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 875,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 893,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 892,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 886,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 888,
																			"indexExpression": {
																				"id": 887,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 889,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 891,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 894,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 884,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 880,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 881,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 883,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 896,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 895,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 1095,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 911,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 917,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 916,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 922,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 926,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 1095,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 944,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 957,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 956,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 950,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 949,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 955,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 960,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 958,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 1095,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 978,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															986,
															1046
														],
														"referencedDeclaration": 1046,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 1095,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 999,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1005,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1004,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1013,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1014,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1020,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1019,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1025,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1028,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1031,
															"indexExpression": {
																"id": 1029,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1032,
														"indexExpression": {
															"id": 1030,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1033,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 1036,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 995,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1044,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 1043,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1038,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1039,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1040,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1037,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1042,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 994,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 1095,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "10504:387:4",
										"statements": [
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1093,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1056,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"arguments": [
														{
															"id": 1059,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1058,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1063,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1065,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1064,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "10576:309:4",
												"trueBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "10618:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1070,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "10636:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1071,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "10655:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1080,
															"nodeType": "IfStatement",
															"src": "10632:130:4",
															"trueBody": {
																"id": 1079,
																"nodeType": "Block",
																"src": "10662:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1074,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1051,
																					"src": "10714:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1075,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "10723:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1076,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1053,
																					"src": "10741:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1073,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10687:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1078,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:4"
																	}
																]
															}
														},
														{
															"id": 1090,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1082,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "10812:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1083,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "10819:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1084,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "10828:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1085,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1053,
																					"src": "10847:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1081,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				986,
																				1046
																			],
																			"referencedDeclaration": 1046,
																			"src": "10803:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1089,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 1095,
									"src": "10415:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1096,
							"src": "1106:9787:4",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "105:10789:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1173
						]
					},
					"id": 1174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1098,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1173,
							"linearizedBaseContracts": [
								1173
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1107,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1116,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1173,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1173,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1173,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1173,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1173,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1173,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1174,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1173
						],
						"IERC20Metadata": [
							1199
						]
					},
					"id": 1200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1200,
							"sourceUnit": 1174,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1176,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1179,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "306:6:6"
									},
									"id": 1180,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1199,
							"linearizedBaseContracts": [
								1199,
								1173
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1199,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1199,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1195,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1199,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1200,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1229
						]
					},
					"id": 1230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1202,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1229,
							"linearizedBaseContracts": [
								1229
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1209,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1229,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1216,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1215,
												"id": 1218,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1229,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1224,
												"id": 1226,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1229,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1230,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1253
						],
						"IERC165": [
							1265
						]
					},
					"id": 1254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 1266,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1265,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1235,
										"name": "IERC165",
										"nameLocations": [
											"688:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1265,
										"src": "688:7:8"
									},
									"id": 1236,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1234,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1253,
							"linearizedBaseContracts": [
								1253,
								1265
							],
							"name": "ERC165",
							"nameLocation": "678:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1264
									],
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "845:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1244,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "862:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1246,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "882:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1265_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1265_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1245,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1265",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1250,
												"nodeType": "Return",
												"src": "855:47:8"
											}
										]
									},
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "790:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:8"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "839:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:8"
									},
									"scope": 1253,
									"src": "763:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1254,
							"src": "660:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1265
						]
					},
					"id": 1266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1256,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1265,
							"linearizedBaseContracts": [
								1265
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 1265,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1266,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"contracts/WallyToken.sol": {
				"ast": {
					"absolutePath": "contracts/WallyToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"ApproveNonZero": [
							1284
						],
						"BlacklistedRecipient": [
							1276
						],
						"BlacklistedSender": [
							1274
						],
						"Context": [
							1229
						],
						"ERC165": [
							1253
						],
						"ERC20": [
							1095
						],
						"ExceedsMaxTx": [
							1278
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1173
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1199
						],
						"IUniswapV2Factory": [
							1294
						],
						"IUniswapV2Router02": [
							1326
						],
						"MustWaitCooldown": [
							1282
						],
						"ReentrancyGuard": [
							580
						],
						"SniperBuyBlocked": [
							1280
						],
						"TradingDisabled": [
							1272
						],
						"WallyToken": [
							2323
						]
					},
					"id": 2324,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1267,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2324,
							"sourceUnit": 1096,
							"src": "57:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2324,
							"sourceUnit": 296,
							"src": "113:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2324,
							"sourceUnit": 581,
							"src": "172:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "bcb8b8fb",
							"id": 1272,
							"name": "TradingDisabled",
							"nameLocation": "375:15:10",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1271,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "390:2:10"
							},
							"src": "369:24:10"
						},
						{
							"errorSelector": "fbed3a6a",
							"id": 1274,
							"name": "BlacklistedSender",
							"nameLocation": "400:17:10",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1273,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "417:2:10"
							},
							"src": "394:26:10"
						},
						{
							"errorSelector": "ecb830c5",
							"id": 1276,
							"name": "BlacklistedRecipient",
							"nameLocation": "427:20:10",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1275,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "447:2:10"
							},
							"src": "421:29:10"
						},
						{
							"errorSelector": "2b70fd55",
							"id": 1278,
							"name": "ExceedsMaxTx",
							"nameLocation": "457:12:10",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1277,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "469:2:10"
							},
							"src": "451:21:10"
						},
						{
							"errorSelector": "7b77f22c",
							"id": 1280,
							"name": "SniperBuyBlocked",
							"nameLocation": "479:16:10",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1279,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "495:2:10"
							},
							"src": "473:25:10"
						},
						{
							"errorSelector": "1778f7c8",
							"id": 1282,
							"name": "MustWaitCooldown",
							"nameLocation": "505:16:10",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1281,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "521:2:10"
							},
							"src": "499:25:10"
						},
						{
							"errorSelector": "2279cc21",
							"id": 1284,
							"name": "ApproveNonZero",
							"nameLocation": "531:14:10",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1283,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "545:2:10"
							},
							"src": "525:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1294,
							"linearizedBaseContracts": [
								1294
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "560:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "593:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "612:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "604:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "628:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "620:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:32:10"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "662:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "654:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:14:10"
									},
									"scope": 1294,
									"src": "584:84:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2324,
							"src": "550:120:10",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1326,
							"linearizedBaseContracts": [
								1326
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "681:18:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "715:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "722:2:10"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "748:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:9:10"
									},
									"scope": 1326,
									"src": "706:51:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "771:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "801:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:9:10"
									},
									"scope": 1326,
									"src": "762:48:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "825:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "858:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "850:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "878:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "873:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "873:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "911:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "906:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "906:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "940:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "935:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "935:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "970:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "962:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "987:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "982:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "982:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:161:10"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1057:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "1052:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1052:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1075:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "1070:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1070:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1091:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "1086:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1086:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:50:10"
									},
									"scope": 1326,
									"src": "816:286:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2324,
							"src": "671:433:10",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1328,
										"name": "ERC20",
										"nameLocations": [
											"1264:5:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1095,
										"src": "1264:5:10"
									},
									"id": 1329,
									"nodeType": "InheritanceSpecifier",
									"src": "1264:5:10"
								},
								{
									"baseName": {
										"id": 1330,
										"name": "AccessControl",
										"nameLocations": [
											"1271:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "1271:13:10"
									},
									"id": 1331,
									"nodeType": "InheritanceSpecifier",
									"src": "1271:13:10"
								},
								{
									"baseName": {
										"id": 1332,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1286:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 580,
										"src": "1286:15:10"
									},
									"id": 1333,
									"nodeType": "InheritanceSpecifier",
									"src": "1286:15:10"
								}
							],
							"canonicalName": "WallyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1327,
								"nodeType": "StructuredDocumentation",
								"src": "1106:134:10",
								"text": " @title WallyToken\n @dev Zero-tax ERC20. Uses AccessControl for admin. Anti-sniping logic, front-running approve fix, etc."
							},
							"fullyImplemented": true,
							"id": 2323,
							"linearizedBaseContracts": [
								2323,
								580,
								295,
								1253,
								1265,
								378,
								1095,
								420,
								1199,
								1173,
								1229
							],
							"name": "WallyToken",
							"nameLocation": "1250:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1338,
									"mutability": "constant",
									"name": "_ADMIN_ROLE",
									"nameLocation": "1333:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1308:63:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1334,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1308:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1336,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1358:12:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1335,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1348:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1348:23:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1343,
									"mutability": "constant",
									"name": "_MINTER_ROLE",
									"nameLocation": "1402:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1377:64:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1339,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1377:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1341,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1427:13:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1340,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1417:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1417:24:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1348,
									"mutability": "constant",
									"name": "_BURNER_ROLE",
									"nameLocation": "1472:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1447:64:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1344,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1447:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1346,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1497:13:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1345,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1487:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1347,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1487:24:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1353,
									"mutability": "constant",
									"name": "_INITIAL_SUPPLY",
									"nameLocation": "1543:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1518:54:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1349,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1518:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_20000000000000000000000000000_by_1",
											"typeString": "int_const 20000000000000000000000000000"
										},
										"id": 1352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32306539",
											"id": 1350,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1561:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_20000000000_by_1",
												"typeString": "int_const 20000000000"
											},
											"value": "20e9"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 1351,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1568:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "1561:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20000000000000000000000000000_by_1",
											"typeString": "int_const 20000000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1355,
									"mutability": "immutable",
									"name": "_daoAddress",
									"nameLocation": "1606:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1580:37:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1354,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1580:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1358,
									"mutability": "mutable",
									"name": "_uniswapV2Router",
									"nameLocation": "1651:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1624:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1357,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1356,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"1624:18:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1326,
											"src": "1624:18:10"
										},
										"referencedDeclaration": 1326,
										"src": "1624:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1360,
									"mutability": "mutable",
									"name": "_uniswapV2Pair",
									"nameLocation": "1689:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1673:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1359,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1673:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "WallyToken.UserData",
									"id": 1365,
									"members": [
										{
											"constant": false,
											"id": 1362,
											"mutability": "mutable",
											"name": "blacklisted",
											"nameLocation": "1741:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 1365,
											"src": "1736:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1361,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1736:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1364,
											"mutability": "mutable",
											"name": "lastTx",
											"nameLocation": "1770:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1365,
											"src": "1762:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1363,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1762:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserData",
									"nameLocation": "1717:8:10",
									"nodeType": "StructDefinition",
									"scope": 2323,
									"src": "1710:73:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1370,
									"mutability": "mutable",
									"name": "_userData",
									"nameLocation": "1830:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1788:51:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$1365_storage_$",
										"typeString": "mapping(address => struct WallyToken.UserData)"
									},
									"typeName": {
										"id": 1369,
										"keyName": "user",
										"keyNameLocation": "1804:4:10",
										"keyType": {
											"id": 1366,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1796:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1788:33:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$1365_storage_$",
											"typeString": "mapping(address => struct WallyToken.UserData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1368,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1367,
												"name": "UserData",
												"nameLocations": [
													"1812:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1365,
												"src": "1812:8:10"
											},
											"referencedDeclaration": 1365,
											"src": "1812:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
												"typeString": "struct WallyToken.UserData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1372,
									"mutability": "mutable",
									"name": "_tradingEnabled",
									"nameLocation": "1859:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1846:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1371,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1846:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1374,
									"mutability": "mutable",
									"name": "_sniperProtectionEnabled",
									"nameLocation": "1893:24:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1880:37:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1373,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1880:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1377,
									"mutability": "mutable",
									"name": "_snipeTime",
									"nameLocation": "1939:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1923:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1375,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1923:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1952:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1379,
									"mutability": "mutable",
									"name": "_launchTimestamp",
									"nameLocation": "1983:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "1967:32:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1967:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1381,
									"mutability": "mutable",
									"name": "_cooldownEnabled",
									"nameLocation": "2019:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "2006:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1380,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2006:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1384,
									"mutability": "mutable",
									"name": "_cooldownTime",
									"nameLocation": "2057:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "2041:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2041:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2073:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1386,
									"mutability": "mutable",
									"name": "_maxTxAmount",
									"nameLocation": "2102:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2323,
									"src": "2086:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2086:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "6e552ceee9488e9332de4530eb91788e818d00e6ccfb1f2968cb4325924e0611",
									"id": 1390,
									"name": "TradingEnabledSet",
									"nameLocation": "2128:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"indexed": true,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "2159:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "2146:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2146:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2145:22:10"
									},
									"src": "2122:46:10"
								},
								{
									"anonymous": false,
									"eventSelector": "5d394a4e9bd564f1a587773e5dbd3099a9e7b2fb0ecb2dbe1808ad21e9dc943e",
									"id": 1396,
									"name": "SniperProtectionSet",
									"nameLocation": "2179:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"indexed": true,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "2212:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "2199:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2199:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"indexed": true,
												"mutability": "mutable",
												"name": "timeSeconds",
												"nameLocation": "2237:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "2221:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2198:51:10"
									},
									"src": "2173:77:10"
								},
								{
									"anonymous": false,
									"eventSelector": "7bc6854ea2dd87a130378b485fb91a0eb3056211ee9b85cb67fabef030c07350",
									"id": 1402,
									"name": "CooldownSet",
									"nameLocation": "2261:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"indexed": true,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "2286:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "2273:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2273:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"indexed": true,
												"mutability": "mutable",
												"name": "timeSeconds",
												"nameLocation": "2311:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "2295:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2272:51:10"
									},
									"src": "2255:69:10"
								},
								{
									"anonymous": false,
									"eventSelector": "d6a912222a539eff01eb7e23cd954e57c4ae962622948839fefbc46b0ffe914a",
									"id": 1406,
									"name": "MaxTxAmountSet",
									"nameLocation": "2335:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"indexed": true,
												"mutability": "mutable",
												"name": "newMaxTx",
												"nameLocation": "2366:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2350:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:26:10"
									},
									"src": "2329:47:10"
								},
								{
									"anonymous": false,
									"eventSelector": "a534e7c418f24c958af1e861a7af8c6ece8f5204eb8c33685ae7e16a1c2ada42",
									"id": 1412,
									"name": "UserBlacklistedSet",
									"nameLocation": "2387:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2422:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "2406:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"indexed": true,
												"mutability": "mutable",
												"name": "isBlacklisted",
												"nameLocation": "2441:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "2428:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2428:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2405:50:10"
									},
									"src": "2381:75:10"
								},
								{
									"anonymous": false,
									"eventSelector": "fb475a842bad10d3800b61bd1a92e716051afba979b124b583bd99a2d1d7bfd5",
									"id": 1420,
									"name": "TokensRescued",
									"nameLocation": "2467:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2497:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "2481:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2512:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "2504:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2536:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "2520:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:59:10"
									},
									"src": "2461:79:10"
								},
								{
									"anonymous": false,
									"eventSelector": "407e9458c121455467ad277a21812c883f5d67ee0020a7b7a3ea0007a6639183",
									"id": 1430,
									"name": "LiquidityAddRequested",
									"nameLocation": "2551:21:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "2589:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "2573:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2612:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "2596:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2596:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmountIn",
												"nameLocation": "2624:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "2616:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "2647:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "2639:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2639:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:85:10"
									},
									"src": "2545:113:10"
								},
								{
									"anonymous": false,
									"eventSelector": "64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e",
									"id": 1440,
									"name": "LiquidityAdded",
									"nameLocation": "2669:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2700:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "2684:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2712:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "2704:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "2733:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "2725:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2752:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "2744:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2683:79:10"
									},
									"src": "2663:100:10"
								},
								{
									"anonymous": false,
									"eventSelector": "30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe",
									"id": 1446,
									"name": "Minted",
									"nameLocation": "2774:6:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2797:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "2781:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2809:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "2801:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:36:10"
									},
									"src": "2768:49:10"
								},
								{
									"anonymous": false,
									"eventSelector": "696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7",
									"id": 1452,
									"name": "Burned",
									"nameLocation": "2828:6:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2851:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2835:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2865:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2857:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2857:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:38:10"
									},
									"src": "2822:51:10"
								},
								{
									"anonymous": false,
									"eventSelector": "a419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf1",
									"id": 1458,
									"name": "ReceivedEther",
									"nameLocation": "2884:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2914:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "2898:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2928:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "2920:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2920:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:38:10"
									},
									"src": "2878:58:10"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "3057:800:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1470,
																"name": "uniswapV2Router_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1460,
																"src": "3075:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3103:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3095:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1471,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3095:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3095:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3075:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20726f75746572",
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3107:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b98aab6bca3c036b46bc5f4fcb569826cb1f46f8a243807f055cddad0fe6752",
																"typeString": "literal_string \"Zero router\""
															},
															"value": "Zero router"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b98aab6bca3c036b46bc5f4fcb569826cb1f46f8a243807f055cddad0fe6752",
																"typeString": "literal_string \"Zero router\""
															}
														],
														"id": 1469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3067:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3067:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "3067:54:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1480,
																"name": "daoAddress_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "3139:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3162:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3154:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1481,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3154:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3139:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f2044414f",
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3166:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eaf73236337a56077cb8bdba5c07244938966857a7a6127fdc2af132700ad256",
																"typeString": "literal_string \"Zero DAO\""
															},
															"value": "Zero DAO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eaf73236337a56077cb8bdba5c07244938966857a7a6127fdc2af132700ad256",
																"typeString": "literal_string \"Zero DAO\""
															}
														],
														"id": 1479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3131:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3131:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "3131:46:10"
											},
											{
												"expression": {
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1489,
														"name": "_daoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "3188:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1490,
														"name": "daoAddress_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "3202:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3188:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "3188:25:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1494,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3230:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3234:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3230:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1496,
															"name": "_INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "3242:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1493,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "3224:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3224:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "3224:34:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1500,
															"name": "_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "3280:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1501,
															"name": "_daoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "3293:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1499,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3269:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3269:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1503,
												"nodeType": "ExpressionStatement",
												"src": "3269:36:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1505,
															"name": "_MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "3329:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1506,
															"name": "_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "3343:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1504,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "3315:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3315:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "3315:40:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1510,
															"name": "_BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "3379:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1511,
															"name": "_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "3393:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1509,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "3365:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3365:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "3365:40:10"
											},
											{
												"assignments": [
													1516
												],
												"declarations": [
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "router",
														"nameLocation": "3435:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "3416:25:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
															"typeString": "contract IUniswapV2Router02"
														},
														"typeName": {
															"id": 1515,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1514,
																"name": "IUniswapV2Router02",
																"nameLocations": [
																	"3416:18:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1326,
																"src": "3416:18:10"
															},
															"referencedDeclaration": 1326,
															"src": "3416:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1520,
												"initialValue": {
													"arguments": [
														{
															"id": 1518,
															"name": "uniswapV2Router_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "3463:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1517,
														"name": "IUniswapV2Router02",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "3444:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1326_$",
															"typeString": "type(contract IUniswapV2Router02)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3444:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3416:64:10"
											},
											{
												"expression": {
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1521,
														"name": "_uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "3490:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1522,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "3509:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "3490:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "3490:25:10"
											},
											{
												"assignments": [
													1526
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"mutability": "mutable",
														"name": "factory",
														"nameLocation": "3533:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "3525:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1525,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3525:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1527,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "3543:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3550:7:10",
														"memberName": "factory",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1299,
														"src": "3543:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
															"typeString": "function () pure external returns (address)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3543:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3525:34:10"
											},
											{
												"assignments": [
													1532
												],
												"declarations": [
													{
														"constant": false,
														"id": 1532,
														"mutability": "mutable",
														"name": "weth",
														"nameLocation": "3577:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "3569:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1531,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3569:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1536,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1533,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "3584:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3591:4:10",
														"memberName": "WETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1304,
														"src": "3584:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
															"typeString": "function () pure external returns (address)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3584:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3569:28:10"
											},
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "self_",
														"nameLocation": "3616:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "3608:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1537,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3608:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1543,
												"initialValue": {
													"arguments": [
														{
															"id": 1541,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "3632:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_WallyToken_$2323",
																"typeString": "contract WallyToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_WallyToken_$2323",
																"typeString": "contract WallyToken"
															}
														],
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3624:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1539,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3624:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3624:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3608:29:10"
											},
											{
												"expression": {
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1544,
														"name": "_uniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "3647:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1549,
																"name": "self_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "3702:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1550,
																"name": "weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "3709:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1546,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "3682:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1545,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "3664:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1294_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3664:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$1294",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3691:10:10",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1293,
															"src": "3664:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3664:50:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3647:67:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "3647:67:10"
											},
											{
												"expression": {
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1554,
														"name": "_maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "3725:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3740:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3725:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "3725:16:10"
											},
											{
												"expression": {
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1558,
														"name": "_tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "3751:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3769:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3751:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "3751:23:10"
											},
											{
												"expression": {
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1562,
														"name": "_sniperProtectionEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "3784:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3811:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3784:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "3784:32:10"
											},
											{
												"expression": {
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1566,
														"name": "_cooldownEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "3826:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3845:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3826:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "3826:24:10"
											}
										]
									},
									"id": 1571,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "57616c6c7920546f6b656e",
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3031:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_25a3b5375a93e1e2d0517fce195e398e821d4cfd337e215c13a81e93744bc054",
														"typeString": "literal_string \"Wally Token\""
													},
													"value": "Wally Token"
												},
												{
													"hexValue": "545747",
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3046:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_49a2d7f7bfa71920fb9c558db4d991968448efb326b833b9774ba1a076e05946",
														"typeString": "literal_string \"TWG\""
													},
													"value": "TWG"
												}
											],
											"id": 1467,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1464,
												"name": "ERC20",
												"nameLocations": [
													"3025:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1095,
												"src": "3025:5:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3025:27:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "uniswapV2Router_",
												"nameLocation": "2962:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "2954:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2954:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "daoAddress_",
												"nameLocation": "2988:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "2980:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2980:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2953:47:10"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3057:0:10"
									},
									"scope": 2323,
									"src": "2942:915:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										746
									],
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "4054:271:10",
										"statements": [
											{
												"assignments": [
													1583
												],
												"declarations": [
													{
														"constant": false,
														"id": 1583,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "4072:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "4064:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4064:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1589,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1585,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4092:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4096:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4092:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1587,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "4104:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1584,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "4082:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4082:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4064:48:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1590,
															"name": "current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "4195:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4206:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4195:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1593,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "4211:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4221:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4211:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4195:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1601,
												"nodeType": "IfStatement",
												"src": "4191:81:10",
												"trueBody": {
													"id": 1600,
													"nodeType": "Block",
													"src": "4224:48:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1597,
																	"name": "ApproveNonZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "4245:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4245:16:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1599,
															"nodeType": "RevertStatement",
															"src": "4238:23:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1604,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "4302:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1605,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "4311:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1602,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4288:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_WallyToken_$2323_$",
																"typeString": "type(contract super WallyToken)"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4294:7:10",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 746,
														"src": "4288:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4288:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1607,
												"nodeType": "Return",
												"src": "4281:37:10"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "3863:61:10",
										"text": " @dev Approve fix for front-running (H001)."
									},
									"functionSelector": "095ea7b3",
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3938:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1578,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4018:8:10"
									},
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3954:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "3946:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3971:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "3963:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:33:10"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "4044:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4044:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4043:6:10"
									},
									"scope": 2323,
									"src": "3929:396:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "4510:58:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "55736520617070726f7665282920746f2073657420746f2030206669727374",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4527:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8a60c8d887b411811a6e91e6b26a50f7c8610fe3f8952785ff3e6a3b37c3e17",
																"typeString": "literal_string \"Use approve() to set to 0 first\""
															},
															"value": "Use approve() to set to 0 first"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_e8a60c8d887b411811a6e91e6b26a50f7c8610fe3f8952785ff3e6a3b37c3e17",
																"typeString": "literal_string \"Use approve() to set to 0 first\""
															}
														],
														"id": 1618,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "4520:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "4520:41:10"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4389:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "4407:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4407:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "4428:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4428:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4406:45:10"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "4500:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4500:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:6:10"
									},
									"scope": 2323,
									"src": "4380:188:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "4708:58:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "55736520617070726f7665282920746f2073657420746f2030206669727374",
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4725:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8a60c8d887b411811a6e91e6b26a50f7c8610fe3f8952785ff3e6a3b37c3e17",
																"typeString": "literal_string \"Use approve() to set to 0 first\""
															},
															"value": "Use approve() to set to 0 first"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_e8a60c8d887b411811a6e91e6b26a50f7c8610fe3f8952785ff3e6a3b37c3e17",
																"typeString": "literal_string \"Use approve() to set to 0 first\""
															}
														],
														"id": 1632,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "4718:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4718:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "4718:41:10"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "4582:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "4600:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4600:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "4621:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4621:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4599:50:10"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "4698:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4698:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4697:6:10"
									},
									"scope": 2323,
									"src": "4573:193:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "4865:67:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "4881:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1649,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "4885:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1647,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "4875:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4875:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "4875:17:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1653,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "4914:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1654,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "4918:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1652,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "4907:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4907:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1656,
												"nodeType": "EmitStatement",
												"src": "4902:23:10"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1644,
													"name": "_MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1343,
													"src": "4851:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1645,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1643,
												"name": "onlyRole",
												"nameLocations": [
													"4842:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4842:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4842:22:10"
										}
									],
									"name": "mint",
									"nameLocation": "4800:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4813:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "4805:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4825:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "4817:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4804:28:10"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4865:0:10"
									},
									"scope": 2323,
									"src": "4791:141:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "5000:87:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1667,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "5016:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5016:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1669,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "5030:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1666,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "5010:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5010:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "5010:27:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1673,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "5059:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5059:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "5073:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1672,
														"name": "Burned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "5052:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5052:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1677,
												"nodeType": "EmitStatement",
												"src": "5047:33:10"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1663,
													"name": "_BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1348,
													"src": "4986:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1664,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1662,
												"name": "onlyRole",
												"nameLocations": [
													"4977:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4977:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4977:22:10"
										}
									],
									"name": "burn",
									"nameLocation": "4947:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4960:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "4952:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4952:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4951:16:10"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5000:0:10"
									},
									"scope": 2323,
									"src": "4938:149:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "5221:265:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1689,
														"name": "_tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "5235:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1690,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "5254:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5235:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1711,
												"nodeType": "IfStatement",
												"src": "5231:249:10",
												"trueBody": {
													"id": 1710,
													"nodeType": "Block",
													"src": "5263:217:10",
													"statements": [
														{
															"expression": {
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1692,
																	"name": "_tradingEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1372,
																	"src": "5277:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1693,
																	"name": "enabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1681,
																	"src": "5295:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5277:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1695,
															"nodeType": "ExpressionStatement",
															"src": "5277:25:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1697,
																		"name": "enabled",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "5339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1696,
																	"name": "TradingEnabledSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "5321:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
																		"typeString": "function (bool)"
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5321:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1699,
															"nodeType": "EmitStatement",
															"src": "5316:31:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1700,
																	"name": "enabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1681,
																	"src": "5365:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1701,
																	"name": "_sniperProtectionEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "5376:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5365:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1709,
															"nodeType": "IfStatement",
															"src": "5361:109:10",
															"trueBody": {
																"id": 1708,
																"nodeType": "Block",
																"src": "5402:68:10",
																"statements": [
																	{
																		"expression": {
																			"id": 1706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1703,
																				"name": "_launchTimestamp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1379,
																				"src": "5420:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1704,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "5439:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1705,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5445:9:10",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "5439:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5420:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1707,
																		"nodeType": "ExpressionStatement",
																		"src": "5420:34:10"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "c2e5ec04",
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1684,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1683,
												"name": "nonReentrant",
												"nameLocations": [
													"5174:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "5174:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5174:12:10"
										},
										{
											"arguments": [
												{
													"id": 1686,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "5204:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1687,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1685,
												"name": "onlyRole",
												"nameLocations": [
													"5195:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5195:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5195:21:10"
										}
									],
									"name": "setTradingEnabled",
									"nameLocation": "5117:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "5140:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "5135:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5135:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5134:14:10"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5221:0:10"
									},
									"scope": 2323,
									"src": "5108:378:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "5628:261:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1725,
														"name": "_sniperProtectionEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "5642:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1726,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "5670:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5642:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1733,
												"nodeType": "IfStatement",
												"src": "5638:100:10",
												"trueBody": {
													"id": 1732,
													"nodeType": "Block",
													"src": "5679:59:10",
													"statements": [
														{
															"expression": {
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1728,
																	"name": "_sniperProtectionEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "5693:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1729,
																	"name": "enabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "5720:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5693:34:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1731,
															"nodeType": "ExpressionStatement",
															"src": "5693:34:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1734,
														"name": "_snipeTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "5751:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1735,
														"name": "timeSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "5765:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5751:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1742,
												"nodeType": "IfStatement",
												"src": "5747:80:10",
												"trueBody": {
													"id": 1741,
													"nodeType": "Block",
													"src": "5778:49:10",
													"statements": [
														{
															"expression": {
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1737,
																	"name": "_snipeTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "5792:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1738,
																	"name": "timeSeconds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "5805:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5792:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1740,
															"nodeType": "ExpressionStatement",
															"src": "5792:24:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1744,
															"name": "enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "5861:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1745,
															"name": "timeSeconds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "5870:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1743,
														"name": "SniperProtectionSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "5841:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256)"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5841:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "EmitStatement",
												"src": "5836:46:10"
											}
										]
									},
									"functionSelector": "89900603",
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1720,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1719,
												"name": "nonReentrant",
												"nameLocations": [
													"5581:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "5581:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5581:12:10"
										},
										{
											"arguments": [
												{
													"id": 1722,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "5611:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1723,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1721,
												"name": "onlyRole",
												"nameLocations": [
													"5602:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5602:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5602:21:10"
										}
									],
									"name": "setSniperProtection",
									"nameLocation": "5501:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "5526:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "5521:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5521:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "timeSeconds",
												"nameLocation": "5543:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "5535:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5535:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5520:35:10"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5628:0:10"
									},
									"scope": 2323,
									"src": "5492:397:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "6029:243:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1761,
														"name": "_cooldownEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "6043:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1762,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "6063:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6043:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1769,
												"nodeType": "IfStatement",
												"src": "6039:84:10",
												"trueBody": {
													"id": 1768,
													"nodeType": "Block",
													"src": "6072:51:10",
													"statements": [
														{
															"expression": {
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1764,
																	"name": "_cooldownEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "6086:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1765,
																	"name": "enabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "6105:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6086:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1767,
															"nodeType": "ExpressionStatement",
															"src": "6086:26:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1770,
														"name": "_cooldownTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "6136:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1771,
														"name": "cooldownSec",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "6153:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6136:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1778,
												"nodeType": "IfStatement",
												"src": "6132:86:10",
												"trueBody": {
													"id": 1777,
													"nodeType": "Block",
													"src": "6166:52:10",
													"statements": [
														{
															"expression": {
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1773,
																	"name": "_cooldownTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "6180:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1774,
																	"name": "cooldownSec",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "6196:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6180:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1776,
															"nodeType": "ExpressionStatement",
															"src": "6180:27:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1780,
															"name": "enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "6244:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1781,
															"name": "cooldownSec",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "6253:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1779,
														"name": "CooldownSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "6232:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (bool,uint256)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6232:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1783,
												"nodeType": "EmitStatement",
												"src": "6227:38:10"
											}
										]
									},
									"functionSelector": "48fca59d",
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1756,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1755,
												"name": "nonReentrant",
												"nameLocations": [
													"5982:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "5982:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5982:12:10"
										},
										{
											"arguments": [
												{
													"id": 1758,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "6012:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1759,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1757,
												"name": "onlyRole",
												"nameLocations": [
													"6003:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6003:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6003:21:10"
										}
									],
									"name": "setCooldownConfig",
									"nameLocation": "5904:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "5927:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "5922:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5922:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "cooldownSec",
												"nameLocation": "5944:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "5936:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5936:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5921:35:10"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6029:0:10"
									},
									"scope": 2323,
									"src": "5895:377:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "6389:128:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1795,
														"name": "_maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "6403:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1796,
														"name": "maxTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "6419:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6403:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1807,
												"nodeType": "IfStatement",
												"src": "6399:112:10",
												"trueBody": {
													"id": 1806,
													"nodeType": "Block",
													"src": "6426:85:10",
													"statements": [
														{
															"expression": {
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1798,
																	"name": "_maxTxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "6440:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1799,
																	"name": "maxTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "6455:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6440:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1801,
															"nodeType": "ExpressionStatement",
															"src": "6440:20:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1803,
																		"name": "maxTx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1787,
																		"src": "6494:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1802,
																	"name": "MaxTxAmountSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "6479:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6479:21:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1805,
															"nodeType": "EmitStatement",
															"src": "6474:26:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ec28438a",
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1790,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1789,
												"name": "nonReentrant",
												"nameLocations": [
													"6342:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "6342:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6342:12:10"
										},
										{
											"arguments": [
												{
													"id": 1792,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "6372:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1793,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1791,
												"name": "onlyRole",
												"nameLocations": [
													"6363:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6363:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6363:21:10"
										}
									],
									"name": "setMaxTxAmount",
									"nameLocation": "6287:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "maxTx",
												"nameLocation": "6310:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "6302:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6301:15:10"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6389:0:10"
									},
									"scope": 2323,
									"src": "6278:239:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1845,
										"nodeType": "Block",
										"src": "6650:216:10",
										"statements": [
											{
												"assignments": [
													1823
												],
												"declarations": [
													{
														"constant": false,
														"id": 1823,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "6677:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1845,
														"src": "6660:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
															"typeString": "struct WallyToken.UserData"
														},
														"typeName": {
															"id": 1822,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1821,
																"name": "UserData",
																"nameLocations": [
																	"6660:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1365,
																"src": "6660:8:10"
															},
															"referencedDeclaration": 1365,
															"src": "6660:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
																"typeString": "struct WallyToken.UserData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1827,
												"initialValue": {
													"baseExpression": {
														"id": 1824,
														"name": "_userData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "6684:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$1365_storage_$",
															"typeString": "mapping(address => struct WallyToken.UserData storage ref)"
														}
													},
													"id": 1826,
													"indexExpression": {
														"id": 1825,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "6694:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6684:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserData_$1365_storage",
														"typeString": "struct WallyToken.UserData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6660:39:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1828,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "6713:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
																"typeString": "struct WallyToken.UserData storage pointer"
															}
														},
														"id": 1829,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6718:11:10",
														"memberName": "blacklisted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1362,
														"src": "6713:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1830,
														"name": "blacklisted_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "6733:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6713:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1844,
												"nodeType": "IfStatement",
												"src": "6709:151:10",
												"trueBody": {
													"id": 1843,
													"nodeType": "Block",
													"src": "6747:113:10",
													"statements": [
														{
															"expression": {
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1832,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "6761:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
																			"typeString": "struct WallyToken.UserData storage pointer"
																		}
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6766:11:10",
																	"memberName": "blacklisted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1362,
																	"src": "6761:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1835,
																	"name": "blacklisted_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "6780:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6761:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1837,
															"nodeType": "ExpressionStatement",
															"src": "6761:31:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1839,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "6830:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1840,
																		"name": "blacklisted_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "6836:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1838,
																	"name": "UserBlacklistedSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "6811:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,bool)"
																	}
																},
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6811:38:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1842,
															"nodeType": "EmitStatement",
															"src": "6806:43:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 1846,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1816,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1815,
												"name": "nonReentrant",
												"nameLocations": [
													"6603:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "6603:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6603:12:10"
										},
										{
											"arguments": [
												{
													"id": 1818,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "6633:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1819,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1817,
												"name": "onlyRole",
												"nameLocations": [
													"6624:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6624:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6624:21:10"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "6532:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6553:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "6545:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6545:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "blacklisted_",
												"nameLocation": "6564:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "6559:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6559:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6544:33:10"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6650:0:10"
									},
									"scope": 2323,
									"src": "6523:343:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "6948:35:10",
										"statements": [
											{
												"expression": {
													"id": 1851,
													"name": "_daoAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1355,
													"src": "6965:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1850,
												"id": 1852,
												"nodeType": "Return",
												"src": "6958:18:10"
											}
										]
									},
									"functionSelector": "2131c68c",
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "daoAddress",
									"nameLocation": "6903:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6913:2:10"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "6939:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6939:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6938:9:10"
									},
									"scope": 2323,
									"src": "6894:89:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "7047:49:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1861,
															"name": "_uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "7072:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
																"typeString": "contract IUniswapV2Router02"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
																"typeString": "contract IUniswapV2Router02"
															}
														],
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7064:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1859,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7064:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1858,
												"id": 1863,
												"nodeType": "Return",
												"src": "7057:32:10"
											}
										]
									},
									"functionSelector": "1694505e",
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV2Router",
									"nameLocation": "6997:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7012:2:10"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "7038:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7038:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7037:9:10"
									},
									"scope": 2323,
									"src": "6988:108:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "7158:38:10",
										"statements": [
											{
												"expression": {
													"id": 1870,
													"name": "_uniswapV2Pair",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1360,
													"src": "7175:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1869,
												"id": 1871,
												"nodeType": "Return",
												"src": "7168:21:10"
											}
										]
									},
									"functionSelector": "49bd5a5e",
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV2Pair",
									"nameLocation": "7110:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7123:2:10"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "7149:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7149:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7148:9:10"
									},
									"scope": 2323,
									"src": "7101:95:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1880,
										"nodeType": "Block",
										"src": "7256:39:10",
										"statements": [
											{
												"expression": {
													"id": 1878,
													"name": "_tradingEnabled",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1372,
													"src": "7273:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1877,
												"id": 1879,
												"nodeType": "Return",
												"src": "7266:22:10"
											}
										]
									},
									"functionSelector": "4ada218b",
									"id": 1881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tradingEnabled",
									"nameLocation": "7210:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7224:2:10"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "7250:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7250:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7249:6:10"
									},
									"scope": 2323,
									"src": "7201:94:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "7364:48:10",
										"statements": [
											{
												"expression": {
													"id": 1886,
													"name": "_sniperProtectionEnabled",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "7381:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1885,
												"id": 1887,
												"nodeType": "Return",
												"src": "7374:31:10"
											}
										]
									},
									"functionSelector": "963472f9",
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sniperProtectionEnabled",
									"nameLocation": "7309:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7332:2:10"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "7358:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1883,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7358:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7357:6:10"
									},
									"scope": 2323,
									"src": "7300:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "7470:34:10",
										"statements": [
											{
												"expression": {
													"id": 1894,
													"name": "_snipeTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1377,
													"src": "7487:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1893,
												"id": 1895,
												"nodeType": "Return",
												"src": "7480:17:10"
											}
										]
									},
									"functionSelector": "2618f214",
									"id": 1897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "snipeTime",
									"nameLocation": "7426:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7435:2:10"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "7461:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7461:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7460:9:10"
									},
									"scope": 2323,
									"src": "7417:87:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1904,
										"nodeType": "Block",
										"src": "7568:40:10",
										"statements": [
											{
												"expression": {
													"id": 1902,
													"name": "_launchTimestamp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1379,
													"src": "7585:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1903,
												"nodeType": "Return",
												"src": "7578:23:10"
											}
										]
									},
									"functionSelector": "65cf7c9b",
									"id": 1905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "launchTimestamp",
									"nameLocation": "7518:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7533:2:10"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "7559:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7559:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:9:10"
									},
									"scope": 2323,
									"src": "7509:99:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1912,
										"nodeType": "Block",
										"src": "7669:40:10",
										"statements": [
											{
												"expression": {
													"id": 1910,
													"name": "_cooldownEnabled",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1381,
													"src": "7686:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1909,
												"id": 1911,
												"nodeType": "Return",
												"src": "7679:23:10"
											}
										]
									},
									"functionSelector": "a985ceef",
									"id": 1913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cooldownEnabled",
									"nameLocation": "7622:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7637:2:10"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "7663:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7663:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7662:6:10"
									},
									"scope": 2323,
									"src": "7613:96:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "7770:37:10",
										"statements": [
											{
												"expression": {
													"id": 1918,
													"name": "_cooldownTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1384,
													"src": "7787:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1917,
												"id": 1919,
												"nodeType": "Return",
												"src": "7780:20:10"
											}
										]
									},
									"functionSelector": "b319c6b7",
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cooldownTime",
									"nameLocation": "7723:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7735:2:10"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "7761:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7761:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7760:9:10"
									},
									"scope": 2323,
									"src": "7714:93:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "7867:36:10",
										"statements": [
											{
												"expression": {
													"id": 1926,
													"name": "_maxTxAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1386,
													"src": "7884:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1925,
												"id": 1927,
												"nodeType": "Return",
												"src": "7877:19:10"
											}
										]
									},
									"functionSelector": "8c0b5e22",
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxTxAmount",
									"nameLocation": "7821:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7832:2:10"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "7858:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7858:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7857:9:10"
									},
									"scope": 2323,
									"src": "7812:91:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "7974:51:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1936,
															"name": "_userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "7991:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$1365_storage_$",
																"typeString": "mapping(address => struct WallyToken.UserData storage ref)"
															}
														},
														"id": 1938,
														"indexExpression": {
															"id": 1937,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "8001:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7991:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserData_$1365_storage",
															"typeString": "struct WallyToken.UserData storage ref"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8007:11:10",
													"memberName": "blacklisted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1362,
													"src": "7991:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1935,
												"id": 1940,
												"nodeType": "Return",
												"src": "7984:34:10"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "7917:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7939:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "7931:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7931:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7930:14:10"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "7968:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7968:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7967:6:10"
									},
									"scope": 2323,
									"src": "7908:117:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "8386:595:10",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1967,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8423:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8427:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8423:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1969,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "8435:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1970,
															"name": "tokenAmountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "8439:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1971,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8454:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8458:5:10",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8454:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1966,
														"name": "LiquidityAddRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "8401:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8401:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1974,
												"nodeType": "EmitStatement",
												"src": "8396:68:10"
											},
											{
												"assignments": [
													1976
												],
												"declarations": [
													{
														"constant": false,
														"id": 1976,
														"mutability": "mutable",
														"name": "self_",
														"nameLocation": "8483:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 2026,
														"src": "8475:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1975,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8475:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1981,
												"initialValue": {
													"arguments": [
														{
															"id": 1979,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "8499:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_WallyToken_$2323",
																"typeString": "contract WallyToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_WallyToken_$2323",
																"typeString": "contract WallyToken"
															}
														],
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8491:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1977,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8491:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8491:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8475:29:10"
											},
											{
												"assignments": [
													1984
												],
												"declarations": [
													{
														"constant": false,
														"id": 1984,
														"mutability": "mutable",
														"name": "router",
														"nameLocation": "8533:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2026,
														"src": "8514:25:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
															"typeString": "contract IUniswapV2Router02"
														},
														"typeName": {
															"id": 1983,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1982,
																"name": "IUniswapV2Router02",
																"nameLocations": [
																	"8514:18:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1326,
																"src": "8514:18:10"
															},
															"referencedDeclaration": 1326,
															"src": "8514:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1986,
												"initialValue": {
													"id": 1985,
													"name": "_uniswapV2Router",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "8542:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8514:44:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1988,
															"name": "self_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "8578:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1991,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "8593:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8585:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1989,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8585:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8585:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1993,
															"name": "tokenAmountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "8602:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1987,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															986,
															1046
														],
														"referencedDeclaration": 986,
														"src": "8569:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8569:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "8569:47:10"
											},
											{
												"expression": {
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1996,
																"name": "amountToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1960,
																"src": "8628:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1997,
																"name": "amountETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "8641:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1998,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "8652:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1999,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "8627:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2005,
																"name": "self_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "8719:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2006,
																"name": "tokenAmountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "8738:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2007,
																"name": "tokenAmountMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "8765:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2008,
																"name": "ethAmountMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1950,
																"src": "8793:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2009,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "8819:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2010,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "8835:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2000,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "8665:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1326",
																		"typeString": "contract IUniswapV2Router02"
																	}
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8672:15:10",
																"memberName": "addLiquidityETH",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1325,
																"src": "8665:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
																}
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"expression": {
																		"id": 2002,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8695:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8699:5:10",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "8695:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "8665:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8665:188:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"src": "8627:226:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2013,
												"nodeType": "ExpressionStatement",
												"src": "8627:226:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2015,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "8884:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2016,
															"name": "amountToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "8888:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2017,
															"name": "amountETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "8901:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2018,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "8912:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2014,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "8869:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8869:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2020,
												"nodeType": "EmitStatement",
												"src": "8864:58:10"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2021,
															"name": "amountToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "8940:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2022,
															"name": "amountETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "8953:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2023,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "8964:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2024,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8939:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1965,
												"id": 2025,
												"nodeType": "Return",
												"src": "8932:42:10"
											}
										]
									},
									"functionSelector": "f6f1e306",
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1955,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1954,
												"name": "nonReentrant",
												"nameLocations": [
													"8263:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "8263:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8263:12:10"
										},
										{
											"arguments": [
												{
													"id": 1957,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "8293:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1958,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1956,
												"name": "onlyRole",
												"nameLocations": [
													"8284:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "8284:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8284:21:10"
										}
									],
									"name": "addLiquidityETH",
									"nameLocation": "8061:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8094:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "8086:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8086:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "tokenAmountIn",
												"nameLocation": "8114:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "8106:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8106:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "tokenAmountMin",
												"nameLocation": "8145:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "8137:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8137:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "ethAmountMin",
												"nameLocation": "8177:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "8169:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8169:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "8207:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "8199:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8199:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8076:145:10"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "8331:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "8323:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8323:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "8352:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "8344:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8344:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "8371:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "8363:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8363:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8322:59:10"
									},
									"scope": 2323,
									"src": "8052:929:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "9195:2066:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2037,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "9257:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9273:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9265:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2038,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9265:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9265:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9257:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2043,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2032,
																"src": "9279:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9285:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2044,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9285:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9285:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9279:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9257:38:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2050,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "9299:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9309:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9299:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9257:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2218,
												"nodeType": "IfStatement",
												"src": "9253:1954:10",
												"trueBody": {
													"id": 2217,
													"nodeType": "Block",
													"src": "9312:1895:10",
													"statements": [
														{
															"assignments": [
																2056
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2056,
																	"mutability": "mutable",
																	"name": "senderData",
																	"nameLocation": "9343:10:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2217,
																	"src": "9326:27:10",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
																		"typeString": "struct WallyToken.UserData"
																	},
																	"typeName": {
																		"id": 2055,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2054,
																			"name": "UserData",
																			"nameLocations": [
																				"9326:8:10"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1365,
																			"src": "9326:8:10"
																		},
																		"referencedDeclaration": 1365,
																		"src": "9326:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
																			"typeString": "struct WallyToken.UserData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2060,
															"initialValue": {
																"baseExpression": {
																	"id": 2057,
																	"name": "_userData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "9356:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$1365_storage_$",
																		"typeString": "mapping(address => struct WallyToken.UserData storage ref)"
																	}
																},
																"id": 2059,
																"indexExpression": {
																	"id": 2058,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2030,
																	"src": "9366:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9356:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserData_$1365_storage",
																	"typeString": "struct WallyToken.UserData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9326:45:10"
														},
														{
															"assignments": [
																2063
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2063,
																	"mutability": "mutable",
																	"name": "recipientData",
																	"nameLocation": "9402:13:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2217,
																	"src": "9385:30:10",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
																		"typeString": "struct WallyToken.UserData"
																	},
																	"typeName": {
																		"id": 2062,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2061,
																			"name": "UserData",
																			"nameLocations": [
																				"9385:8:10"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1365,
																			"src": "9385:8:10"
																		},
																		"referencedDeclaration": 1365,
																		"src": "9385:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
																			"typeString": "struct WallyToken.UserData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2067,
															"initialValue": {
																"baseExpression": {
																	"id": 2064,
																	"name": "_userData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "9418:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$1365_storage_$",
																		"typeString": "mapping(address => struct WallyToken.UserData storage ref)"
																	}
																},
																"id": 2066,
																"indexExpression": {
																	"id": 2065,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2032,
																	"src": "9428:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9418:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserData_$1365_storage",
																	"typeString": "struct WallyToken.UserData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9385:46:10"
														},
														{
															"condition": {
																"expression": {
																	"id": 2068,
																	"name": "senderData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2056,
																	"src": "9450:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
																		"typeString": "struct WallyToken.UserData storage pointer"
																	}
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9461:11:10",
																"memberName": "blacklisted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1362,
																"src": "9450:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2073,
															"nodeType": "IfStatement",
															"src": "9446:54:10",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2070,
																		"name": "BlacklistedSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "9481:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9481:19:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 2072,
																"nodeType": "RevertStatement",
																"src": "9474:26:10"
															}
														},
														{
															"condition": {
																"expression": {
																	"id": 2074,
																	"name": "recipientData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2063,
																	"src": "9518:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
																		"typeString": "struct WallyToken.UserData storage pointer"
																	}
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9532:11:10",
																"memberName": "blacklisted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1362,
																"src": "9518:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2079,
															"nodeType": "IfStatement",
															"src": "9514:60:10",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2076,
																		"name": "BlacklistedRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1276,
																		"src": "9552:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 2077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9552:22:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 2078,
																"nodeType": "RevertStatement",
																"src": "9545:29:10"
															}
														},
														{
															"assignments": [
																2081
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2081,
																	"mutability": "mutable",
																	"name": "tradingActive",
																	"nameLocation": "9594:13:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2217,
																	"src": "9589:18:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2080,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "9589:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2083,
															"initialValue": {
																"id": 2082,
																"name": "_tradingEnabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "9610:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9589:36:10"
														},
														{
															"condition": {
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9643:14:10",
																"subExpression": {
																	"id": 2084,
																	"name": "tradingActive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2081,
																	"src": "9644:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2111,
															"nodeType": "IfStatement",
															"src": "9639:273:10",
															"trueBody": {
																"id": 2110,
																"nodeType": "Block",
																"src": "9659:253:10",
																"statements": [
																	{
																		"assignments": [
																			2087
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2087,
																				"mutability": "mutable",
																				"name": "fromIsAdmin",
																				"nameLocation": "9682:11:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 2110,
																				"src": "9677:16:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 2086,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "9677:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2092,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2089,
																					"name": "_ADMIN_ROLE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "9704:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2090,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2030,
																					"src": "9717:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2088,
																				"name": "hasRole",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "9696:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																					"typeString": "function (bytes32,address) view returns (bool)"
																				}
																			},
																			"id": 2091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9696:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9677:45:10"
																	},
																	{
																		"assignments": [
																			2094
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2094,
																				"mutability": "mutable",
																				"name": "toIsAdmin",
																				"nameLocation": "9745:9:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 2110,
																				"src": "9740:14:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 2093,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "9740:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2099,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2096,
																					"name": "_ADMIN_ROLE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "9767:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2097,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2032,
																					"src": "9780:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2095,
																				"name": "hasRole",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "9759:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																					"typeString": "function (bytes32,address) view returns (bool)"
																				}
																			},
																			"id": 2098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9759:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9740:43:10"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "!",
																				"prefix": true,
																				"src": "9805:12:10",
																				"subExpression": {
																					"id": 2100,
																					"name": "fromIsAdmin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2087,
																					"src": "9806:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"id": 2103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "!",
																				"prefix": true,
																				"src": "9821:10:10",
																				"subExpression": {
																					"id": 2102,
																					"name": "toIsAdmin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2094,
																					"src": "9822:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9805:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2109,
																		"nodeType": "IfStatement",
																		"src": "9801:97:10",
																		"trueBody": {
																			"id": 2108,
																			"nodeType": "Block",
																			"src": "9833:65:10",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2105,
																							"name": "TradingDisabled",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1272,
																							"src": "9862:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																								"typeString": "function () pure returns (error)"
																							}
																						},
																						"id": 2106,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9862:17:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_error",
																							"typeString": "error"
																						}
																					},
																					"id": 2107,
																					"nodeType": "RevertStatement",
																					"src": "9855:24:10"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"assignments": [
																2113
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2113,
																	"mutability": "mutable",
																	"name": "localMaxTx",
																	"nameLocation": "9934:10:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2217,
																	"src": "9926:18:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2112,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9926:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2115,
															"initialValue": {
																"id": 2114,
																"name": "_maxTxAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "9947:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9926:33:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2116,
																		"name": "localMaxTx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2113,
																		"src": "9977:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9991:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9977:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2119,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2034,
																		"src": "9996:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2120,
																		"name": "localMaxTx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2113,
																		"src": "10005:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9996:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9977:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2127,
															"nodeType": "IfStatement",
															"src": "9973:98:10",
															"trueBody": {
																"id": 2126,
																"nodeType": "Block",
																"src": "10017:54:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2123,
																				"name": "ExceedsMaxTx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1278,
																				"src": "10042:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 2124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10042:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2125,
																		"nodeType": "RevertStatement",
																		"src": "10035:21:10"
																	}
																]
															}
														},
														{
															"assignments": [
																2129
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2129,
																	"mutability": "mutable",
																	"name": "sniperOn",
																	"nameLocation": "10090:8:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2217,
																	"src": "10085:13:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2128,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "10085:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2131,
															"initialValue": {
																"id": 2130,
																"name": "_sniperProtectionEnabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "10101:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10085:40:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2132,
																			"name": "sniperOn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "10160:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"id": 2133,
																			"name": "tradingActive",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2081,
																			"src": "10188:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "10160:41:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2135,
																			"name": "_launchTimestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1379,
																			"src": "10221:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10241:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "10221:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "10160:82:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2139,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "10262:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10268:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "10262:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2141,
																					"name": "_launchTimestamp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1379,
																					"src": "10282:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 2142,
																					"name": "_snipeTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1377,
																					"src": "10301:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10282:29:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2144,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "10281:31:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10262:50:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "10160:152:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2156,
															"nodeType": "IfStatement",
															"src": "10139:357:10",
															"trueBody": {
																"id": 2155,
																"nodeType": "Block",
																"src": "10327:169:10",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2147,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2030,
																				"src": "10392:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2148,
																				"name": "_uniswapV2Pair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1360,
																				"src": "10400:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "10392:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2154,
																		"nodeType": "IfStatement",
																		"src": "10388:94:10",
																		"trueBody": {
																			"id": 2153,
																			"nodeType": "Block",
																			"src": "10416:66:10",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2150,
																							"name": "SniperBuyBlocked",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1280,
																							"src": "10445:16:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																								"typeString": "function () pure returns (error)"
																							}
																						},
																						"id": 2151,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "10445:18:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_error",
																							"typeString": "error"
																						}
																					},
																					"id": 2152,
																					"nodeType": "RevertStatement",
																					"src": "10438:25:10"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"assignments": [
																2158
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2158,
																	"mutability": "mutable",
																	"name": "cooldownOn",
																	"nameLocation": "10515:10:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2217,
																	"src": "10510:15:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2157,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "10510:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2160,
															"initialValue": {
																"id": 2159,
																"name": "_cooldownEnabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "10528:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10510:34:10"
														},
														{
															"condition": {
																"id": 2161,
																"name": "cooldownOn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2158,
																"src": "10562:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2216,
															"nodeType": "IfStatement",
															"src": "10558:639:10",
															"trueBody": {
																"id": 2215,
																"nodeType": "Block",
																"src": "10574:623:10",
																"statements": [
																	{
																		"assignments": [
																			2163
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2163,
																				"mutability": "mutable",
																				"name": "fromIsAdmin_",
																				"nameLocation": "10597:12:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 2215,
																				"src": "10592:17:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 2162,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "10592:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2168,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2165,
																					"name": "_ADMIN_ROLE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "10620:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2166,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2030,
																					"src": "10633:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2164,
																				"name": "hasRole",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "10612:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																					"typeString": "function (bytes32,address) view returns (bool)"
																				}
																			},
																			"id": 2167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10612:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10592:46:10"
																	},
																	{
																		"assignments": [
																			2170
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2170,
																				"mutability": "mutable",
																				"name": "toIsAdmin_",
																				"nameLocation": "10661:10:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 2215,
																				"src": "10656:15:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 2169,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "10656:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2175,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2172,
																					"name": "_ADMIN_ROLE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "10684:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2173,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2032,
																					"src": "10697:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2171,
																				"name": "hasRole",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "10676:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																					"typeString": "function (bytes32,address) view returns (bool)"
																				}
																			},
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10676:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10656:44:10"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 2184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 2180,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2177,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "!",
																						"prefix": true,
																						"src": "10828:13:10",
																						"subExpression": {
																							"id": 2176,
																							"name": "fromIsAdmin_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2163,
																							"src": "10829:12:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"id": 2179,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "!",
																						"prefix": true,
																						"src": "10845:11:10",
																						"subExpression": {
																							"id": 2178,
																							"name": "toIsAdmin_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2170,
																							"src": "10846:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "10828:28:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 2183,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2181,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2030,
																						"src": "10860:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2182,
																						"name": "_uniswapV2Pair",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1360,
																						"src": "10868:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "10860:22:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "10828:54:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 2187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2185,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2032,
																					"src": "10886:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "!=",
																				"rightExpression": {
																					"id": 2186,
																					"name": "_uniswapV2Pair",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1360,
																					"src": "10892:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "10886:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10828:78:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2214,
																		"nodeType": "IfStatement",
																		"src": "10824:359:10",
																		"trueBody": {
																			"id": 2213,
																			"nodeType": "Block",
																			"src": "10908:275:10",
																			"statements": [
																				{
																					"assignments": [
																						2190
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 2190,
																							"mutability": "mutable",
																							"name": "lastTx",
																							"nameLocation": "10938:6:10",
																							"nodeType": "VariableDeclaration",
																							"scope": 2213,
																							"src": "10930:14:10",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 2189,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "10930:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 2193,
																					"initialValue": {
																						"expression": {
																							"id": 2191,
																							"name": "senderData",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2056,
																							"src": "10947:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
																								"typeString": "struct WallyToken.UserData storage pointer"
																							}
																						},
																						"id": 2192,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10958:6:10",
																						"memberName": "lastTx",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1364,
																						"src": "10947:17:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "10930:34:10"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2200,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 2194,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "10990:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 2195,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10996:9:10",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "10990:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2198,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 2196,
																										"name": "lastTx",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2190,
																										"src": "11009:6:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"id": 2197,
																										"name": "_cooldownTime",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1384,
																										"src": "11018:13:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "11009:22:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 2199,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "11008:24:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "10990:42:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 2205,
																					"nodeType": "IfStatement",
																					"src": "10986:122:10",
																					"trueBody": {
																						"id": 2204,
																						"nodeType": "Block",
																						"src": "11034:74:10",
																						"statements": [
																							{
																								"errorCall": {
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"id": 2201,
																										"name": "MustWaitCooldown",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1282,
																										"src": "11067:16:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																											"typeString": "function () pure returns (error)"
																										}
																									},
																									"id": 2202,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "11067:18:10",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_error",
																										"typeString": "error"
																									}
																								},
																								"id": 2203,
																								"nodeType": "RevertStatement",
																								"src": "11060:25:10"
																							}
																						]
																					}
																				},
																				{
																					"expression": {
																						"id": 2211,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 2206,
																								"name": "senderData",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2056,
																								"src": "11129:10:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$1365_storage_ptr",
																									"typeString": "struct WallyToken.UserData storage pointer"
																								}
																							},
																							"id": 2208,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "11140:6:10",
																							"memberName": "lastTx",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1364,
																							"src": "11129:17:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"expression": {
																								"id": 2209,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "11149:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 2210,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11155:9:10",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "11149:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11129:35:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2212,
																					"nodeType": "ExpressionStatement",
																					"src": "11129:35:10"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2220,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "11237:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2221,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "11243:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2222,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "11247:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2219,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2226,
														"src": "11216:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11216:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2224,
												"nodeType": "ExpressionStatement",
												"src": "11216:38:10"
											}
										]
									},
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "8987:94:10",
										"text": " @dev Hook to enforce anti-bot checks before any non-mint/non-burn transfer."
									},
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "9095:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9124:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "9116:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9116:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9138:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "9130:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9130:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9150:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "9142:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9142:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9115:42:10"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9195:0:10"
									},
									"scope": 2323,
									"src": "9086:2175:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2264,
										"nodeType": "Block",
										"src": "11425:160:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2241,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2232,
																"src": "11443:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11457:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11449:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2242,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11449:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11449:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11443:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f2027746f27",
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11461:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_feae3a0136aad42f58c4067c673b00a699a421f8095fb8857cfc06ebd0186ca3",
																"typeString": "literal_string \"Zero 'to'\""
															},
															"value": "Zero 'to'"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_feae3a0136aad42f58c4067c673b00a699a421f8095fb8857cfc06ebd0186ca3",
																"typeString": "literal_string \"Zero 'to'\""
															}
														],
														"id": 2240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11435:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11435:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2249,
												"nodeType": "ExpressionStatement",
												"src": "11435:38:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "11513:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2255,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "11517:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2251,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2228,
																	"src": "11490:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2250,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "11483:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1173_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11483:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1173",
																"typeString": "contract IERC20"
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11504:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1140,
														"src": "11483:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11483:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2257,
												"nodeType": "ExpressionStatement",
												"src": "11483:41:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2259,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2228,
															"src": "11553:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2260,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "11567:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2261,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "11575:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2258,
														"name": "TokensRescued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "11539:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11539:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2263,
												"nodeType": "EmitStatement",
												"src": "11534:44:10"
											}
										]
									},
									"functionSelector": "b37fd190",
									"id": 2265,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2235,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2234,
												"name": "nonReentrant",
												"nameLocations": [
													"11378:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "11378:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "11378:12:10"
										},
										{
											"arguments": [
												{
													"id": 2237,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "11408:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2238,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2236,
												"name": "onlyRole",
												"nameLocations": [
													"11399:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "11399:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "11399:21:10"
										}
									],
									"name": "rescueTokens",
									"nameLocation": "11290:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "11311:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "11303:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11303:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11333:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "11325:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11325:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11349:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "11341:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11341:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11302:50:10"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11425:0:10"
									},
									"scope": 2323,
									"src": "11281:304:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2310,
										"nodeType": "Block",
										"src": "11734:201:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2278,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "11752:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11766:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11758:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2279,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11758:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11758:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11752:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f2027746f27",
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11770:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_feae3a0136aad42f58c4067c673b00a699a421f8095fb8857cfc06ebd0186ca3",
																"typeString": "literal_string \"Zero 'to'\""
															},
															"value": "Zero 'to'"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_feae3a0136aad42f58c4067c673b00a699a421f8095fb8857cfc06ebd0186ca3",
																"typeString": "literal_string \"Zero 'to'\""
															}
														],
														"id": 2277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11744:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11744:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2286,
												"nodeType": "ExpressionStatement",
												"src": "11744:38:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11819:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11811:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2288,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11811:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11811:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "11823:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2293,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "11831:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2287,
														"name": "TokensRescued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "11797:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11797:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2295,
												"nodeType": "EmitStatement",
												"src": "11792:42:10"
											},
											{
												"assignments": [
													2297,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2297,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "11851:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2310,
														"src": "11846:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2296,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11846:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2304,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11887:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2298,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "11864:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11867:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "11864:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2300,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "11879:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11864:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11864:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11845:45:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2306,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "11908:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455448206661696c",
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11917:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_deb40abafe36ff99ce885178e7730eae7dd5148b40b8023ceac8aa46028daa5f",
																"typeString": "literal_string \"ETH fail\""
															},
															"value": "ETH fail"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_deb40abafe36ff99ce885178e7730eae7dd5148b40b8023ceac8aa46028daa5f",
																"typeString": "literal_string \"ETH fail\""
															}
														],
														"id": 2305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11900:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11900:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2309,
												"nodeType": "ExpressionStatement",
												"src": "11900:28:10"
											}
										]
									},
									"functionSelector": "099a04e5",
									"id": 2311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2272,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2271,
												"name": "nonReentrant",
												"nameLocations": [
													"11687:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "11687:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "11687:12:10"
										},
										{
											"arguments": [
												{
													"id": 2274,
													"name": "_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "11717:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2275,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2273,
												"name": "onlyRole",
												"nameLocations": [
													"11708:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "11708:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "11708:21:10"
										}
									],
									"name": "rescueETH",
									"nameLocation": "11600:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11626:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "11610:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11610:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11638:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "11630:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11630:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11609:36:10"
									},
									"returnParameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11734:0:10"
									},
									"scope": 2323,
									"src": "11591:344:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "11968:58:10",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2315,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11997:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12001:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11997:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12009:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12013:5:10",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "12009:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2314,
														"name": "ReceivedEther",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "11983:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11983:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2320,
												"nodeType": "EmitStatement",
												"src": "11978:41:10"
											}
										]
									},
									"id": 2322,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11948:2:10"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11968:0:10"
									},
									"scope": 2323,
									"src": "11941:85:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2324,
							"src": "1241:10787:10",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419,
								1284
							],
							"usedEvents": [
								317,
								326,
								335,
								1107,
								1116,
								1390,
								1396,
								1402,
								1406,
								1412,
								1420,
								1430,
								1440,
								1446,
								1452,
								1458
							]
						}
					],
					"src": "32:11996:10"
				},
				"id": 10
			}
		}
	}
}