{
	"id": "4970ebd8691caa1ce81ecec96a28e249",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"abi",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/WallyStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/* ---------------------------------\n * Custom Errors (saving gas vs. revert strings)\n * --------------------------------- */\nerror ZeroAmount();\nerror InvalidLockChoice();\nerror AlreadyWithdrawn();\nerror LockNotOver();\nerror InsufficientBalance();\nerror InvalidAddress();\n\n/**\n * @title WallyStaking\n * @dev Stake Wally Tokens for fixed durations (3, 6, or 12 months) to earn APY-based rewards.\n *\n * Must be funded with enough TWG to cover principal + rewards.\n * Addresses many audit items: M001 (fees?), M002 (array length check), M003 (checking transfer), etc.\n */\ncontract WallyStaking is AccessControl, ReentrancyGuard {\n    bytes32 internal constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    IERC20 internal immutable wallyToken;\n\n    // Lock durations (internal, pinned)\n    uint256 internal constant LOCK_3_MONTHS = 90 days;\n    uint256 internal constant LOCK_6_MONTHS = 180 days;\n    uint256 internal constant LOCK_12_MONTHS = 365 days;\n\n    // APYs in basis points, e.g. 500 = 5%\n    uint256 public apy3Months = 500;\n    uint256 public apy6Months = 1000;\n    uint256 public apy12Months = 1500;\n\n    struct StakeInfo {\n        uint256 amount;\n        uint256 startTimestamp;\n        uint256 lockDuration;\n        uint256 apy; // basis points\n        bool withdrawn;\n    }\n\n    // (I003) Named mapping parameter for >=0.8.18\n    mapping(address user => StakeInfo[]) internal _stakes;\n\n    event Staked(address indexed user, uint256 amount, uint256 lockDuration, uint256 apy);\n    event Withdrawn(address indexed user, uint256 stakeIndex, uint256 reward);\n\n    constructor(address _wallyToken, address _admin) payable { // (G008) constructor payable\n        if (_wallyToken == address(0)) revert InvalidAddress();\n        if (_admin == address(0)) revert InvalidAddress();\n\n        wallyToken = IERC20(_wallyToken);\n        _grantRole(ADMIN_ROLE, _admin);\n    }\n\n    /**\n     * @dev Stake a specific `amount` of TWG for one of the fixed durations (3, 6, 12 months).\n     */\n    function stake(uint256 amount, uint256 lockChoice) external nonReentrant {\n        if (amount == 0) revert ZeroAmount();\n\n        (uint256 chosenLock, uint256 chosenAPY) = _getLockInfo(lockChoice);\n\n        // Transfer from user to contract (M003 => check bool return)\n        bool success = wallyToken.transferFrom(msg.sender, address(this), amount);\n        if (!success) revert InsufficientBalance();\n\n        _stakes[msg.sender].push(StakeInfo({\n            amount: amount,\n            startTimestamp: block.timestamp, // (I002) approximate time\n            lockDuration: chosenLock,\n            apy: chosenAPY,\n            withdrawn: false\n        }));\n\n        emit Staked(msg.sender, amount, chosenLock, chosenAPY);\n    }\n\n    /**\n     * @dev Withdraw staked tokens + reward after lock period ends.\n     */\n    function withdraw(uint256 stakeIndex) external nonReentrant {\n        StakeInfo[] storage userStakes = _stakes[msg.sender];\n        // (M002) check array length\n        if (stakeIndex >= userStakes.length) revert InvalidLockChoice();\n\n        StakeInfo storage userStake = userStakes[stakeIndex];\n        if (userStake.withdrawn) revert AlreadyWithdrawn();\n\n        uint256 unlockTime = userStake.startTimestamp + userStake.lockDuration;\n        if (block.timestamp < unlockTime) revert LockNotOver();\n\n        uint256 principal = userStake.amount;\n        uint256 timeStaked = userStake.lockDuration; \n        // (M004) typical formula for APY\n        uint256 reward = (principal * userStake.apy * timeStaked) / (365 days * 10000);\n\n        userStake.withdrawn = true;\n\n        uint256 totalPayment = principal + reward;\n        if (wallyToken.balanceOf(address(this)) < totalPayment) revert InsufficientBalance();\n\n        bool success = wallyToken.transfer(msg.sender, totalPayment);\n        if (!success) revert InsufficientBalance();\n\n        emit Withdrawn(msg.sender, stakeIndex, reward);\n    }\n\n    // Internal helper\n    function _getLockInfo(uint256 lockChoice)\n        internal\n        view\n        returns (uint256 chosenLock, uint256 chosenAPY)\n    {\n        if (lockChoice == 3) {\n            chosenLock = LOCK_3_MONTHS;\n            chosenAPY = apy3Months;\n        } else if (lockChoice == 6) {\n            chosenLock = LOCK_6_MONTHS;\n            chosenAPY = apy6Months;\n        } else if (lockChoice == 12) {\n            chosenLock = LOCK_12_MONTHS;\n            chosenAPY = apy12Months;\n        } else {\n            revert InvalidLockChoice();\n        }\n    }\n\n    /**\n     * @dev Admin can update APYs.\n     */\n    function setAPYs(uint256 _apy3, uint256 _apy6, uint256 _apy12)\n        external\n        onlyRole(ADMIN_ROLE)\n    {\n        if (apy3Months != _apy3) {\n            apy3Months = _apy3;\n        }\n        if (apy6Months != _apy6) {\n            apy6Months = _apy6;\n        }\n        if (apy12Months != _apy12) {\n            apy12Months = _apy12;\n        }\n    }\n\n    /**\n     * @dev Rescue any leftover tokens.\n     */\n    function rescueTokens(address tokenAddress, uint256 amount, address to)\n        external\n        onlyRole(ADMIN_ROLE)\n    {\n        if (to == address(0)) revert InvalidAddress();\n        bool success = IERC20(tokenAddress).transfer(to, amount);\n        if (!success) revert InsufficientBalance();\n    }\n\n    /**\n     * @dev Public getter for a userâ€™s full stake array.\n     */\n    function getStakes(address user) external view returns (StakeInfo[] memory) {\n        return _stakes[user];\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 389,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WallyStaking.sol": {
				"WallyStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wallyToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AlreadyWithdrawn",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidLockChoice",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LockNotOver",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockDuration",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "apy12Months",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "apy3Months",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "apy6Months",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getStakes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockDuration",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "apy",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "withdrawn",
											"type": "bool"
										}
									],
									"internalType": "struct WallyStaking.StakeInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apy3",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_apy6",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_apy12",
									"type": "uint256"
								}
							],
							"name": "setAPYs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockChoice",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"assembly": "    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0xa0\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x40\n  swap5\n  dup6\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_5\n  jumpi\n  tag_7\n  0x20\n  tag_8\n  dup4\n  tag_1\n  jump\t// in\ntag_8:\n  swap3\n  add\n  tag_1\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup1\n  sstore\n    /* \"contracts/WallyStaking.sol\":1262:1265  500 */\n  0x01f4\n  0x02\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sstore\n    /* \"contracts/WallyStaking.sol\":1299:1303  1000 */\n  0x03e8\n  0x03\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sstore\n    /* \"contracts/WallyStaking.sol\":1338:1342  1500 */\n  0x05dc\n  0x04\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  swap1\n    /* \"contracts/WallyStaking.sol\":1909:1934  _wallyToken == address(0) */\n  dup2\n  iszero\n    /* \"contracts/WallyStaking.sol\":1905:1959  if (_wallyToken == address(0)) revert InvalidAddress() */\n  tag_11\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n    /* \"contracts/WallyStaking.sol\":1973:1993  _admin == address(0) */\n  iszero\n    /* \"contracts/WallyStaking.sol\":1969:2018  if (_admin == address(0)) revert InvalidAddress() */\n  tag_11\n  jumpi\n    /* \"contracts/WallyStaking.sol\":2071:2101  _grantRole(ADMIN_ROLE, _admin) */\n  tag_13\n    /* \"contracts/WallyStaking.sol\":2029:2061  wallyToken = IERC20(_wallyToken) */\n  swap2\n  0x80\n  mstore\n    /* \"contracts/WallyStaking.sol\":2071:2101  _grantRole(ADMIN_ROLE, _admin) */\n  tag_2\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n    /* \"contracts/WallyStaking.sol\":2029:2061  wallyToken = IERC20(_wallyToken) */\n  0x80\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  mload\n  dup2\n  assignImmutable(\"0xae3f42c075651cd672386e7fa64476ebefa89324c3c225495e52b74374d0bc80\")\n  return\n    /* \"contracts/WallyStaking.sol\":1969:2018  if (_admin == address(0)) revert InvalidAddress() */\ntag_11:\n    /* \"contracts/WallyStaking.sol\":1943:1959  InvalidAddress() */\n  shl(0xe0, 0xe6c4247b)\n  0x00\n    /* \"contracts/WallyStaking.sol\":2002:2018  InvalidAddress() */\n  mstore\n    /* \"contracts/WallyStaking.sol\":1338:1342  1500 */\n  0x04\n  0x00\n    /* \"contracts/WallyStaking.sol\":2002:2018  InvalidAddress() */\n  revert\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\ntag_5:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_5\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_16\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  mload(0x00)\n  codecopy(0x00, data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048, 0x20)\n  mload(0x00)\n  swap1\n  0x00\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  swap1\n    /* \"contracts/WallyStaking.sol\":908:931  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  swap1\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n    /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  jump\t// out\nstop\ndata_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048 7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec\n\nsub_0: assembly {\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_16, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_16:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_18\n      jumpi\n      pop\n      dup1\n      0x248a9ca3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x5bf42fb4\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x765ef4cc\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x7ba6f458\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xb37fd190\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xf09823c3\n      eq\n      tag_44\n      jumpi\n      0xfbcacca7\n      eq\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      sload(0x04)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_50:\n      0x00\n      dup1\n      revert\n    tag_44:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyStaking.sol\":1234:1265  uint256 public apy3Months = 500 */\n      0x02\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_42:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_60\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_61\n      tag_1\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_62\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_63\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_13\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_15\n      jump\t// in\n    tag_60:\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      stop\n    tag_40:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x60))\n      tag_68\n      tag_2\n      jump\t// in\n    tag_68:\n      calldataload(0x44)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup1\n      dup4\n      sub\n      tag_50\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_71\n      tag_12\n      jump\t// in\n    tag_71:\n        /* \"contracts/WallyStaking.sol\":5327:5343  to == address(0) */\n      iszero\n        /* \"contracts/WallyStaking.sol\":5323:5368  if (to == address(0)) revert InvalidAddress() */\n      tag_72\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/WallyStaking.sol\":5393:5434  IERC20(tokenAddress).transfer(to, amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap3\n      dup4\n      and\n      0x04\n        /* \"contracts/WallyStaking.sol\":5393:5434  IERC20(tokenAddress).transfer(to, amount) */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup1\n      calldataload\n      swap1\n      dup3\n      add\n      mstore\n      swap2\n      0x20\n      swap2\n      dup4\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      0x00\n      swap2\n      and\n        /* \"contracts/WallyStaking.sol\":5393:5434  IERC20(tokenAddress).transfer(to, amount) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_75\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":5393:5434  IERC20(tokenAddress).transfer(to, amount) */\n      swap2\n      tag_77\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_78:\n        /* \"contracts/WallyStaking.sol\":5448:5456  !success */\n      pop\n      iszero\n        /* \"contracts/WallyStaking.sol\":5444:5486  if (!success) revert InsufficientBalance() */\n      tag_79\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      stop\n        /* \"contracts/WallyStaking.sol\":5444:5486  if (!success) revert InsufficientBalance() */\n    tag_79:\n        /* \"contracts/WallyStaking.sol\":3936:3957  InsufficientBalance() */\n      shl(0xe3, 0x1e9acf17)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":5465:5486  InsufficientBalance() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":5465:5486  InsufficientBalance() */\n      revert\n        /* \"contracts/WallyStaking.sol\":5393:5434  IERC20(tokenAddress).transfer(to, amount) */\n    tag_77:\n      tag_81\n      swap2\n      pop\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":5393:5434  IERC20(tokenAddress).transfer(to, amount) */\n      returndatasize\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":5393:5434  IERC20(tokenAddress).transfer(to, amount) */\n      gt\n      tag_82\n      jumpi\n    tag_83:\n      tag_84\n      dup2\n      dup4\n      tag_8\n      jump\t// in\n    tag_84:\n      dup2\n      add\n      swap1\n      tag_9\n      jump\t// in\n    tag_81:\n      dup2\n      jump(tag_78)\n    tag_82:\n      pop\n      returndatasize\n      jump(tag_83)\n    tag_75:\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/WallyStaking.sol\":5323:5368  if (to == address(0)) revert InvalidAddress() */\n    tag_72:\n        /* \"contracts/WallyStaking.sol\":5352:5368  InvalidAddress() */\n      shl(0xe0, 0xe6c4247b)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":5352:5368  InvalidAddress() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":5352:5368  InvalidAddress() */\n      revert\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_38:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_36:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x40))\n      tag_93\n      tag_1\n      jump\t// in\n    tag_93:\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap1\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_34:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_98\n      tag_2\n      jump\t// in\n    tag_98:\n      and\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":5667:5674  _stakes */\n      0x05\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_99\n      jumpi\n      mload(0x40)\n      swap2\n      tag_101\n      0x20\n      dup3\n        /* \"contracts/WallyStaking.sol\":5667:5674  _stakes */\n      0x05\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      shl\n      add\n      dup5\n      tag_8\n      jump\t// in\n    tag_101:\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      dup1\n      swap3\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x00\n      swap2\n    tag_102:\n      dup4\n      dup4\n      lt\n      tag_103\n      jumpi\n      dup5\n      dup7\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      add\n      swap1\n      0x20\n      dup5\n      mstore\n      mload\n      dup1\n      swap2\n      mstore\n      0x40\n      dup4\n      add\n      swap2\n      swap1\n      0x00\n    tag_105:\n      dup2\n      dup2\n      lt\n      tag_106\n      jumpi\n      pop\n      pop\n      pop\n      sub\n      swap1\n      return\n    tag_106:\n      swap2\n      swap4\n      pop\n      swap2\n      0x20\n      0xa0\n      0x01\n      swap3\n      0x80\n      dup8\n      mload\n      dup1\n      mload\n      dup4\n      mstore\n      dup5\n      dup2\n      add\n      mload\n      dup6\n      dup5\n      add\n      mstore\n      0x40\n      dup2\n      add\n      mload\n      0x40\n      dup5\n      add\n      mstore\n      0x60\n      dup2\n      add\n      mload\n      0x60\n      dup5\n      add\n      mstore\n      add\n      mload\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n      add\n      swap5\n      add\n      swap2\n      add\n      swap2\n      dup5\n      swap4\n      swap3\n      jump(tag_105)\n    tag_103:\n        /* \"contracts/WallyStaking.sol\":5667:5674  _stakes */\n      0x05\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      0x01\n      swap3\n      mload(0x40)\n      tag_108\n      dup2\n      tag_7\n      jump\t// in\n    tag_108:\n      dup6\n      sload\n      dup2\n      mstore\n      dup5\n      dup7\n      add\n      sload\n      dup4\n      dup3\n      add\n      mstore\n      0x02\n      dup7\n      add\n      sload\n      0x40\n      dup3\n      add\n      mstore\n      0x03\n      dup7\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0xff\n      0x04\n      dup8\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      add\n      swap3\n      add\n      swap3\n      add\n      swap2\n      swap1\n      jump(tag_102)\n    tag_99:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_32:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_113\n      tag_11\n      jump\t// in\n    tag_113:\n        /* \"contracts/WallyStaking.sol\":2312:2323  amount == 0 */\n      dup2\n      iszero\n        /* \"contracts/WallyStaking.sol\":2308:2344  if (amount == 0) revert ZeroAmount() */\n      tag_114\n      jumpi\n        /* \"contracts/WallyStaking.sol\":4333:4334  3 */\n      0x03\n        /* \"contracts/WallyStaking.sol\":4319:4334  lockChoice == 3 */\n      dup2\n      sub\n        /* \"contracts/WallyStaking.sol\":4333:4334  3 */\n      tag_116\n      jumpi\n      pop\n        /* \"contracts/WallyStaking.sol\":4402:4412  apy3Months */\n      0x02\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":1064:1071  90 days */\n      0x76a700\n        /* \"contracts/WallyStaking.sol\":4315:4711  if (lockChoice == 3) {... */\n    tag_118:\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/WallyStaking.sol\":2517:2575  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":2541:2551  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":2517:2575  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyStaking.sol\":2561:2565  this */\n      address\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      0x20\n      dup2\n        /* \"contracts/WallyStaking.sol\":2517:2575  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      0x64\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      0x00\n        /* \"contracts/WallyStaking.sol\":2517:2527  wallyToken */\n      immutable(\"0xae3f42c075651cd672386e7fa64476ebefa89324c3c225495e52b74374d0bc80\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      and\n        /* \"contracts/WallyStaking.sol\":2517:2575  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_75\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":2517:2575  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      swap2\n      tag_121\n      jumpi\n        /* \"contracts/WallyStaking.sol\":4315:4711  if (lockChoice == 3) {... */\n    tag_122:\n        /* \"contracts/WallyStaking.sol\":2589:2597  !success */\n      pop\n      iszero\n        /* \"contracts/WallyStaking.sol\":2585:2627  if (!success) revert InsufficientBalance() */\n      tag_79\n      jumpi\n        /* \"contracts/WallyStaking.sol\":2541:2551  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":2638:2645  _stakes */\n      0x05\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      tag_125\n      dup2\n      tag_7\n      jump\t// in\n    tag_125:\n      dup5\n      dup2\n      mstore\n      0x20\n        /* \"contracts/WallyStaking.sol\":2663:2880  StakeInfo({... */\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":2731:2746  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      mstore\n      0x40\n        /* \"contracts/WallyStaking.sol\":2663:2880  StakeInfo({... */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup5\n      dup2\n      mstore\n      0x60\n        /* \"contracts/WallyStaking.sol\":2663:2880  StakeInfo({... */\n      dup4\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup7\n      dup3\n      mstore\n        /* \"contracts/WallyStaking.sol\":2663:2880  StakeInfo({... */\n      0x80\n      dup5\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap5\n      0x00\n      dup7\n      mstore\n      dup1\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_99\n      jumpi\n      tag_128\n      swap2\n      0x01\n      dup3\n      add\n      dup2\n      sstore\n      tag_4\n      jump\t// in\n    tag_128:\n      swap4\n      swap1\n      swap4\n      tag_129\n      jumpi\n      0x04\n      swap5\n      mload\n      dup5\n      sstore\n      mload\n      0x01\n      dup5\n      add\n      sstore\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      mload\n        /* \"contracts/WallyStaking.sol\":4333:4334  3 */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup3\n      add\n      sstore\n      add\n      swap1\n      mload\n      iszero\n      iszero\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      mstore\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/WallyStaking.sol\":2897:2946  Staked(msg.sender, amount, chosenLock, chosenAPY) */\n      0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x60\n        /* \"contracts/WallyStaking.sol\":2541:2551  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":2897:2946  Staked(msg.sender, amount, chosenLock, chosenAPY) */\n      swap3\n      log2\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      sstore\n      stop\n    tag_129:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x00)\n      revert(0x00, 0x24)\n        /* \"contracts/WallyStaking.sol\":2517:2575  wallyToken.transferFrom(msg.sender, address(this), amount) */\n    tag_121:\n      tag_131\n      swap2\n      pop\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":2517:2575  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      returndatasize\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":2517:2575  wallyToken.transferFrom(msg.sender, address(this), amount) */\n      gt\n      tag_82\n      jumpi\n      tag_84\n      dup2\n      dup4\n      tag_8\n      jump\t// in\n    tag_131:\n      dup5\n      jump(tag_122)\n        /* \"contracts/WallyStaking.sol\":4315:4711  if (lockChoice == 3) {... */\n    tag_116:\n        /* \"contracts/WallyStaking.sol\":4447:4448  6 */\n      0x06\n        /* \"contracts/WallyStaking.sol\":4433:4448  lockChoice == 6 */\n      dup2\n      sub\n        /* \"contracts/WallyStaking.sol\":4447:4448  6 */\n      tag_135\n      jumpi\n      pop\n        /* \"contracts/WallyStaking.sol\":4333:4334  3 */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":1119:1127  180 days */\n      0xed4e00\n        /* \"contracts/WallyStaking.sol\":4315:4711  if (lockChoice == 3) {... */\n      jump(tag_118)\n        /* \"contracts/WallyStaking.sol\":4429:4711  if (lockChoice == 6) {... */\n    tag_135:\n        /* \"contracts/WallyStaking.sol\":4561:4563  12 */\n      0x0c\n        /* \"contracts/WallyStaking.sol\":4547:4563  lockChoice == 12 */\n      sub\n        /* \"contracts/WallyStaking.sol\":4561:4563  12 */\n      tag_138\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload(0x04)\n        /* \"contracts/WallyStaking.sol\":1176:1184  365 days */\n      0x01e13380\n        /* \"contracts/WallyStaking.sol\":4315:4711  if (lockChoice == 3) {... */\n      jump(tag_118)\n        /* \"contracts/WallyStaking.sol\":4543:4711  if (lockChoice == 12) {... */\n    tag_138:\n        /* \"contracts/WallyStaking.sol\":3256:3275  InvalidLockChoice() */\n      shl(0xe0, 0x506604d7)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":4681:4700  InvalidLockChoice() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":4681:4700  InvalidLockChoice() */\n      revert\n        /* \"contracts/WallyStaking.sol\":2308:2344  if (amount == 0) revert ZeroAmount() */\n    tag_114:\n        /* \"contracts/WallyStaking.sol\":2332:2344  ZeroAmount() */\n      shl(0xe0, 0x1f2a2005)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":2332:2344  ZeroAmount() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":2332:2344  ZeroAmount() */\n      revert\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_30:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x44)\n      calldataload(0x24)\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_144\n      tag_12\n      jump\t// in\n    tag_144:\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"contracts/WallyStaking.sol\":4901:4911  apy3Months */\n      0x02\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":4901:4920  apy3Months != _apy3 */\n      sub\n        /* \"contracts/WallyStaking.sol\":4897:4965  if (apy3Months != _apy3) {... */\n      tag_145\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_146:\n      pop\n      dup1\n        /* \"contracts/WallyStaking.sol\":4978:4988  apy6Months */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":4978:4997  apy6Months != _apy6 */\n      sub\n        /* \"contracts/WallyStaking.sol\":4974:5042  if (apy6Months != _apy6) {... */\n      tag_147\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_148:\n      pop\n      dup1\n      sload(0x04)\n        /* \"contracts/WallyStaking.sol\":5055:5076  apy12Months != _apy12 */\n      sub\n        /* \"contracts/WallyStaking.sol\":5051:5123  if (apy12Months != _apy12) {... */\n      tag_149\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      stop\n        /* \"contracts/WallyStaking.sol\":5051:5123  if (apy12Months != _apy12) {... */\n    tag_149:\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":4974:5042  if (apy6Months != _apy6) {... */\n    tag_147:\n        /* \"contracts/WallyStaking.sol\":4978:4988  apy6Months */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":4974:5042  if (apy6Months != _apy6) {... */\n      dup2\n      jump(tag_148)\n        /* \"contracts/WallyStaking.sol\":4897:4965  if (apy3Months != _apy3) {... */\n    tag_145:\n        /* \"contracts/WallyStaking.sol\":4901:4911  apy3Months */\n      0x02\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/WallyStaking.sol\":4897:4965  if (apy3Months != _apy3) {... */\n      dup3\n      jump(tag_146)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_28:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/WallyStaking.sol\":1271:1303  uint256 public apy6Months = 1000 */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_26:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x40))\n      tag_159\n      tag_1\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_60\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_15\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      shl(0xe1, 0x334bd919)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_24:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_60\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      calldataload(0x04)\n      tag_168\n      tag_1\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_63\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_14\n      jump\t// in\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_22:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_175\n      tag_11\n      jump\t// in\n    tag_175:\n        /* \"contracts/WallyStaking.sol\":3154:3164  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      mstore\n        /* \"contracts/WallyStaking.sol\":3146:3153  _stakes */\n      0x05\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n        /* \"contracts/WallyStaking.sol\":3216:3247  stakeIndex >= userStakes.length */\n      dup3\n      lt\n      iszero\n        /* \"contracts/WallyStaking.sol\":3212:3275  if (stakeIndex >= userStakes.length) revert InvalidLockChoice() */\n      tag_138\n      jumpi\n        /* \"contracts/WallyStaking.sol\":3316:3338  userStakes[stakeIndex] */\n      dup2\n      tag_178\n      swap2\n      tag_4\n      jump\t// in\n    tag_178:\n        /* \"contracts/WallyStaking.sol\":3352:3371  userStake.withdrawn */\n      pop\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":3352:3371  userStake.withdrawn */\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup2\n      sload\n      0xff\n      dup2\n      and\n        /* \"contracts/WallyStaking.sol\":3348:3398  if (userStake.withdrawn) revert AlreadyWithdrawn() */\n      tag_179\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"contracts/WallyStaking.sol\":3430:3454  userStake.startTimestamp */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":3457:3479  userStake.lockDuration */\n      swap2\n        /* \"contracts/WallyStaking.sol\":3430:3479  userStake.startTimestamp + userStake.lockDuration */\n      tag_181\n        /* \"contracts/WallyStaking.sol\":3457:3479  userStake.lockDuration */\n      0x02\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":3430:3479  userStake.startTimestamp + userStake.lockDuration */\n      dup1\n      swap5\n      tag_5\n      jump\t// in\n    tag_181:\n        /* \"contracts/WallyStaking.sol\":3493:3508  block.timestamp */\n      timestamp\n        /* \"contracts/WallyStaking.sol\":3493:3521  block.timestamp < unlockTime */\n      lt\n        /* \"contracts/WallyStaking.sol\":3489:3543  if (block.timestamp < unlockTime) revert LockNotOver() */\n      tag_182\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      swap4\n        /* \"contracts/WallyStaking.sol\":3757:3773  365 days * 10000 */\n      0x496cebb800\n        /* \"contracts/WallyStaking.sol\":3714:3752  principal * userStake.apy * timeStaked */\n      tag_184\n        /* \"contracts/WallyStaking.sol\":3845:3863  principal + reward */\n      tag_185\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap6\n        /* \"contracts/WallyStaking.sol\":3714:3739  principal * userStake.apy */\n      tag_186\n        /* \"contracts/WallyStaking.sol\":3726:3739  userStake.apy */\n      0x03\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup7\n      sload\n        /* \"contracts/WallyStaking.sol\":3726:3739  userStake.apy */\n      swap7\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"contracts/WallyStaking.sol\":3714:3739  principal * userStake.apy */\n      dup7\n      tag_6\n      jump\t// in\n    tag_186:\n        /* \"contracts/WallyStaking.sol\":3714:3752  principal * userStake.apy * timeStaked */\n      tag_6\n      jump\t// in\n    tag_184:\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      div\n      swap5\n      dup6\n      swap4\n      not(0xff)\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/WallyStaking.sol\":3845:3863  principal + reward */\n      tag_5\n      jump\t// in\n    tag_185:\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/WallyStaking.sol\":3877:3912  wallyToken.balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":3906:3910  this */\n      address\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":3877:3912  wallyToken.balanceOf(address(this)) */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyStaking.sol\":3877:3887  wallyToken */\n      immutable(\"0xae3f42c075651cd672386e7fa64476ebefa89324c3c225495e52b74374d0bc80\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      and\n      swap1\n      0x20\n      dup2\n        /* \"contracts/WallyStaking.sol\":3877:3912  wallyToken.balanceOf(address(this)) */\n      0x24\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      dup6\n        /* \"contracts/WallyStaking.sol\":3877:3912  wallyToken.balanceOf(address(this)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_75\n      jumpi\n      dup4\n      swap2\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":3877:3912  wallyToken.balanceOf(address(this)) */\n      swap2\n      tag_189\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_190:\n        /* \"contracts/WallyStaking.sol\":3877:3927  wallyToken.balanceOf(address(this)) < totalPayment */\n      pop\n      lt\n        /* \"contracts/WallyStaking.sol\":3873:3957  if (wallyToken.balanceOf(address(this)) < totalPayment) revert InsufficientBalance() */\n      tag_79\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/WallyStaking.sol\":3983:4028  wallyToken.transfer(msg.sender, totalPayment) */\n      dup2\n      mstore\n        /* \"contracts/WallyStaking.sol\":3154:3164  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/WallyStaking.sol\":3983:4028  wallyToken.transfer(msg.sender, totalPayment) */\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x20\n      swap1\n      dup3\n      swap1\n      0x44\n      swap1\n      dup3\n      swap1\n      0x00\n      swap1\n        /* \"contracts/WallyStaking.sol\":3983:4028  wallyToken.transfer(msg.sender, totalPayment) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_75\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":3983:4028  wallyToken.transfer(msg.sender, totalPayment) */\n      swap2\n      tag_196\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_197:\n        /* \"contracts/WallyStaking.sol\":4042:4050  !success */\n      pop\n      iszero\n        /* \"contracts/WallyStaking.sol\":4038:4080  if (!success) revert InsufficientBalance() */\n      tag_79\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/WallyStaking.sol\":4096:4137  Withdrawn(msg.sender, stakeIndex, reward) */\n      0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"contracts/WallyStaking.sol\":3154:3164  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":4096:4137  Withdrawn(msg.sender, stakeIndex, reward) */\n      swap3\n      log2\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n      dup1\n      sstore\n      stop\n        /* \"contracts/WallyStaking.sol\":3983:4028  wallyToken.transfer(msg.sender, totalPayment) */\n    tag_196:\n      tag_200\n      swap2\n      pop\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":3983:4028  wallyToken.transfer(msg.sender, totalPayment) */\n      returndatasize\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":3983:4028  wallyToken.transfer(msg.sender, totalPayment) */\n      gt\n      tag_82\n      jumpi\n      tag_84\n      dup2\n      dup4\n      tag_8\n      jump\t// in\n    tag_200:\n      dup4\n      jump(tag_197)\n        /* \"contracts/WallyStaking.sol\":3877:3912  wallyToken.balanceOf(address(this)) */\n    tag_189:\n      swap2\n      pop\n      pop\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":3877:3912  wallyToken.balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":3877:3912  wallyToken.balanceOf(address(this)) */\n      gt\n      tag_204\n      jumpi\n    tag_205:\n      dup2\n      tag_206\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/WallyStaking.sol\":3877:3912  wallyToken.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_8\n      jump\t// in\n    tag_206:\n      dup2\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sub\n      slt\n      tag_50\n      jumpi\n      dup3\n      swap1\n      mload\n        /* \"contracts/WallyStaking.sol\":3877:3912  wallyToken.balanceOf(address(this)) */\n      dup7\n      jump(tag_190)\n    tag_204:\n      returndatasize\n      swap2\n      pop\n      jump(tag_205)\n        /* \"contracts/WallyStaking.sol\":3489:3543  if (block.timestamp < unlockTime) revert LockNotOver() */\n    tag_182:\n        /* \"contracts/WallyStaking.sol\":3530:3543  LockNotOver() */\n      shl(0xe0, 0xfea04557)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":3530:3543  LockNotOver() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":3530:3543  LockNotOver() */\n      revert\n        /* \"contracts/WallyStaking.sol\":3348:3398  if (userStake.withdrawn) revert AlreadyWithdrawn() */\n    tag_179:\n        /* \"contracts/WallyStaking.sol\":3380:3398  AlreadyWithdrawn() */\n      shl(0xe0, 0x6507689f)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/WallyStaking.sol\":3380:3398  AlreadyWithdrawn() */\n      mstore\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/WallyStaking.sol\":3380:3398  AlreadyWithdrawn() */\n      revert\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_20:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_213\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_213:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_18:\n      jumpi(tag_50, callvalue)\n      jumpi(tag_50, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      shl(0xe0, 0xffffffff)\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_50\n      jumpi\n      0x20\n      swap2\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_220\n      jumpi\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_221:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_220:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup4\n      jump(tag_221)\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n    tag_1:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_50\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_50\n      jumpi\n      jump\t// out\n    tag_4:\n      dup1\n      sload\n      dup3\n      lt\n      iszero\n      tag_226\n      jumpi\n      0x00\n      mstore\n      0x05\n      keccak256(0x00, 0x20)\n      swap2\n      mul\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_226:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_5:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_228\n      jumpi\n      jump\t// out\n    tag_228:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_6:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_228\n      jumpi\n      jump\t// out\n    tag_7:\n      0xa0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_99\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_8:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_99\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_9:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_50\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_50\n      jumpi\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_240\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_240:\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/WallyStaking.sol\":908:931  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      mstore\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_14:\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_246\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      pop\n      pop\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_15:\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_246\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"contracts/WallyStaking.sol\":807:5689  contract WallyStaking is AccessControl, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e90286aa4fcce98d1e476004d5a2805b6bad50e2f156c49fc17e42dd9c1d5d9164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 235,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0601f610dd038819003918201601f19168301916001600160401b038311848410176100c35780849260409485528339810103126100bf5761004d6020610046836100d7565b92016100d7565b600180556101f46002556103e86003556105dc6004556001600160a01b039091169081156100b0576001600160a01b038116156100b057610090916080526100eb565b50604051610c199081610197823960805181818161042301526107490152f35b63e6c4247b60e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100bf57565b6001600160a01b0381165f9081525f516020610db05f395f51905f52602052604090205460ff16610191576001600160a01b03165f8181525f516020610db05f395f51905f5260205260408120805460ff191660011790553391907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b505f9056fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146108a857508063248a9ca3146108765780632e1a7d4d146106995780632f2ff15d1461065c57806336568abe146106185780635bf42fb4146105fb578063765ef4cc146105a15780637b0472f0146103c45780637ba6f4581461028357806391d148541461023b578063a217fddf14610221578063b37fd19014610143578063d547741f146100ff578063f09823c3146100e25763fbcacca7146100c1575f80fd5b346100de575f3660031901126100de576020600454604051908152f35b5f80fd5b346100de575f3660031901126100de576020600254604051908152f35b346100de5760403660031901126100de5761014160043561011e6108fb565b9061013c610137825f525f602052600160405f20015490565b610aa3565b610b63565b005b346100de5760603660031901126100de5761015c610911565b604435906001600160a01b0382168083036100de57610179610a34565b156102125760405163a9059cbb60e01b81526001600160a01b039283166004820152602480359082015291602091839160449183915f91165af1908115610207575f916101d8575b50156101c957005b631e9acf1760e31b5f5260045ffd5b6101fa915060203d602011610200575b6101f281836109a4565b8101906109c6565b816101c1565b503d6101e8565b6040513d5f823e3d90fd5b63e6c4247b60e01b5f5260045ffd5b346100de575f3660031901126100de5760206040515f8152f35b346100de5760403660031901126100de576102546108fb565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346100de5760203660031901126100de576001600160a01b036102a4610911565b165f52600560205260405f2080549067ffffffffffffffff82116103b057604051916102d660208260051b01846109a4565b8083526020830180925f5260205f205f915b838310610360578486604051918291602083019060208452518091526040830191905f5b81811061031a575050500390f35b91935091602060a060019260808751805183528481015185840152604081015160408401526060810151606084015201511515608082015201940191019184939261030c565b6005602060019260405161037381610988565b855481528486015483820152600286015460408201526003860154606082015260ff600487015416151560808201528152019201920191906102e8565b634e487b7160e01b5f52604160045260245ffd5b346100de5760403660031901126100de576004356024356103e36109de565b8115610592576003810361055a57506002546276a7005b6040516323b872dd60e01b8152336004820152306024820152604481018490526020816064815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610207575f9161053b575b50156101c957335f52600560205260405f2060405161047981610988565b8481526020810142815260408201848152606083019086825260808401945f86528054680100000000000000008110156103b0576104bc91600182018155610927565b93909361052857600494518455516001840155516002830155516003820155019051151560ff80198354169116179055604051928352602083015260408201527fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed60603392a260018055005b634e487b7160e01b5f525f60045260245ffd5b610554915060203d602011610200576101f281836109a4565b8461045b565b6006810361056f575060035462ed4e006103fa565b600c03610583576004546301e133806103fa565b63506604d760e01b5f5260045ffd5b631f2a200560e01b5f5260045ffd5b346100de5760603660031901126100de576044356024356004356105c3610a34565b80600254036105f2575b5080600354036105e9575b5080600454036105e457005b600455005b600355816105d8565b600255826105cd565b346100de575f3660031901126100de576020600354604051908152f35b346100de5760403660031901126100de576106316108fb565b336001600160a01b0382160361064d5761014190600435610b63565b63334bd91960e11b5f5260045ffd5b346100de5760403660031901126100de5761014160043561067b6108fb565b90610694610137825f525f602052600160405f20015490565b610adb565b346100de5760203660031901126100de576004356106b56109de565b335f52600560205260405f20805482101561058357816106d491610927565b506004810190815460ff8116610867576001820154916106f960028201548094610954565b42106108585760019364496cebb8006107246107349561071f6003865496015486610975565b610975565b0494859360ff1916179055610954565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa80156102075783915f91610823575b50106101c95760405163a9059cbb60e01b81523360048201526024810192909252602090829060449082905f905af1908115610207575f91610804575b50156101c95760405191825260208201527f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc660403392a260018055005b61081d915060203d602011610200576101f281836109a4565b836107c7565b9150506020813d602011610850575b8161083f602093836109a4565b810103126100de578290518661078a565b3d9150610832565b63fea0455760e01b5f5260045ffd5b636507689f60e01b5f5260045ffd5b346100de5760203660031901126100de5760206108a06004355f525f602052600160405f20015490565b604051908152f35b346100de5760203660031901126100de576004359063ffffffff60e01b82168092036100de57602091637965db0b60e01b81149081156108ea575b5015158152f35b6301ffc9a760e01b149050836108e3565b602435906001600160a01b03821682036100de57565b600435906001600160a01b03821682036100de57565b8054821015610940575f52600560205f20910201905f90565b634e487b7160e01b5f52603260045260245ffd5b9190820180921161096157565b634e487b7160e01b5f52601160045260245ffd5b8181029291811591840414171561096157565b60a0810190811067ffffffffffffffff8211176103b057604052565b90601f8019910116810190811067ffffffffffffffff8211176103b057604052565b908160209103126100de575180151581036100de5790565b6002600154146109ef576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff1615610a6c57565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b5f8181526020818152604080832033845290915290205460ff1615610ac55750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610b5d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610b5d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a460019056fea2646970667358221220e90286aa4fcce98d1e476004d5a2805b6bad50e2f156c49fc17e42dd9c1d5d9164736f6c634300081c00337d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec",
							"opcodes": "PUSH1 0xA0 PUSH1 0x1F PUSH2 0xDD0 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xC3 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xBF JUMPI PUSH2 0x4D PUSH1 0x20 PUSH2 0x46 DUP4 PUSH2 0xD7 JUMP JUMPDEST SWAP3 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH2 0x1F4 PUSH1 0x2 SSTORE PUSH2 0x3E8 PUSH1 0x3 SSTORE PUSH2 0x5DC PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0xB0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xB0 JUMPI PUSH2 0x90 SWAP2 PUSH1 0x80 MSTORE PUSH2 0xEB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC19 SWAP1 DUP2 PUSH2 0x197 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x423 ADD MSTORE PUSH2 0x749 ADD MSTORE RETURN JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xBF JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0xDB0 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x191 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0xDB0 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x8A8 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0x5BF42FB4 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x765EF4CC EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x7BA6F458 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB37FD190 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xF09823C3 EQ PUSH2 0xE2 JUMPI PUSH4 0xFBCACCA7 EQ PUSH2 0xC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x141 PUSH1 0x4 CALLDATALOAD PUSH2 0x11E PUSH2 0x8FB JUMP JUMPDEST SWAP1 PUSH2 0x13C PUSH2 0x137 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xB63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x15C PUSH2 0x911 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0xDE JUMPI PUSH2 0x179 PUSH2 0xA34 JUMP JUMPDEST ISZERO PUSH2 0x212 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x1D8 JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI STOP JUMPDEST PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH2 0x1FA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI JUMPDEST PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x9C6 JUMP JUMPDEST DUP2 PUSH2 0x1C1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x254 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A4 PUSH2 0x911 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2D6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x9A4 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP1 SWAP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x360 JUMPI DUP5 DUP7 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x31A JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x1 SWAP3 PUSH1 0x80 DUP8 MLOAD DUP1 MLOAD DUP4 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x373 DUP2 PUSH2 0x988 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP8 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x3E3 PUSH2 0x9DE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x592 JUMPI PUSH1 0x3 DUP2 SUB PUSH2 0x55A JUMPI POP PUSH1 0x2 SLOAD PUSH3 0x76A700 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x53B JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI CALLER PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x479 DUP2 PUSH2 0x988 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x40 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 DUP7 DUP3 MSTORE PUSH1 0x80 DUP5 ADD SWAP5 PUSH0 DUP7 MSTORE DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x4BC SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x927 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 PUSH2 0x528 JUMPI PUSH1 0x4 SWAP5 MLOAD DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD PUSH1 0x2 DUP4 ADD SSTORE MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x554 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP5 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x6 DUP2 SUB PUSH2 0x56F JUMPI POP PUSH1 0x3 SLOAD PUSH3 0xED4E00 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0xC SUB PUSH2 0x583 JUMPI PUSH1 0x4 SLOAD PUSH4 0x1E13380 PUSH2 0x3FA JUMP JUMPDEST PUSH4 0x506604D7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x1F2A2005 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x5C3 PUSH2 0xA34 JUMP JUMPDEST DUP1 PUSH1 0x2 SLOAD SUB PUSH2 0x5F2 JUMPI JUMPDEST POP DUP1 PUSH1 0x3 SLOAD SUB PUSH2 0x5E9 JUMPI JUMPDEST POP DUP1 PUSH1 0x4 SLOAD SUB PUSH2 0x5E4 JUMPI STOP JUMPDEST PUSH1 0x4 SSTORE STOP JUMPDEST PUSH1 0x3 SSTORE DUP2 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP3 PUSH2 0x5CD JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x631 PUSH2 0x8FB JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x64D JUMPI PUSH2 0x141 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xB63 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x141 PUSH1 0x4 CALLDATALOAD PUSH2 0x67B PUSH2 0x8FB JUMP JUMPDEST SWAP1 PUSH2 0x694 PUSH2 0x137 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6B5 PUSH2 0x9DE JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x583 JUMPI DUP2 PUSH2 0x6D4 SWAP2 PUSH2 0x927 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD SWAP1 DUP2 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x867 JUMPI PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x6F9 PUSH1 0x2 DUP3 ADD SLOAD DUP1 SWAP5 PUSH2 0x954 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x858 JUMPI PUSH1 0x1 SWAP4 PUSH5 0x496CEBB800 PUSH2 0x724 PUSH2 0x734 SWAP6 PUSH2 0x71F PUSH1 0x3 DUP7 SLOAD SWAP7 ADD SLOAD DUP7 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST DIV SWAP5 DUP6 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x207 JUMPI DUP4 SWAP2 PUSH0 SWAP2 PUSH2 0x823 JUMPI JUMPDEST POP LT PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x804 JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x81D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP4 PUSH2 0x7C7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x850 JUMPI JUMPDEST DUP2 PUSH2 0x83F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xDE JUMPI DUP3 SWAP1 MLOAD DUP7 PUSH2 0x78A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x832 JUMP JUMPDEST PUSH4 0xFEA04557 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x6507689F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH2 0x8A0 PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xDE JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x8EA JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x940 JUMPI PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x961 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x961 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3B0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3B0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xDE JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xDE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x9EF JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAC5 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB5D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB5D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 MUL DUP7 0xAA 0x4F 0xCC 0xE9 DUP14 0x1E SELFBALANCE PUSH1 0x4 0xD5 LOG2 DUP1 JUMPDEST PUSH12 0xAD50E2F156C49FC17E42DD9C SAR TSTORE SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER PUSH30 0x7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292 0xEC ",
							"sourceMap": "807:4882:7:-:0;;;;;;;;;;-1:-1:-1;;807:4882:7;;;;-1:-1:-1;;;;;807:4882:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1716:1:2;807:4882:7;;1262:3;;807:4882;1299:4;;807:4882;1338:4;;807:4882;-1:-1:-1;;;;;807:4882:7;;;;1909:25;;1905:54;;-1:-1:-1;;;;;807:4882:7;;1973:20;1969:49;;2071:30;2029:32;;;2071:30;:::i;:::-;;807:4882;;;;;;;;2029:32;807:4882;;;;;;;;;;;1969:49;1943:16;;;-1:-1:-1;2002:16:7;1338:4;-1:-1:-1;2002:16:7;807:4882;-1:-1:-1;807:4882:7;;;;;;-1:-1:-1;807:4882:7;;;;;-1:-1:-1;807:4882:7;;;;-1:-1:-1;;;;;807:4882:7;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;807:4882:7;;;;;;-1:-1:-1;;;;;;;;;;;807:4882:7;;;;;;;;;;-1:-1:-1;;;;;807:4882:7;;;;;-1:-1:-1;;;;;;;;;;;807:4882:7;;;;;;;-1:-1:-1;;807:4882:7;;;;;735:10:4;;807:4882:7;908:23;;6370:40:0;;807:4882:7;6370:40:0;6347:4;6424:11;:::o;6272:217::-;6466:12;807:4882:7;6466:12:0;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 2321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_9332": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_9335": {
									"entryPoint": 2440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 2723,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_9334": {
									"entryPoint": 2612,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_getRoleAdmin": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 2779,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 2526,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revokeRole": {
									"entryPoint": 2915,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_array_index_access_struct_StakeInfo__dyn_ptr": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"617": [
									{
										"length": 32,
										"start": 1059
									},
									{
										"length": 32,
										"start": 1865
									}
								]
							},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146108a857508063248a9ca3146108765780632e1a7d4d146106995780632f2ff15d1461065c57806336568abe146106185780635bf42fb4146105fb578063765ef4cc146105a15780637b0472f0146103c45780637ba6f4581461028357806391d148541461023b578063a217fddf14610221578063b37fd19014610143578063d547741f146100ff578063f09823c3146100e25763fbcacca7146100c1575f80fd5b346100de575f3660031901126100de576020600454604051908152f35b5f80fd5b346100de575f3660031901126100de576020600254604051908152f35b346100de5760403660031901126100de5761014160043561011e6108fb565b9061013c610137825f525f602052600160405f20015490565b610aa3565b610b63565b005b346100de5760603660031901126100de5761015c610911565b604435906001600160a01b0382168083036100de57610179610a34565b156102125760405163a9059cbb60e01b81526001600160a01b039283166004820152602480359082015291602091839160449183915f91165af1908115610207575f916101d8575b50156101c957005b631e9acf1760e31b5f5260045ffd5b6101fa915060203d602011610200575b6101f281836109a4565b8101906109c6565b816101c1565b503d6101e8565b6040513d5f823e3d90fd5b63e6c4247b60e01b5f5260045ffd5b346100de575f3660031901126100de5760206040515f8152f35b346100de5760403660031901126100de576102546108fb565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346100de5760203660031901126100de576001600160a01b036102a4610911565b165f52600560205260405f2080549067ffffffffffffffff82116103b057604051916102d660208260051b01846109a4565b8083526020830180925f5260205f205f915b838310610360578486604051918291602083019060208452518091526040830191905f5b81811061031a575050500390f35b91935091602060a060019260808751805183528481015185840152604081015160408401526060810151606084015201511515608082015201940191019184939261030c565b6005602060019260405161037381610988565b855481528486015483820152600286015460408201526003860154606082015260ff600487015416151560808201528152019201920191906102e8565b634e487b7160e01b5f52604160045260245ffd5b346100de5760403660031901126100de576004356024356103e36109de565b8115610592576003810361055a57506002546276a7005b6040516323b872dd60e01b8152336004820152306024820152604481018490526020816064815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610207575f9161053b575b50156101c957335f52600560205260405f2060405161047981610988565b8481526020810142815260408201848152606083019086825260808401945f86528054680100000000000000008110156103b0576104bc91600182018155610927565b93909361052857600494518455516001840155516002830155516003820155019051151560ff80198354169116179055604051928352602083015260408201527fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed60603392a260018055005b634e487b7160e01b5f525f60045260245ffd5b610554915060203d602011610200576101f281836109a4565b8461045b565b6006810361056f575060035462ed4e006103fa565b600c03610583576004546301e133806103fa565b63506604d760e01b5f5260045ffd5b631f2a200560e01b5f5260045ffd5b346100de5760603660031901126100de576044356024356004356105c3610a34565b80600254036105f2575b5080600354036105e9575b5080600454036105e457005b600455005b600355816105d8565b600255826105cd565b346100de575f3660031901126100de576020600354604051908152f35b346100de5760403660031901126100de576106316108fb565b336001600160a01b0382160361064d5761014190600435610b63565b63334bd91960e11b5f5260045ffd5b346100de5760403660031901126100de5761014160043561067b6108fb565b90610694610137825f525f602052600160405f20015490565b610adb565b346100de5760203660031901126100de576004356106b56109de565b335f52600560205260405f20805482101561058357816106d491610927565b506004810190815460ff8116610867576001820154916106f960028201548094610954565b42106108585760019364496cebb8006107246107349561071f6003865496015486610975565b610975565b0494859360ff1916179055610954565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa80156102075783915f91610823575b50106101c95760405163a9059cbb60e01b81523360048201526024810192909252602090829060449082905f905af1908115610207575f91610804575b50156101c95760405191825260208201527f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc660403392a260018055005b61081d915060203d602011610200576101f281836109a4565b836107c7565b9150506020813d602011610850575b8161083f602093836109a4565b810103126100de578290518661078a565b3d9150610832565b63fea0455760e01b5f5260045ffd5b636507689f60e01b5f5260045ffd5b346100de5760203660031901126100de5760206108a06004355f525f602052600160405f20015490565b604051908152f35b346100de5760203660031901126100de576004359063ffffffff60e01b82168092036100de57602091637965db0b60e01b81149081156108ea575b5015158152f35b6301ffc9a760e01b149050836108e3565b602435906001600160a01b03821682036100de57565b600435906001600160a01b03821682036100de57565b8054821015610940575f52600560205f20910201905f90565b634e487b7160e01b5f52603260045260245ffd5b9190820180921161096157565b634e487b7160e01b5f52601160045260245ffd5b8181029291811591840414171561096157565b60a0810190811067ffffffffffffffff8211176103b057604052565b90601f8019910116810190811067ffffffffffffffff8211176103b057604052565b908160209103126100de575180151581036100de5790565b6002600154146109ef576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff1615610a6c57565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b5f8181526020818152604080832033845290915290205460ff1615610ac55750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16610b5d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615610b5d575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a460019056fea2646970667358221220e90286aa4fcce98d1e476004d5a2805b6bad50e2f156c49fc17e42dd9c1d5d9164736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x8A8 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0x5BF42FB4 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x765EF4CC EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x7BA6F458 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB37FD190 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xF09823C3 EQ PUSH2 0xE2 JUMPI PUSH4 0xFBCACCA7 EQ PUSH2 0xC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x141 PUSH1 0x4 CALLDATALOAD PUSH2 0x11E PUSH2 0x8FB JUMP JUMPDEST SWAP1 PUSH2 0x13C PUSH2 0x137 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xB63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x15C PUSH2 0x911 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0xDE JUMPI PUSH2 0x179 PUSH2 0xA34 JUMP JUMPDEST ISZERO PUSH2 0x212 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x1D8 JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI STOP JUMPDEST PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH2 0x1FA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI JUMPDEST PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x9C6 JUMP JUMPDEST DUP2 PUSH2 0x1C1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x254 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A4 PUSH2 0x911 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2D6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x9A4 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP1 SWAP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x360 JUMPI DUP5 DUP7 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x31A JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x1 SWAP3 PUSH1 0x80 DUP8 MLOAD DUP1 MLOAD DUP4 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x373 DUP2 PUSH2 0x988 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP8 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x3E3 PUSH2 0x9DE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x592 JUMPI PUSH1 0x3 DUP2 SUB PUSH2 0x55A JUMPI POP PUSH1 0x2 SLOAD PUSH3 0x76A700 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x53B JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI CALLER PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x479 DUP2 PUSH2 0x988 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x40 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 DUP7 DUP3 MSTORE PUSH1 0x80 DUP5 ADD SWAP5 PUSH0 DUP7 MSTORE DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x4BC SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x927 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 PUSH2 0x528 JUMPI PUSH1 0x4 SWAP5 MLOAD DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD PUSH1 0x2 DUP4 ADD SSTORE MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x554 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP5 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x6 DUP2 SUB PUSH2 0x56F JUMPI POP PUSH1 0x3 SLOAD PUSH3 0xED4E00 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0xC SUB PUSH2 0x583 JUMPI PUSH1 0x4 SLOAD PUSH4 0x1E13380 PUSH2 0x3FA JUMP JUMPDEST PUSH4 0x506604D7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x1F2A2005 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x5C3 PUSH2 0xA34 JUMP JUMPDEST DUP1 PUSH1 0x2 SLOAD SUB PUSH2 0x5F2 JUMPI JUMPDEST POP DUP1 PUSH1 0x3 SLOAD SUB PUSH2 0x5E9 JUMPI JUMPDEST POP DUP1 PUSH1 0x4 SLOAD SUB PUSH2 0x5E4 JUMPI STOP JUMPDEST PUSH1 0x4 SSTORE STOP JUMPDEST PUSH1 0x3 SSTORE DUP2 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP3 PUSH2 0x5CD JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x631 PUSH2 0x8FB JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x64D JUMPI PUSH2 0x141 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xB63 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x141 PUSH1 0x4 CALLDATALOAD PUSH2 0x67B PUSH2 0x8FB JUMP JUMPDEST SWAP1 PUSH2 0x694 PUSH2 0x137 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6B5 PUSH2 0x9DE JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x583 JUMPI DUP2 PUSH2 0x6D4 SWAP2 PUSH2 0x927 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD SWAP1 DUP2 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x867 JUMPI PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x6F9 PUSH1 0x2 DUP3 ADD SLOAD DUP1 SWAP5 PUSH2 0x954 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x858 JUMPI PUSH1 0x1 SWAP4 PUSH5 0x496CEBB800 PUSH2 0x724 PUSH2 0x734 SWAP6 PUSH2 0x71F PUSH1 0x3 DUP7 SLOAD SWAP7 ADD SLOAD DUP7 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST DIV SWAP5 DUP6 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x207 JUMPI DUP4 SWAP2 PUSH0 SWAP2 PUSH2 0x823 JUMPI JUMPDEST POP LT PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x207 JUMPI PUSH0 SWAP2 PUSH2 0x804 JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0x81D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x200 JUMPI PUSH2 0x1F2 DUP2 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP4 PUSH2 0x7C7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x850 JUMPI JUMPDEST DUP2 PUSH2 0x83F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9A4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xDE JUMPI DUP3 SWAP1 MLOAD DUP7 PUSH2 0x78A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x832 JUMP JUMPDEST PUSH4 0xFEA04557 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x6507689F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH2 0x8A0 PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xDE JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x8EA JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x940 JUMPI PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x961 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x961 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3B0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3B0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xDE JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xDE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x9EF JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAC5 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB5D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB5D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 MUL DUP7 0xAA 0x4F 0xCC 0xE9 DUP14 0x1E SELFBALANCE PUSH1 0x4 0xD5 LOG2 DUP1 JUMPDEST PUSH12 0xAD50E2F156C49FC17E42DD9C SAR TSTORE SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "807:4882:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:4882:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:4882:7;;;;;1234:31;807:4882;;;;;;;;;;;;;-1:-1:-1;;807:4882:7;;;;4747:26:0;807:4882:7;;;;:::i;:::-;4717:18:0;2475:4;4717:18;;3901:6;807:4882:7;3901:6:0;807:4882:7;;3901:22:0;807:4882:7;3901:6:0;807:4882:7;3901:22:0;807:4882:7;3810:120:0;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;807:4882:7;;;;;;;-1:-1:-1;;807:4882:7;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;807:4882:7;;;;;;;2475:4:0;;:::i;:::-;5327:16:7;5323:45;;807:4882;;-1:-1:-1;;;5393:41:7;;-1:-1:-1;;;;;807:4882:7;;;;5393:41;;807:4882;;;;;;;;;;;;;;;;;-1:-1:-1;;807:4882:7;5393:41;;;;;;;807:4882;5393:41;;;807:4882;5448:8;;5444:42;;807:4882;5444:42;3936:21;;;807:4882;5465:21;807:4882;;5465:21;5393:41;;;;807:4882;5393:41;807:4882;5393:41;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;807:4882;;;;;;;;;5323:45;5352:16;;;807:4882;5352:16;807:4882;;5352:16;807:4882;;;;;;-1:-1:-1;;807:4882:7;;;;;;;;;;;;;;;;;-1:-1:-1;;807:4882:7;;;;;;:::i;:::-;;;;;;;;;;;2954:29:0;807:4882:7;;;;;;-1:-1:-1;807:4882:7;;;;;;-1:-1:-1;807:4882:7;;;;;;;;;;;;;;;;;-1:-1:-1;;807:4882:7;;;;-1:-1:-1;;;;;807:4882:7;;:::i;:::-;;;;5667:7;807:4882;;;;;;;;;;;;;;;;;;;5667:7;807:4882;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5667:7;807:4882;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:4882:7;;;;;;;;2227:103:2;;:::i;:::-;2312:11:7;;2308:36;;4333:1;4319:15;;4333:1;;-1:-1:-1;4402:10:7;807:4882;1064:7;4315:396;807:4882;;-1:-1:-1;;;2517:58:7;;2541:10;807:4882;2517:58;;807:4882;2561:4;807:4882;;;;;;;;;;;;2517:58;807:4882;-1:-1:-1;2517:10:7;-1:-1:-1;;;;;807:4882:7;2517:58;;;;;;;807:4882;2517:58;;;4315:396;2589:8;;2585:42;;2541:10;807:4882;;2638:7;807:4882;;;;;;;;;;:::i;:::-;;;;;2663:217;;2731:15;807:4882;;;2663:217;;807:4882;;;;2663:217;;807:4882;;;;2663:217;;;807:4882;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4333:1;807:4882;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:49;807:4882;2541:10;2897:49;;807:4882;;;;;;;;;;;;;;;;2517:58;;;;807:4882;2517:58;807:4882;2517:58;;;;;;;:::i;:::-;;;;4315:396;4447:1;4433:15;;4447:1;;-1:-1:-1;4333:1:7;807:4882;1119:8;4315:396;;4429:282;4561:2;4547:16;4561:2;;807:4882;;1176:8;4315:396;;4543:168;3256:19;;;807:4882;4681:19;807:4882;;4681:19;2308:36;2332:12;;;807:4882;2332:12;807:4882;;2332:12;807:4882;;;;;;-1:-1:-1;;807:4882:7;;;;;;;;;;2475:4:0;;:::i;:::-;807:4882:7;4901:10;807:4882;4901:19;4897:68;;807:4882;;;4978:10;807:4882;4978:19;4974:68;;807:4882;;;;;5055:21;5051:72;;807:4882;5051:72;807:4882;;;4974:68;4978:10;807:4882;4974:68;;;4897;4901:10;807:4882;4897:68;;;807:4882;;;;;;-1:-1:-1;;807:4882:7;;;;;1271:32;807:4882;;;;;;;;;;;;;-1:-1:-1;;807:4882:7;;;;;;:::i;:::-;735:10:4;-1:-1:-1;;;;;807:4882:7;;5421:34:0;5417:102;;5529:37;807:4882:7;;;5529:37:0;:::i;5417:102::-;5478:30;;;807:4882:7;5478:30:0;807:4882:7;;5478:30:0;807:4882:7;;;;;;-1:-1:-1;;807:4882:7;;;;4330:25:0;807:4882:7;;;;:::i;:::-;4300:18:0;2475:4;4300:18;;3901:6;807:4882:7;3901:6:0;807:4882:7;;3901:22:0;807:4882:7;3901:6:0;807:4882:7;3901:22:0;807:4882:7;3810:120:0;;2475:4;4330:25;:::i;807:4882:7:-;;;;;;-1:-1:-1;;807:4882:7;;;;;;2227:103:2;;:::i;:::-;3154:10:7;807:4882;;3146:7;807:4882;;;;;;;3216:31;;;3212:63;;3316:22;;;;:::i;:::-;3352:19;807:4882;3352:19;;807:4882;;;;;;3348:50;;807:4882;3430:24;;807:4882;3457:22;3430:49;3457:22;;;807:4882;3430:49;;;:::i;:::-;3493:15;:28;3489:54;;807:4882;;3757:16;3714:38;3845:18;807:4882;3714:25;3726:13;807:4882;;3726:13;;807:4882;3714:25;;:::i;:::-;:38;:::i;:::-;807:4882;;;;;;;;;;3845:18;:::i;:::-;807:4882;;-1:-1:-1;;;3877:35:7;;3906:4;807:4882;3877:35;;807:4882;3877:10;-1:-1:-1;;;;;807:4882:7;;;;3877:35;807:4882;;3877:35;;;;;;;;807:4882;3877:35;;;807:4882;3877:50;;3873:84;;807:4882;;-1:-1:-1;;;3983:45:7;;3154:10;807:4882;3983:45;;807:4882;;;;;;;;;;;;;;;;-1:-1:-1;;3983:45:7;;;;;;;807:4882;3983:45;;;807:4882;4042:8;;4038:42;;807:4882;;;;;;;;;4096:41;807:4882;3154:10;4096:41;;807:4882;;;;3983:45;;;;807:4882;3983:45;807:4882;3983:45;;;;;;;:::i;:::-;;;;3877:35;;;;807:4882;3877:35;;807:4882;3877:35;;;;;;807:4882;3877:35;;;:::i;:::-;;;807:4882;;;;;;;3877:35;;;;;;-1:-1:-1;3877:35:7;;3489:54;3530:13;;;807:4882;3530:13;807:4882;;3530:13;3348:50;3380:18;;;807:4882;3380:18;807:4882;;3380:18;807:4882;;;;;;-1:-1:-1;;807:4882:7;;;;;;;;3901:6:0;807:4882:7;3901:6:0;807:4882:7;;3901:22:0;807:4882:7;3901:6:0;807:4882:7;3901:22:0;807:4882:7;3810:120:0;;807:4882:7;;;;;;;;;;;;;-1:-1:-1;;807:4882:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:0;;;:87;;;;807:4882:7;;;;;;;2673:87:0;-1:-1:-1;;;862:40:5;;-1:-1:-1;2673:87:0;;;807:4882:7;;;;-1:-1:-1;;;;;807:4882:7;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;807:4882:7;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;807:4882:7;;;-1:-1:-1;807:4882:7;;;;;-1:-1:-1;807:4882:7;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;2336:287:2:-;1759:1;2468:7;807:4882:7;2468:19:2;1759:1;;;2468:7;807:4882:7;2336:287:2:o;1759:1::-;807:4882:7;;-1:-1:-1;;;1759:1:2;;;;;;;;;;;807:4882:7;1759:1:2;807:4882:7;;;1759:1:2;;;;3199:103:0;735:10:4;2954:6:0;807:4882:7;;;;;;;;;;;;3519:23:0;3515:108;;3199:103::o;3515:108::-;3565:47;;;2954:6;3565:47;735:10:4;3565:47:0;807:4882:7;908:23;807:4882;;;2954:6:0;3565:47;3199:103;2954:6;807:4882:7;;;;;;;;;;;735:10:4;807:4882:7;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;2954:6;3565:47;735:10:4;3565:47:0;807:4882:7;;;;2954:6:0;3565:47;6179:316;807:4882:7;;;;;;;;;;;;-1:-1:-1;;;;;807:4882:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;807:4882:7;;;;;;;;;;;;;;;-1:-1:-1;;807:4882:7;;;;;735:10:4;;807:4882:7;;6370:40:0;;807:4882:7;6370:40:0;6347:4;6424:11;:::o;6272:217::-;6466:12;;807:4882:7;6466:12:0;:::o;6730:317::-;807:4882:7;;;;;;;;;;;;-1:-1:-1;;;;;807:4882:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;807:4882:7;;;;;;;;;;;;;;;-1:-1:-1;;807:4882:7;;;735:10:4;;807:4882:7;;6922:40:0;;807:4882:7;6922:40:0;807:4882:7;6976:11:0;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "619400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "372",
								"apy12Months()": "2561",
								"apy3Months()": "2542",
								"apy6Months()": "2366",
								"getRoleAdmin(bytes32)": "2363",
								"getStakes(address)": "infinite",
								"grantRole(bytes32,address)": "33333",
								"hasRole(bytes32,address)": "2682",
								"renounceRole(bytes32,address)": "28923",
								"rescueTokens(address,uint256,address)": "infinite",
								"revokeRole(bytes32,address)": "33528",
								"setAPYs(uint256,uint256,uint256)": "75208",
								"stake(uint256,uint256)": "infinite",
								"supportsInterface(bytes4)": "270",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_getLockInfo(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 5689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 5689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1262,
									"end": 1265,
									"name": "PUSH",
									"source": 7,
									"value": "1F4"
								},
								{
									"begin": 1262,
									"end": 1265,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1303,
									"name": "PUSH",
									"source": 7,
									"value": "3E8"
								},
								{
									"begin": 1299,
									"end": 1303,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1338,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1934,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1905,
									"end": 1959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1905,
									"end": 1959,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 1993,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1969,
									"end": 2018,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1969,
									"end": 2018,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2071,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2029,
									"end": 2061,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2029,
									"end": 2061,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2029,
									"end": 2061,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2071,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2071,
									"end": 2101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2071,
									"end": 2101,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2071,
									"end": 2101,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2071,
									"end": 2101,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 2029,
									"end": 2061,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "617"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 1969,
									"end": 2018,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1969,
									"end": 2018,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 1959,
									"name": "PUSH",
									"source": 7,
									"value": "E6C4247B"
								},
								{
									"begin": 1943,
									"end": 1959,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1943,
									"end": 1959,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2002,
									"end": 2018,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2002,
									"end": 2018,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 908,
									"end": 931,
									"name": "PUSH",
									"source": 7,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 908,
									"end": 931,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 807,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e90286aa4fcce98d1e476004d5a2805b6bad50e2f156c49fc17e42dd9c1d5d9164736f6c634300081c0033",
									".code": [
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A7"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "248A9CA3"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "2F2FF15D"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "36568ABE"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "5BF42FB4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "765EF4CC"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "7B0472F0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "7BA6F458"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "91D14854"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "A217FDDF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "B37FD190"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "D547741F"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "F09823C3"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FBCACCA7"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5327,
											"end": 5343,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 5323,
											"end": 5368,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5456,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5456,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5444,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5444,
											"end": 5486,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5444,
											"end": 5486,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5444,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3957,
											"name": "PUSH",
											"source": 7,
											"value": "1E9ACF17"
										},
										{
											"begin": 3936,
											"end": 3957,
											"name": "PUSH",
											"source": 7,
											"value": "E3"
										},
										{
											"begin": 3936,
											"end": 3957,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5465,
											"end": 5486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5465,
											"end": 5486,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5393,
											"end": 5434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5393,
											"end": 5434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 5393,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5368,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 5323,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5352,
											"end": 5368,
											"name": "PUSH",
											"source": 7,
											"value": "E6C4247B"
										},
										{
											"begin": 5352,
											"end": 5368,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5352,
											"end": 5368,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5368,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5368,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5674,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5674,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5674,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2323,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2323,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2308,
											"end": 2344,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4334,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4319,
											"end": 4334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4334,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4333,
											"end": 4334,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4402,
											"end": 4412,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "76A700"
										},
										{
											"begin": 4315,
											"end": 4711,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4315,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2551,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2565,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2527,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4711,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 4315,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2585,
											"end": 2627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2551,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2638,
											"end": 2645,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2880,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2746,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2663,
											"end": 2880,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2880,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2663,
											"end": 2880,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "10000000000000000"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4334,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "B4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2541,
											"end": 2551,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2946,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2946,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2517,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2517,
											"end": 2575,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4711,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4315,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4433,
											"end": 4448,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4448,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4333,
											"end": 4334,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1127,
											"name": "PUSH",
											"source": 7,
											"value": "ED4E00"
										},
										{
											"begin": 4315,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4315,
											"end": 4711,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4711,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4429,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4563,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 4547,
											"end": 4563,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4561,
											"end": 4563,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "PUSH",
											"source": 7,
											"value": "1E13380"
										},
										{
											"begin": 4315,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4315,
											"end": 4711,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4711,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4543,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3275,
											"name": "PUSH",
											"source": 7,
											"value": "506604D7"
										},
										{
											"begin": 3256,
											"end": 3275,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3256,
											"end": 3275,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4700,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2344,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2308,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "PUSH",
											"source": 7,
											"value": "1F2A2005"
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4911,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4920,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 4897,
											"end": 4965,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 4988,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 4997,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4974,
											"end": 5042,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5076,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5051,
											"end": 5123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5123,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5051,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5042,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4974,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 4988,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5042,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4974,
											"end": 5042,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4965,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 4897,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4911,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 4897,
											"end": 4965,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1303,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "334BD919"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3164,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3153,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3247,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3247,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3247,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3212,
											"end": 3275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3316,
											"end": 3338,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3316,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3338,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3316,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3352,
											"end": 3371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3348,
											"end": 3398,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3430,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3457,
											"end": 3479,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3457,
											"end": 3479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3430,
											"end": 3479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3430,
											"end": 3479,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3430,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3430,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3430,
											"end": 3479,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3430,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3493,
											"end": 3508,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3493,
											"end": 3521,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3489,
											"end": 3543,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3773,
											"name": "PUSH",
											"source": 7,
											"value": "496CEBB800"
										},
										{
											"begin": 3714,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3739,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3714,
											"end": 3739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3739,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3714,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3714,
											"end": 3752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3752,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3714,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3845,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3910,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3887,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3927,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3873,
											"end": 3957,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3164,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4050,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4038,
											"end": 4080,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4137,
											"name": "PUSH",
											"source": 7,
											"value": "92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3164,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4137,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4137,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3983,
											"end": 4028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3877,
											"end": 3912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3543,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3489,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "PUSH",
											"source": 7,
											"value": "FEA04557"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3398,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3348,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "6507689F"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 862,
											"end": 902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 908,
											"end": 931,
											"name": "PUSH",
											"source": 7,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 807,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								},
								"27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048": "7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/WallyStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"apy12Months()": "fbcacca7",
							"apy3Months()": "f09823c3",
							"apy6Months()": "5bf42fb4",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getStakes(address)": "7ba6f458",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"rescueTokens(address,uint256,address)": "b37fd190",
							"revokeRole(bytes32,address)": "d547741f",
							"setAPYs(uint256,uint256,uint256)": "765ef4cc",
							"stake(uint256,uint256)": "7b0472f0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 389,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 629,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "apy3Months",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 632,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "apy6Months",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 635,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "apy12Months",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 652,
								"contract": "contracts/WallyStaking.sol:WallyStaking",
								"label": "_stakes",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_array(t_struct(StakeInfo)646_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(StakeInfo)646_storage)dyn_storage": {
								"base": "t_struct(StakeInfo)646_storage",
								"encoding": "dynamic_array",
								"label": "struct WallyStaking.StakeInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_struct(StakeInfo)646_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct WallyStaking.StakeInfo[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(StakeInfo)646_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(StakeInfo)646_storage": {
								"encoding": "inplace",
								"label": "struct WallyStaking.StakeInfo",
								"members": [
									{
										"astId": 637,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 639,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "startTimestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 641,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "lockDuration",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 643,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "apy",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 645,
										"contract": "contracts/WallyStaking.sol:WallyStaking",
										"label": "withdrawn",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							551
						],
						"ERC165": [
							575
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 552,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 551,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 576,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 575,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 551,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 575,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								575,
								587,
								378,
								551
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										574
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 574,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							443
						]
					},
					"id": 444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 443,
							"linearizedBaseContracts": [
								443
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 384,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 387,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 386,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 389,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 388,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 443,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 400,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 403,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 404,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 408,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 413,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 418,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 419,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 443,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 443,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 438,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 436,
												"id": 440,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 443,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 444,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							521
						]
					},
					"id": 522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 445,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 446,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 521,
							"linearizedBaseContracts": [
								521
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 455,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 464,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 521,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 521,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 521,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 521,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 521,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 521,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 522,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								455,
								464
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							551
						]
					},
					"id": 552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 523,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 524,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 529,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 528,
												"id": 531,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 551,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 538,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 537,
												"id": 540,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 551,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 546,
												"id": 548,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 551,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 552,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							575
						],
						"IERC165": [
							587
						]
					},
					"id": 576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 555,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 576,
							"sourceUnit": 588,
							"src": "140:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 554,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 587,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 557,
										"name": "IERC165",
										"nameLocations": [
											"688:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 587,
										"src": "688:7:5"
									},
									"id": 558,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 556,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 575,
							"linearizedBaseContracts": [
								575,
								587
							],
							"name": "ERC165",
							"nameLocation": "678:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										586
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "845:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 566,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "862:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 568,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "882:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$587_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$587_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 567,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$587",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 565,
												"id": 572,
												"nodeType": "Return",
												"src": "855:47:5"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "790:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 560,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:5"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "839:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:5"
									},
									"scope": 575,
									"src": "763:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 576,
							"src": "660:251:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							587
						]
					},
					"id": 588,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 578,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 587,
							"linearizedBaseContracts": [
								587
							],
							"name": "IERC165",
							"nameLocation": "432:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "818:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 580,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "861:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:6"
									},
									"scope": 587,
									"src": "791:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 588,
							"src": "422:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:6"
				},
				"id": 6
			},
			"contracts/WallyStaking.sol": {
				"ast": {
					"absolutePath": "contracts/WallyStaking.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"AlreadyWithdrawn": [
							598
						],
						"Context": [
							551
						],
						"ERC165": [
							575
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							521
						],
						"InsufficientBalance": [
							602
						],
						"InvalidAddress": [
							604
						],
						"InvalidLockChoice": [
							596
						],
						"LockNotOver": [
							600
						],
						"ReentrancyGuard": [
							443
						],
						"WallyStaking": [
							1055
						],
						"ZeroAmount": [
							594
						]
					},
					"id": 1056,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 589,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1056,
							"sourceUnit": 296,
							"src": "57:58:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 591,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1056,
							"sourceUnit": 444,
							"src": "116:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 592,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1056,
							"sourceUnit": 522,
							"src": "179:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "1f2a2005",
							"id": 594,
							"name": "ZeroAmount",
							"nameLocation": "369:10:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 593,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "379:2:7"
							},
							"src": "363:19:7"
						},
						{
							"errorSelector": "506604d7",
							"id": 596,
							"name": "InvalidLockChoice",
							"nameLocation": "389:17:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 595,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "406:2:7"
							},
							"src": "383:26:7"
						},
						{
							"errorSelector": "6507689f",
							"id": 598,
							"name": "AlreadyWithdrawn",
							"nameLocation": "416:16:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 597,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "432:2:7"
							},
							"src": "410:25:7"
						},
						{
							"errorSelector": "fea04557",
							"id": 600,
							"name": "LockNotOver",
							"nameLocation": "442:11:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 599,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "453:2:7"
							},
							"src": "436:20:7"
						},
						{
							"errorSelector": "f4d678b8",
							"id": 602,
							"name": "InsufficientBalance",
							"nameLocation": "463:19:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 601,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "482:2:7"
							},
							"src": "457:28:7"
						},
						{
							"errorSelector": "e6c4247b",
							"id": 604,
							"name": "InvalidAddress",
							"nameLocation": "492:14:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 603,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "506:2:7"
							},
							"src": "486:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 606,
										"name": "AccessControl",
										"nameLocations": [
											"832:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "832:13:7"
									},
									"id": 607,
									"nodeType": "InheritanceSpecifier",
									"src": "832:13:7"
								},
								{
									"baseName": {
										"id": 608,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"847:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 443,
										"src": "847:15:7"
									},
									"id": 609,
									"nodeType": "InheritanceSpecifier",
									"src": "847:15:7"
								}
							],
							"canonicalName": "WallyStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 605,
								"nodeType": "StructuredDocumentation",
								"src": "511:295:7",
								"text": " @title WallyStaking\n @dev Stake Wally Tokens for fixed durations (3, 6, or 12 months) to earn APY-based rewards.\n Must be funded with enough TWG to cover principal + rewards.\n Addresses many audit items: M001 (fees?), M002 (array length check), M003 (checking transfer), etc."
							},
							"fullyImplemented": true,
							"id": 1055,
							"linearizedBaseContracts": [
								1055,
								443,
								295,
								575,
								587,
								378,
								551
							],
							"name": "WallyStaking",
							"nameLocation": "816:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 614,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "895:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "869:62:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 610,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "869:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 612,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "918:12:7",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 611,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "908:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 613,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "908:23:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 617,
									"mutability": "immutable",
									"name": "wallyToken",
									"nameLocation": "964:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "938:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$521",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 616,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 615,
											"name": "IERC20",
											"nameLocations": [
												"938:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 521,
											"src": "938:6:7"
										},
										"referencedDeclaration": 521,
										"src": "938:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$521",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 620,
									"mutability": "constant",
									"name": "LOCK_3_MONTHS",
									"nameLocation": "1048:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1022:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 618,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1022:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3930",
										"id": 619,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1064:7:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7776000_by_1",
											"typeString": "int_const 7776000"
										},
										"value": "90"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 623,
									"mutability": "constant",
									"name": "LOCK_6_MONTHS",
									"nameLocation": "1103:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1077:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 621,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1077:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 622,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:8:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										},
										"value": "180"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 626,
									"mutability": "constant",
									"name": "LOCK_12_MONTHS",
									"nameLocation": "1159:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1133:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 624,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1133:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 625,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1176:8:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "f09823c3",
									"id": 629,
									"mutability": "mutable",
									"name": "apy3Months",
									"nameLocation": "1249:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1234:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 627,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1234:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 628,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1262:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5bf42fb4",
									"id": 632,
									"mutability": "mutable",
									"name": "apy6Months",
									"nameLocation": "1286:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1271:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 630,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 631,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1299:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbcacca7",
									"id": 635,
									"mutability": "mutable",
									"name": "apy12Months",
									"nameLocation": "1324:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1309:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 633,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1309:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31353030",
										"id": 634,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1338:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1500_by_1",
											"typeString": "int_const 1500"
										},
										"value": "1500"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "WallyStaking.StakeInfo",
									"id": 646,
									"members": [
										{
											"constant": false,
											"id": 637,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1384:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 646,
											"src": "1376:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 636,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1376:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 639,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1408:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 646,
											"src": "1400:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 638,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1400:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 641,
											"mutability": "mutable",
											"name": "lockDuration",
											"nameLocation": "1440:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 646,
											"src": "1432:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 640,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1432:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 643,
											"mutability": "mutable",
											"name": "apy",
											"nameLocation": "1470:3:7",
											"nodeType": "VariableDeclaration",
											"scope": 646,
											"src": "1462:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 642,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 645,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "1504:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 646,
											"src": "1499:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 644,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1499:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "1356:9:7",
									"nodeType": "StructDefinition",
									"scope": 1055,
									"src": "1349:171:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_stakes",
									"nameLocation": "1623:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "1577:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct WallyStaking.StakeInfo[])"
									},
									"typeName": {
										"id": 651,
										"keyName": "user",
										"keyNameLocation": "1593:4:7",
										"keyType": {
											"id": 647,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1585:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1577:36:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct WallyStaking.StakeInfo[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 649,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 648,
													"name": "StakeInfo",
													"nameLocations": [
														"1601:9:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 646,
													"src": "1601:9:7"
												},
												"referencedDeclaration": 646,
												"src": "1601:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
													"typeString": "struct WallyStaking.StakeInfo"
												}
											},
											"id": 650,
											"nodeType": "ArrayTypeName",
											"src": "1601:11:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
												"typeString": "struct WallyStaking.StakeInfo[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "b4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed",
									"id": 662,
									"name": "Staked",
									"nameLocation": "1643:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1650:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1680:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1672:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockDuration",
												"nameLocation": "1696:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1688:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"indexed": false,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "1718:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1710:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:73:7"
									},
									"src": "1637:86:7"
								},
								{
									"anonymous": false,
									"eventSelector": "92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6",
									"id": 670,
									"name": "Withdrawn",
									"nameLocation": "1734:9:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1760:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1744:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1774:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1766:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1794:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1786:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:58:7"
									},
									"src": "1728:74:7"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "1865:243:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 677,
														"name": "_wallyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1909:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1932:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1924:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 678,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1924:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1924:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1909:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "1905:54:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 683,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "1943:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1943:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 685,
													"nodeType": "RevertStatement",
													"src": "1936:23:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 687,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "1973:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1991:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1983:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 688,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1983:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1983:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1973:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 696,
												"nodeType": "IfStatement",
												"src": "1969:49:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 693,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "2002:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2002:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 695,
													"nodeType": "RevertStatement",
													"src": "1995:23:7"
												}
											},
											{
												"expression": {
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 697,
														"name": "wallyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "2029:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$521",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 699,
																"name": "_wallyToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "2049:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 698,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "2042:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$521_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2042:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$521",
															"typeString": "contract IERC20"
														}
													},
													"src": "2029:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$521",
														"typeString": "contract IERC20"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "2029:32:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "2082:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 705,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "2094:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 703,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2071:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2071:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "2071:30:7"
											}
										]
									},
									"id": 709,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "_wallyToken",
												"nameLocation": "1828:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1820:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "1849:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1841:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:37:7"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:0:7"
									},
									"scope": 1055,
									"src": "1808:300:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "2298:655:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 719,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "2312:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2322:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2312:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 725,
												"nodeType": "IfStatement",
												"src": "2308:36:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 722,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "2332:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2332:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 724,
													"nodeType": "RevertStatement",
													"src": "2325:19:7"
												}
											},
											{
												"assignments": [
													727,
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "chosenLock",
														"nameLocation": "2364:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "2356:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2356:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "chosenAPY",
														"nameLocation": "2384:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "2376:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2376:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 733,
												"initialValue": {
													"arguments": [
														{
															"id": 731,
															"name": "lockChoice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "2410:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_getLockInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2397:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2397:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2355:66:7"
											},
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2507:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "2502:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 734,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2502:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 738,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2541:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2545:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2541:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 742,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2561:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WallyStaking_$1055",
																		"typeString": "contract WallyStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WallyStaking_$1055",
																		"typeString": "contract WallyStaking"
																	}
																],
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2553:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 740,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2553:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2553:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "2568:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 736,
															"name": "wallyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "2517:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$521",
																"typeString": "contract IERC20"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2528:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 520,
														"src": "2517:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2502:73:7"
											},
											{
												"condition": {
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2589:8:7",
													"subExpression": {
														"id": 747,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "2590:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "2585:42:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 749,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "2606:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2606:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 751,
													"nodeType": "RevertStatement",
													"src": "2599:28:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 759,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "2695:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 760,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2731:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2737:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2731:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 762,
																	"name": "chosenLock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "2801:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 763,
																	"name": "chosenAPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "2830:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2864:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 758,
																"name": "StakeInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "2663:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_StakeInfo_$646_storage_ptr_$",
																	"typeString": "type(struct WallyStaking.StakeInfo storage pointer)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"2687:6:7",
																"2715:14:7",
																"2787:12:7",
																"2825:3:7",
																"2853:9:7"
															],
															"names": [
																"amount",
																"startTimestamp",
																"lockDuration",
																"apy",
																"withdrawn"
															],
															"nodeType": "FunctionCall",
															"src": "2663:217:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$646_memory_ptr",
																"typeString": "struct WallyStaking.StakeInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_StakeInfo_$646_memory_ptr",
																"typeString": "struct WallyStaking.StakeInfo memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 753,
																"name": "_stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "2638:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct WallyStaking.StakeInfo storage ref[] storage ref)"
																}
															},
															"id": 756,
															"indexExpression": {
																"expression": {
																	"id": 754,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2646:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2650:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2646:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2638:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage",
																"typeString": "struct WallyStaking.StakeInfo storage ref[] storage ref"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2658:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2638:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr_$_t_struct$_StakeInfo_$646_storage_$returns$__$attached_to$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct WallyStaking.StakeInfo storage ref[] storage pointer,struct WallyStaking.StakeInfo storage ref)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2638:243:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "2638:243:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 769,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2904:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2908:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2904:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "2916:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 772,
															"name": "chosenLock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "2924:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 773,
															"name": "chosenAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "2936:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 768,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "2897:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2897:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "EmitStatement",
												"src": "2892:54:7"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "2114:106:7",
										"text": " @dev Stake a specific `amount` of TWG for one of the fixed durations (3, 6, 12 months)."
									},
									"functionSelector": "7b0472f0",
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 717,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 716,
												"name": "nonReentrant",
												"nameLocations": [
													"2285:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "2285:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2285:12:7"
										}
									],
									"name": "stake",
									"nameLocation": "2234:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2248:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2240:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "lockChoice",
												"nameLocation": "2264:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2256:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:36:7"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2298:0:7"
									},
									"scope": 1055,
									"src": "2225:728:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "3103:1041:7",
										"statements": [
											{
												"assignments": [
													789
												],
												"declarations": [
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "userStakes",
														"nameLocation": "3133:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3113:30:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo[]"
														},
														"typeName": {
															"baseType": {
																"id": 787,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 786,
																	"name": "StakeInfo",
																	"nameLocations": [
																		"3113:9:7"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 646,
																	"src": "3113:9:7"
																},
																"referencedDeclaration": 646,
																"src": "3113:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																	"typeString": "struct WallyStaking.StakeInfo"
																}
															},
															"id": 788,
															"nodeType": "ArrayTypeName",
															"src": "3113:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"baseExpression": {
														"id": 790,
														"name": "_stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "3146:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct WallyStaking.StakeInfo storage ref[] storage ref)"
														}
													},
													"id": 793,
													"indexExpression": {
														"expression": {
															"id": 791,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3154:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3158:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3154:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3146:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage",
														"typeString": "struct WallyStaking.StakeInfo storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3113:52:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 795,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "3216:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 796,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "3230:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo storage ref[] storage pointer"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3241:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3230:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3216:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "3212:63:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 799,
															"name": "InvalidLockChoice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "3256:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3256:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 801,
													"nodeType": "RevertStatement",
													"src": "3249:26:7"
												}
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "3304:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3286:27:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo"
														},
														"typeName": {
															"id": 804,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 803,
																"name": "StakeInfo",
																"nameLocations": [
																	"3286:9:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 646,
																"src": "3286:9:7"
															},
															"referencedDeclaration": 646,
															"src": "3286:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"baseExpression": {
														"id": 806,
														"name": "userStakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "3316:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo storage ref[] storage pointer"
														}
													},
													"id": 808,
													"indexExpression": {
														"id": 807,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "3327:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3316:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$646_storage",
														"typeString": "struct WallyStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3286:52:7"
											},
											{
												"condition": {
													"expression": {
														"id": 810,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3352:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo storage pointer"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3362:9:7",
													"memberName": "withdrawn",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 645,
													"src": "3352:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 815,
												"nodeType": "IfStatement",
												"src": "3348:50:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 812,
															"name": "AlreadyWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "3380:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3380:18:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 814,
													"nodeType": "RevertStatement",
													"src": "3373:25:7"
												}
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "3417:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3409:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3409:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 823,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 818,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3430:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo storage pointer"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3440:14:7",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 639,
														"src": "3430:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 820,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3457:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo storage pointer"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3467:12:7",
														"memberName": "lockDuration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 641,
														"src": "3457:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3430:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3409:70:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 824,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3493:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3499:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3493:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 826,
														"name": "unlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "3511:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3493:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 831,
												"nodeType": "IfStatement",
												"src": "3489:54:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 828,
															"name": "LockNotOver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "3530:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3530:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 830,
													"nodeType": "RevertStatement",
													"src": "3523:20:7"
												}
											},
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "principal",
														"nameLocation": "3562:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3554:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3554:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"expression": {
														"id": 834,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3574:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo storage pointer"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3584:6:7",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 637,
													"src": "3574:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3554:36:7"
											},
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "3608:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3600:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 837,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3600:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"expression": {
														"id": 839,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3621:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo storage pointer"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3631:12:7",
													"memberName": "lockDuration",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 641,
													"src": "3621:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3600:43:7"
											},
											{
												"assignments": [
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3704:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3696:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 842,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3696:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 844,
																		"name": "principal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "3714:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 845,
																			"name": "userStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "3726:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																				"typeString": "struct WallyStaking.StakeInfo storage pointer"
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3736:3:7",
																		"memberName": "apy",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 643,
																		"src": "3726:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3714:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 848,
																	"name": "timeStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "3742:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3714:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 850,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3713:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_315360000000_by_1",
																	"typeString": "int_const 315360000000"
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "333635",
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3757:8:7",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "365"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3768:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "3757:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_315360000000_by_1",
																	"typeString": "int_const 315360000000"
																}
															}
														],
														"id": 854,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3756:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_315360000000_by_1",
															"typeString": "int_const 315360000000"
														}
													},
													"src": "3713:61:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3696:78:7"
											},
											{
												"expression": {
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 857,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3785:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
																"typeString": "struct WallyStaking.StakeInfo storage pointer"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3795:9:7",
														"memberName": "withdrawn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 645,
														"src": "3785:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3807:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3785:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "3785:26:7"
											},
											{
												"assignments": [
													864
												],
												"declarations": [
													{
														"constant": false,
														"id": 864,
														"mutability": "mutable",
														"name": "totalPayment",
														"nameLocation": "3830:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3822:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 868,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 865,
														"name": "principal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "3845:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 866,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "3857:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3845:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:41:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 873,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3906:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_WallyStaking_$1055",
																			"typeString": "contract WallyStaking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_WallyStaking_$1055",
																			"typeString": "contract WallyStaking"
																		}
																	],
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3898:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 871,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3898:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3898:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 869,
																"name": "wallyToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "3877:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$521",
																	"typeString": "contract IERC20"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3888:9:7",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 478,
															"src": "3877:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3877:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 876,
														"name": "totalPayment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "3915:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3877:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "3873:84:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 878,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "3936:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3936:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 880,
													"nodeType": "RevertStatement",
													"src": "3929:28:7"
												}
											},
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3973:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3968:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 882,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3968:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 886,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4003:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4007:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4003:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "totalPayment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "4015:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 884,
															"name": "wallyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "3983:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$521",
																"typeString": "contract IERC20"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3994:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 488,
														"src": "3983:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3983:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3968:60:7"
											},
											{
												"condition": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4042:8:7",
													"subExpression": {
														"id": 891,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "4043:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "4038:42:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 893,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4059:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4059:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 895,
													"nodeType": "RevertStatement",
													"src": "4052:28:7"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 898,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4106:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4110:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4106:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "4118:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 901,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "4130:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 897,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "4096:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4096:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "EmitStatement",
												"src": "4091:46:7"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "2959:79:7",
										"text": " @dev Withdraw staked tokens + reward after lock period ends."
									},
									"functionSelector": "2e1a7d4d",
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 783,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 782,
												"name": "nonReentrant",
												"nameLocations": [
													"3090:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "3090:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3090:12:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "3052:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "3069:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3061:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3061:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3060:20:7"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3103:0:7"
									},
									"scope": 1055,
									"src": "3043:1101:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "4305:412:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 914,
														"name": "lockChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "4319:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4333:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "4319:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 926,
															"name": "lockChoice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "4433:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "36",
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4447:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "4433:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 938,
																"name": "lockChoice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "4547:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3132",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4561:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "4547:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 953,
															"nodeType": "Block",
															"src": "4660:51:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 950,
																			"name": "InvalidLockChoice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 596,
																			"src": "4681:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4681:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 952,
																	"nodeType": "RevertStatement",
																	"src": "4674:26:7"
																}
															]
														},
														"id": 954,
														"nodeType": "IfStatement",
														"src": "4543:168:7",
														"trueBody": {
															"id": 949,
															"nodeType": "Block",
															"src": "4565:89:7",
															"statements": [
																{
																	"expression": {
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 941,
																			"name": "chosenLock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 910,
																			"src": "4579:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 942,
																			"name": "LOCK_12_MONTHS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "4592:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4579:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 944,
																	"nodeType": "ExpressionStatement",
																	"src": "4579:27:7"
																},
																{
																	"expression": {
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 945,
																			"name": "chosenAPY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 912,
																			"src": "4620:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 946,
																			"name": "apy12Months",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "4632:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4620:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 948,
																	"nodeType": "ExpressionStatement",
																	"src": "4620:23:7"
																}
															]
														}
													},
													"id": 955,
													"nodeType": "IfStatement",
													"src": "4429:282:7",
													"trueBody": {
														"id": 937,
														"nodeType": "Block",
														"src": "4450:87:7",
														"statements": [
															{
																"expression": {
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 929,
																		"name": "chosenLock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "4464:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 930,
																		"name": "LOCK_6_MONTHS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "4477:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4464:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 932,
																"nodeType": "ExpressionStatement",
																"src": "4464:26:7"
															},
															{
																"expression": {
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 933,
																		"name": "chosenAPY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "4504:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 934,
																		"name": "apy6Months",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "4516:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4504:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 936,
																"nodeType": "ExpressionStatement",
																"src": "4504:22:7"
															}
														]
													}
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "4315:396:7",
												"trueBody": {
													"id": 925,
													"nodeType": "Block",
													"src": "4336:87:7",
													"statements": [
														{
															"expression": {
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 917,
																	"name": "chosenLock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "4350:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 918,
																	"name": "LOCK_3_MONTHS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "4363:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4350:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 920,
															"nodeType": "ExpressionStatement",
															"src": "4350:26:7"
														},
														{
															"expression": {
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 921,
																	"name": "chosenAPY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "4390:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 922,
																	"name": "apy3Months",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "4402:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4390:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 924,
															"nodeType": "ExpressionStatement",
															"src": "4390:22:7"
														}
													]
												}
											}
										]
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getLockInfo",
									"nameLocation": "4182:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "lockChoice",
												"nameLocation": "4203:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4195:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4195:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:20:7"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "chosenLock",
												"nameLocation": "4270:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4262:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "chosenAPY",
												"nameLocation": "4290:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4282:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4282:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:39:7"
									},
									"scope": 1055,
									"src": "4173:544:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "4887:242:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 971,
														"name": "apy3Months",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4901:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 972,
														"name": "_apy3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4915:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4901:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "4897:68:7",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "4922:43:7",
													"statements": [
														{
															"expression": {
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 974,
																	"name": "apy3Months",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "4936:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 975,
																	"name": "_apy3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "4949:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4936:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 977,
															"nodeType": "ExpressionStatement",
															"src": "4936:18:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 980,
														"name": "apy6Months",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "4978:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 981,
														"name": "_apy6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "4992:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4978:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"nodeType": "IfStatement",
												"src": "4974:68:7",
												"trueBody": {
													"id": 987,
													"nodeType": "Block",
													"src": "4999:43:7",
													"statements": [
														{
															"expression": {
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 983,
																	"name": "apy6Months",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "5013:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 984,
																	"name": "_apy6",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "5026:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5013:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 986,
															"nodeType": "ExpressionStatement",
															"src": "5013:18:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 989,
														"name": "apy12Months",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "5055:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 990,
														"name": "_apy12",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "5070:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5055:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 997,
												"nodeType": "IfStatement",
												"src": "5051:72:7",
												"trueBody": {
													"id": 996,
													"nodeType": "Block",
													"src": "5078:45:7",
													"statements": [
														{
															"expression": {
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 992,
																	"name": "apy12Months",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "5092:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 993,
																	"name": "_apy12",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "5106:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5092:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "5092:20:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "4723:46:7",
										"text": " @dev Admin can update APYs."
									},
									"functionSelector": "765ef4cc",
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 968,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 614,
													"src": "4871:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 967,
												"name": "onlyRole",
												"nameLocations": [
													"4862:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4862:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4862:20:7"
										}
									],
									"name": "setAPYs",
									"nameLocation": "4783:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "_apy3",
												"nameLocation": "4799:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "4791:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "_apy6",
												"nameLocation": "4814:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "4806:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4806:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "_apy12",
												"nameLocation": "4829:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "4821:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4790:46:7"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4887:0:7"
									},
									"scope": 1055,
									"src": "4774:355:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "5313:180:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1012,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "5327:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5341:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5333:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1013,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5333:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5333:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5327:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1021,
												"nodeType": "IfStatement",
												"src": "5323:45:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1018,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5352:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5352:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1020,
													"nodeType": "RevertStatement",
													"src": "5345:23:7"
												}
											},
											{
												"assignments": [
													1023
												],
												"declarations": [
													{
														"constant": false,
														"id": 1023,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5383:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1038,
														"src": "5378:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1022,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5378:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"arguments": [
														{
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "5423:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "5427:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1025,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "5400:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1024,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "5393:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$521_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5393:20:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$521",
																"typeString": "contract IERC20"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5414:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 488,
														"src": "5393:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5393:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5378:56:7"
											},
											{
												"condition": {
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5448:8:7",
													"subExpression": {
														"id": 1032,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "5449:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"nodeType": "IfStatement",
												"src": "5444:42:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1034,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "5465:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1036,
													"nodeType": "RevertStatement",
													"src": "5458:28:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "5135:51:7",
										"text": " @dev Rescue any leftover tokens."
									},
									"functionSelector": "b37fd190",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1009,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 614,
													"src": "5297:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1010,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1008,
												"name": "onlyRole",
												"nameLocations": [
													"5288:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5288:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5288:20:7"
										}
									],
									"name": "rescueTokens",
									"nameLocation": "5200:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "5221:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5213:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5213:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5243:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5235:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5235:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5259:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5251:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5212:50:7"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5313:0:7"
									},
									"scope": 1055,
									"src": "5191:302:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "5650:37:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1049,
														"name": "_stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "5667:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct WallyStaking.StakeInfo storage ref[] storage ref)"
														}
													},
													"id": 1051,
													"indexExpression": {
														"id": 1050,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "5675:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5667:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage",
														"typeString": "struct WallyStaking.StakeInfo storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1048,
												"id": 1052,
												"nodeType": "Return",
												"src": "5660:20:7"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "5499:70:7",
										"text": " @dev Public getter for a userâ€™s full stake array."
									},
									"functionSelector": "7ba6f458",
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakes",
									"nameLocation": "5583:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5601:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "5593:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5593:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5592:14:7"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "5630:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct WallyStaking.StakeInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 1045,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1044,
															"name": "StakeInfo",
															"nameLocations": [
																"5630:9:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 646,
															"src": "5630:9:7"
														},
														"referencedDeclaration": 646,
														"src": "5630:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$646_storage_ptr",
															"typeString": "struct WallyStaking.StakeInfo"
														}
													},
													"id": 1046,
													"nodeType": "ArrayTypeName",
													"src": "5630:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakeInfo_$646_storage_$dyn_storage_ptr",
														"typeString": "struct WallyStaking.StakeInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:20:7"
									},
									"scope": 1055,
									"src": "5574:113:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1056,
							"src": "807:4882:7",
							"usedErrors": [
								305,
								308,
								594,
								596,
								598,
								600,
								602,
								604
							],
							"usedEvents": [
								317,
								326,
								335,
								662,
								670
							]
						}
					],
					"src": "32:5657:7"
				},
				"id": 7
			}
		}
	}
}